{"version":3,"sources":["views/Controller/LaboratoryTestView/LaboratoryTestViewConstants.js","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","constants/index.js","constants/PREDEFINED_VALUES.js","_helper/axios.js","services/authRoles.js","_helper/logger.js","services/auth.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/Navbars/AdminNavbarLinks.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","assets/jss/material-dashboard-react/components/footerStyle.js","components/Footer/Footer.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardIconStyle.js","components/Card/CardIcon.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","services/user.service.js","services/sample.service.js","services/dataController.service.js","views/Dashboard/DashboardViewPage.jsx","assets/jss/material-dashboard-react/components/cardFooterStyle.js","components/Card/CardFooter.js","assets/jss/material-dashboard-react/components/customInputStyle.js","components/CustomInput/CustomInput.js","assets/jss/material-dashboard-react/components/autocompleteStyle.js","components/Autocomplete/Autocomplete.js","views/SampleV2/initialState.js","views/SampleV2/index.jsx","views/Trending/HighChatSettings.js","views/Trending/trendingConstants.js","views/Trending/TrendingViewPage.jsx","views/Controller/ReportedCompaniesView.jsx","views/Controller/PackageView.jsx","views/Controller/FuelKitView.jsx","views/Controller/FuelView.jsx","views/Controller/LaboratoryTestView/DisplayTableData.jsx","views/Controller/LaboratoryTestView/index.jsx","views/Controller/ShippingMethodView.jsx","views/Controller/index.jsx","views/Person/PersonViewPage.jsx","views/Reports/ReportsViewPage.jsx","views/OrderKits/OrderKitsViewPage.jsx","views/CheckList/CheckListViewPage.jsx","views/Environmental_lab_reports/Environmental_lab_reports.jsx","views/GC_FTIR_OIL_Report/GC_FTIR_OIL_Report.jsx","components/SwitchableTab/index.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Table/Table.js","_helper/formValidators.js","views/UserManagement/ManagerViewPage/index.jsx","views/UserManagement/EmployeeViewPage/index.jsx","views/UserManagement/CustomerViewPage/index.jsx","views/UserManagement/index.jsx","views/WorkFlowManagement/sectionConfig.js","views/WorkFlowManagement/InputField.js","views/WorkFlowManagement/index.js","routes.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","layouts/DashboardLayout.jsx","config/protected.route.js","config/copyright.config.js","layouts/LoginV3/index.js","index.js","config/index.js","views/Controller/LaboratoryTestView/initialState.js"],"names":["module","exports","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","limitType","id","name","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","buttonStyle","button","minWidth","backgroundColor","position","margin","fontSize","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","display","top","height","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","useStyles","makeStyles","styles","RegularButton","props","classes","children","size","className","muiClasses","onClick","rest","btnClasses","classNames","React","createElement","Button","Object","assign","todaysDate","moment","format","PRE_DEFINED_VALUES","PACKING","emailRegex","axios","Axios","create","httpsAgent","https","Agent","rejectUnauthorized","crossdomain","header","localStorage","getItem","constants","TOKEN_ID","config","SERVER","headerMultiPart","logger","configuration","DEBUG","console","log","arguments","constructor","showNotification","type","message","store","addNotification","insert","animationIn","animationOut","dismiss","duration","onScreen","_onLoad","callback","storedTodaysDate","TODAYS_DATE","setItem","removeItem","PRIVILAGE_ID","method","url","headers","then","response","data","role","this","authenticated","catch","error","window","history","replaceState","login","_ref","email","password","loginData","toLowerCase","trim","ReactGA","event","category","action","res","token","fname","surname","location","reload","logout","isAuthenticated","changeUser","userType","Redirect","to","authRole","AUTH_ROLE","dropdownStyle","theme","buttonLink","breakpoints","down","links","zIndex","linkText","popperClose","pooperResponsive","float","WebkitBoxShadow","popperNav","whiteColor","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","search","paddingTop","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","notificationData","openNotification","setOpenNotification","useState","openProfile","setOpenProfile","handleCloseNotification","handleCloseProfile","innerWidth","aria-owns","aria-haspopup","contains","target","currentTarget","Notifications","icons","Hidden","mdUp","implementation","Poppers","open","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","item","MenuItem","preventDefault","Person","_ref2","auth","headerStyle","appBar","borderBottom","flex","appResponsive","Header","appBarClasses","AppBar","Toolbar","href","routes","prop","indexOf","layout","path","makeBrand","smDown","AdminNavbarLinks","IconButton","aria-label","handleDrawerToggle","Menu","footerStyle","footer","bottom","borderTop","a","list","inlineBlock","REACT_APP_VERSION","process","Footer","Date","getYear","COMPANY_HREF","COMPANY_NAME_SHORT","sidebarStyle","drawerPaper","visibility","overflowY","drawerPaperRTL","logo","content","logoLink","logoLinkRTL","logoImage","img","backgroundSize","backgroundPosition","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","Sidebar","activeRoute","routeName","image","logoText","List","key","listItemClasses","whiteFontClasses","NavLink","activeClassName","ListItem","icon","Icon","rtlActive","ListItemText","rtlName","disableTypography","brand","src","alt","Drawer","variant","anchor","paper","onClose","ModalProps","keepMounted","undefined","backgroundImage","grid","GridItem","Grid","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","cardHeaderClasses","cardIconStyle","cardIcon","CardIcon","cardIconClasses","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","dashboardStyle","successText","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","cardTitleWhite","formControl","chips","flexWrap","chip","InputLabelGrey","MultilineTest","urlLink","textDecorationLine","CardFooterAlignment","SIFbutton","hidden","FileNameAlignment","register","async","formData","managerid","company","phone","slice","address","city","state","country","zipcode","clientid","USER_CONTROLLER_SERVER","status","DEFAULT_ERROR_ALERT","getTokenUser","getUsersList","issiftable","params","getUserById","result","toString","resetPassword","changePassword","updateUser","userInfo","deleteUser","_response","createCustomer","companyName","getCustomerList","getCustomerById","deleteCustomer","updateCustomer","createClientLocation","locationData","getCustomerLocationByID","getCustomerLocationByClient","updateClientLocation","deleteClientLocation","getAllLocation","getUsersByCustomerID","makeUserPrimary","createPrivilege","privilegeData","getUserPrivilege","userid","getUserPrivilegeByToken","c","getUserPrivilegeOptions","selection","selectionKey","updatePrivilege","privilegeid","deletePrivilege","GC_FTIR_OIL_Report_URL","SAMPLE_CONTROLLER_SERVER","createSIF","requireCustomLabIDSection","labid","getSIFList","limit","filter","sif","searchSIFList","searchSIFListCount","searchSIFListSingleParam","searchlike","searchquery","getSIFById","updateSIFById","deleteSIF","changeSIFStatus","finally","getSampleList","getSamplePendingList","newSampleList","values","isApproved","push","getRecentSampleList","isapproved","getSampleById","getAllTestOnLaiIb","updateSampleTestResult","body","updateSample","formValue","approveSample","downloadpdf","REPORTS_SERVER","generateAndDownloadpdf","sendMail","_ref3","mailMultiSIF","ids","labids","mailMultiPersonalSIF","emails","mailids","getPendingLabtestsByLabTestFilter","test_id","start_date","end_date","e","updatePendingLabtestsByLabTestFilter","lab_ref","test_ref","_ref4","disposeFuelTest","labRef","getWorkOrderSectionReportByDate","responseType","fileName","test_name","URL","createObjectURL","Blob","document","setAttribute","appendChild","click","createOrder","Location_error","shipping_address","shipping_city","shipping_state","shipping_country","shipping_zipcode","Shipping_Address","Billing_Email","Billing_contact","kit","Kit","quantity","Qauntity","isShippingTrackable","shipping_service","tracking_id","Tracking_id","Shipping_Service","getOrderList","_ref5","sortStatus","getOrderById","order_id","updateOrderById","deleteOrder","searchOrder","search_key","getOrderCountList","getShippingSeviceList","createCheckout","selected_checklists","Checklist_process","getCheckoutList","getCheckoutById","_id","updateCheckoutById","deleteCheckout","searchCheckout","getCheckoutTestList","createEnv_labreport","state_data","whitespace","RegExp","lab_id","reportPDF","FormData","append","emailCollection","project_no","coc_number","po","reportDate","error_message","getAllEnv_labreport","getEnv_labreportById","updateEnv_labreport","deleteEnv_labreport","downloadReportpdf","report_path","authorization","searchEnvLabReport","sendMailtoClient","GC_FTIR_OIL_Report_Create","sample_id","wo","GC_FTIR_OIL_Report_GetAll","GC_FTIR_OIL_Report_GetByID","GC_FTIR_OIL_Report_Update","GC_FTIR_OIL_Report_Delete","GC_FTIR_OIL_Report_Download_PDF","GC_FTIR_OIL_Report_Search","GC_FTIR_OIL_Report_MailClient","getPopulationAndStoreDataByTag","SERVICE_URL","fuelServices","packageServices","reportCompanies","getPopulationAndStoreDataByTagError","createFuel","fuelName","getFuelList","deleteFuel","fuelById","value","updateFuel","getLabTestResultType","createLabTest","getLabTestList","getLabTestListByDate","getLabTestById","updateLabTest","deleteLabTest","createFuelKit","getKitList","getKitById","updateFuelKit","deletetKit","createPackage","getAllPackage","updatePackage","getPackageById","deletePackage","getComponentMake","getRushList","days","reportCompanyCreate","companyData","phone1","phone2","companyResponse","reportLogoUpload","reportCompanyList","reportCompanyGetId","reportCompanyUpdate","selectedid","reportCompanyDelete","createShippingMethod","cost","getShippingMethodList","getShippingMethodById","updateShippingMehtodById","deleteShippingMethod","getAdminChecklist","_renderDashboard","DashboardViewPage","Component","super","componentDidMount","_loadData","setState","isLoading","isPendingSIFView","isArchivedSIFView","isCompletedSIFView","sampleService","count","sifList","sifPendingCount","pending","sifCompletedCount","completed","sifArchivedCount","archived","getpdf","_renderAdminDash","_renderHeader","xs","md","Loader","tableResponsive","Table","table","TableHead","TableRow","tableHeadRow","TableCell","tableCell","tableHeadCell","TableBody","tabIndex","tableBodyRow","PictureAsPdfIcon","customer","additionalemail","_renderManagerDashboard","_renderEmployeeDashboard","_renderCustomerDashboard","sampleid","wolocation","datein","render","withStyles","cardFooterStyle","cardFooter","alignItems","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","customInputStyle","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","labelRootError","labelRootSuccess","feedback","CustomInput","formControlProps","labelText","labelProps","inputProps","onChange","labelClasses","underlineClasses","FormControl","InputLabel","htmlFor","Input","root","Clear","Check","CustomDateRangePicker","DateRangePicker","CustomMultiEmailInput","onKeyDown","onPaste","CustomDropBox","selectProps","valuekey","selectedValue","Select","labelId","renderValue","selected","Chip","label","autocompleteStyle","autocomplete","RegularAutocomplete","autocompleteClasses","Autocomplete","customerList","fuelList","packageList","labTestList","componentMakeList","rushList","reportCompList","isSIFLoading","locationList","onShowSIFTab","isCreateSIF","selectedPriority","dueDate","tz","add","selectedFuelTest","selectedCustomer","customerId","customerName","tankCapacity","tankQuantity","componentModel","woLocation","selectedFuelTypes","applicableTest","labId","sampleLoc","comment","isEditSIF","woZipCode","componentMake","selectedSif","collectionDate","serialNumber","selectedCustomerError","isDisabled","emailError","selectedPackage","triggerMessage","page","rowsPerPage","SelectedComponentMake","originalSIFList","selectedReportComp","selectedpdf","searchValue","multiLabIDSelected","index","disabledNext","disabledPrev","sifStatus","defaultLocation","location_value","locationupdatedId","Available_SifList","dataAvailable","dataValue","customercomment","comments","selectedFuelTestComment","selectedTestResult","customLabID","createdDate","SampleViewPageV2","_this","sessionStorage","JSON","parse","Array","dataControllerService","concat","userService","stringify","err","_handleReset","_handleLocationSelection","customername","temp","tempEmail","primaryemail","reportcomp","i","customerNames","locationId","_handlePrioritySelection","_handleReportCompSelection","_handleComponentMakeSelection","_handleFuelSelection","seletedFuel","applicableTestID","testid","labtest","_handlePackageSelection","currentTestAvailableID","newSelectedTestID","current","present","newTestApplicable","newid","_handleTestResultSelection","selectedTest","tempChange","selectedKey","_handleTestSelection","onFileSelect","files","handleKeyDown","evt","includes","_handleEmailIsValid","_handleEmailAddChange","_handleEmailRemoveChange","_handleEmailPasteChange","clipboardData","getData","match","toBeAdded","_handleEmailIsInList","_handleChangePage","newPage","_handleChangeRowsPerPage","onCreateSIF","fuelTest","formdata","customerid","locationid","priority","due","tankcapacity","quantitytank","componentmodel","wozipcode","fuel","fueltest","serial","componentmake","collectiondate","customeraddress","customercity","customerstate","customercountry","customerzipcode","package","confirmAlert","buttons","getSIFbyID","findIndex","x","_setToggleButtonAvailability","tempFuel","selectedComponetntMake","make","split","join","samplelocation","sifIndex","testRes","getresult","updateSifByID","changeMultipleSIFStatus","_resetCheck","_handleResultValue","_handleCustomerCommentValue","_handleSearchFilter","_handleSearchValue","_sendMail","_handleCollectionDate","generateNew","getElementById","checked","_handleMultiSIFsend","_handleMultiSelect","_handleSelectAll","_handleRequireCustomLabIDSection","_deleteFuelTextSelected","fuelTestId","_handleCreatedDate","_renderTestUpdate","single","required","DeleteForeverIcon","fullWidth","Fragment","toggleNext","bind","togglePrev","TextField","floatingLabel","multiline","rows","rowsMax","_renderSIFTable","BorderColorIcon","TablePagination","component","onChangePage","onChangeRowsPerPage","_renderSIFForm","newValue","options","getOptionLabel","option","autoComplete","includeInputInList","renderInput","shrink","multiple","packageError","FormControlLabel","control","Checkbox","defaultChecked","data-toggle","aria-controls","aria-selected","justify","focusable","aria-hidden","d","_renderAlert","Popup","initialState","_handleEmailIsIsEmail","sifID","CONFIG_CONSTANTS","mapOptions","text","credits","enabled","mapNavigation","tooltip","headerFormat","pointFormat","series","mapData","mapDataUSA","nullColor","showInLegend","point","events","pieOptions","plotBackgroundColor","plotBorderWidth","plotShadow","plotOptions","pie","allowPointSelect","dataLabels","colorByPoint","y","sliced","monthNames","monthlyCountOptions","xAxis","categories","labels","formatter","yAxis","testResultsOptions","sampleCountOptions","step","INITIAL_STATE","workOrders","sampleLocations","selectedWorkOrder","selectedSampleLocation","selectedWOLocation","selectedDateOut","selectedDateOutStart","selectedDateOutEnd","selectedTestCount","testResults","testPassFail","submittedCount","pendingCount","completedCount","failedCount","customers","selectedLocationId","locations","dateOuts","chartsUpdated","ready","sampleLocationsMap","dateOutRange","years","selectedYear","skip","loading","TEST_KEYS_IN_SAMPLE","SAMPLE_TEST_BAR_GRAPH_TEST_KEYS","proj4","highchartsMap","Highcharts","TrendingViewPage","sort","b","localeCompare","processData","_result","totalPending","totalCompleted","failed","passedCount","passed","pieChart","setData","resultConversion","toFixed","selectTest","results","forEach","sample","dt","dateout","dtStr","getFullYear","getMonth","getDate","fueltests","ft","rv","sortedResults","sortedData","v","parseFloat","sortedCategories","testResultsChart","setTitle","setCategories","update","align","selectSampleByTest","samples","counts","monthlyCounts","workOrdersArray","sampleLocationsArray","dateOutsArray","sampleLocationMap","testKeys","yearKeys","dropNewYear","isfailed","geolat","geolon","z","sampleCount","lat","lon","passCount","month","year","sampleKey","dateStr","fullDateStr","sampleLocationMapArray","keys","countsArray","monthlyCountsArray","idx","sampleCounts","sampleCountsChart","mapChart","monthlyCountsChart","el","_reloadData","startDate","endDate","selectedLocation","dateoutstart","dateoutend","locationName","updateSearch","field","updateField","newState","changeYear","changeDateOutRange","range","_renderGraph","HighchartsReact","ref","allowChartUpdate","constructorType","highcharts","_renderSearchFilters","_loadMore","componentDidUpdate","shouldComponentUpdate","nextProps","nextState","ReportedCompanies","loadCompanyList","companyList","isCreate","isEdit","onCreate","getCompany","details","onUpdate","onDelete","onChangeLogo","_handleValidate","_renderList","_renderForm","maxWidth","PackageView","_onLoadData","getAllPackages","selectedLabTest","selectedLabTestList","packageName","isViewPackageDetails","isCreatePackage","LabTestList","_handleLabTestSelection","onCreatePackage","testname","tempids","onUpdatePackage","onDeletePackage","_renderPackageTab","isViewFuel","FuelKitView","getFuelKitList","fuelKitName","selectedFuelKit","isViewFuelKit","fuelKitNameError","isCreateKit","addFuelKit","kitList","getFuelKitById","onDeleteKit","onUpdateKit","_renderKitTab","FuelView","selectedFuel","fuelNameError","isCreateFuel","addFuel","getFuelById","onDeleteFuel","onUpdateFuel","_renderFuelTab","hover","tableConfig","tablePopulationControlValue","keyPair","LaboratoryTestView","onDeleteLabTest","handleReset","tablePopulationControlValueIndex","LaboratoryTestViewConstants","addEventListener","_handlePredefinedValues","labTestName","labTestMethod","labTestDLT","isViewLabTest","labTestNameError","selectedResultType","selectedFuelList","isCreateLabTest","selectedLabTestLimit","selectedLabTestLimitFuel","labTextLimitText","labTestLimitValue","labTestLimitAdditionError","selectedLabTestResponseLimit","selectedLimitIndex","isLimitEdit","labTestLimitMinComment","labTestLimitMaxComment","selectedResultValue","LabTestResultValue","resultValues","showPredefinedValues","resultValue","LabTestResultType","_handleResultSelection","_handleResultValueSelection","_handleDeleteResultValue","toBeRemoved","_handleLimitSelection","_handleLimitFuelSelection","onCreateLabTest","dlt","resulttype","fuels","resultfuelid","limits","onUpdateLabTest","onCreateLimitLabTest","limittext","maxcomment","mincomment","limitype","responseLimits","onDeleteLabTestLimit","newLimit","onUpdateLabTestLimitSelection","selectedLimit","fuelid","onUpdateLabTestLimit","deleteData","_renderLabTestLimit","handleTableResetData","_renderLabTestTab","DisplayTableData","ShippingMethod","selectedMethod","isViewMethod","nameError","costError","durationError","isCreateMethod","ShippingList","onDeleteMethod","_renderShippingMethodTab","ControllerViewPage","UNSAFE_componentWillMount","onChangeTab","onShowing","renderstate","Fuel","FuelKit","LaboratoryTest","Package","PersonViewPage","_getProfile","newPassword","newPasswordConfirm","emnewPasswordail","newPasswordError","ReportsViewPage","mailpdf","mailEmail","_renderMailOption","attention","bid_number","bcontact","isCreateOrder","onShowOrderTab","isEditOrder","selectedManager","selectedShippingMethod","selectedKit","selectedKitID","selectedShippingMethodId","selectedManagerId","isLocation","address_check","ErrorMessage","shipping_name","shipping_cost","selectedShippingService","selectedShippingServiceId","shipping_account","return_lable_check","return_label_quantity","return_label_cost","purchase_order","charge_card","pendingOrderList","completeOrderList","isCompletedOrderView","isPendingOrderView","orderStatus","created_by","shipping_created_at","selectedPacking","OrderKitsViewPage","_getOrderCountList","_getOrderList","_getLocationList","_getShippingMethodList","_getFuelKitList","_getManagerList","_getShippingSeviceList","_getPackaging","packingList","orderPendingCount","orders_pending","orderCompletedCount","orders_completed","orderList","managerList","shippingServiceList","_handleKitSelection","_handleShippingMethodSelection","_handleManagerSelection","_handleSelectShippingAddress","_handlePackingSelection","_handleShippingSeviceSelection","trackable","_handleSelectReturnLabel","_handleSelectChargeCard","_handleTrackingURL","shipping_service_url","pay","shipping_service_payload","shipping_service_key","Dummypay","substring","dummyurl","NumberFormatCustom","inputRef","other","NumberFormat","getInputRef","onValueChange","isNumericString","prefix","decimalScale","fixedDecimalScale","_onCreateOrderKit","shipping_method","packing","getOrderbyID","location_name","created_by_fname","created_by_surname","$numberDecimal","_renderOrderForm","InputProps","inputComponent","_renderOrderKitTable","kit_name","shipping_service_name","Link","createdAt","CheckoutListViewPage","_getCheckoutList","checklist","_getCheckoutTestList","isCreateCheckoutlist","isEditCheckoutList","tank_id","isOrderLoading","checkout_id","updated_by","on_date","inspector_name","test_values","selectedTest_value","defaultselectedTest","selectSingleTestValue","ele","sub_categorys","sub_cat","checkoutList","checkoutTestList","_handleTestValueSelection","_onCreateCheckout","test_value","_getCheckoutbyID","isTestSelected","updated_by_fname","updated_by_surname","updated_at","_updateCheckoutListById","_deleteCheckout","_renderCheckoutListForm","selectedTestonUpdate","_getCheckOutServices","_renderCheckoutListTable","_handleCheckListService","dataList","dense","ListItemIcon","date","toLocaleString","Environmental_lab_reports","_getAllEnv_labreport","file_name","record_id","onEditLabRecord","po_number","_handleReportDate","_uploadPDF","dofileUpload","handleFile","Env_labreportList","_getEnv_labreportById","coc","project_number","reported_at","_updateEnv_labreport","_deleteEnv_labreport","accept","_renderTable","GC_FTIR_OIL_Report","SwitchableTab","selectedIndex","tabValues","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","borderSpacing","borderCollapse","spacing","overflowX","outline","CustomTable2","tableHead","tableData","tableKey","tableHeaderColor","setPage","setRowsPerPage","propKey","orderForm","formFields","validatorStatus","phoneError","stateError","cityError","addressError","fuelError","countryError","bidError","deliveryError","priorityError","shippingPhone","shippingEmail","shippingAddress","shippingCity","shippingState","shippingCountry","shippingZipcode","shippingMethod","zipCodeError","loginForm","passwordError","managerForm","fNameError","lNameError","pinCodeError","employeeForm","managerError","customerForm","customerLocationForm","customerUserForm","_ref6","bid","returnLabel","ground","shippingAddressError","attentionError","bcontactError","emailCollectionError","returnLabelError","groundError","kitError","ManagerViewPage","fetchInfo","isView","onDeleteUser","onUpdateUser","_onCreateProfile","validate","EmployeeViewPage","employeeList","onCreateProfile","onDeleteProfile","onUpdateProfile","CustomerViewPage","reportedCompaniesList","usertype","fetchCustomerInfo","getPrivilegeOptions","loadReportCompanies","isViewUserForm","isViewUser","isViewLocationForm","isViewLocation","isViewLocationDetails","isViewPrivilege","customerUserList","customerLocationList","selectedCompany","userPrimary","isEditLocationForm","isViewUserFormEdit","locationAddress","locationCity","locationState","locationCountry","locationZipcode","locationEmailValue","locationEmailCollection","selectedLocationIndex","loocationPhone","privilegeList","selectedUsersList","userFname","userSurname","userEmail","userPhone","userAddress","userCity","uesrState","userCountry","userZipcode","userAdditionalEmail","selectedUserID","privilegeOptionSelection","locationPhoneError","userPhoneError","onCreateCustomer","newCompanyName","client","users","customerLocationListExt","permission","onUpdateCustomerUser","onCreateUser","userData","getUserByCustomerID","_handleView","getUserByID","selectedReportedCompany","onCreateLocation","locationPhone","selectedUser","user","usercollection","getLocationByClientID","getLocationByID","selectedPrimaryUser","selectReportComp","reportComp","tempUserCollection","onUpdateLocation","onDeleteLocation","privilegeOptions","_handleUserSelection","_handleLocationSearch","_handleUserSearch","_handleCustomerSelection","_handleUserSelectionInfo","_handleCheckbox","selectedOption","_handleMultiUserSelectionInfo","_handleCustomerChangePage","customerListPage","_handleCustomerChangeRowsPerPage","customerListRowsPerPage","viewtype","view","isViewPrivilegeForm","_checkAccess","admin","isedit","isadmin","iscreate","_renderPrivilegeForm","TableContainer","stickyHeader","_renderPrivilegeSelection","isarchive","issent","isview","_renderLocationForm","validator","_renderLocationtable","primaryphone","_renderUserForm","_renderUsertable","_renderCustomerProfileCards","PinDropIcon","UserManagement","changeSelectedIndex","renderSection","setRenderSection","changeSection","MyTabConfig","useEffect","userManagementConfig","tableColumns","editable","defaultLabel","InputField","refValue","availableInputDataSet","testRecords","selectedtestRecord","dateReceived","tableRecords","WorkFlowManagement","_initializeData","getLabTests","getTableData","updateTestValue","eventData","recordRef","testResult","testRefId","_handletestSelection","_handleChangeDateOutRange","RenderRow","downloadReport","selectedTestName","sectionConfig","Math","random","workFlowManagementConfig","authorizedUserOnlyPermission","employeeLevelPermission","customerOnlyPermission","dashboardRoutes","Dashboard","DashboardPage","ReportPage","Sample","workFlowManagement","InsertChart","Trending","OrderKits","CheckList","LibraryBooks","Controller","userManagement","appStyle","wrapper","mainPanel","ps","switchRoutes","Switch","Route","from","exact","pathname","Copyright","Typography","LoginV3","setEmail","setPassword","onSubmit","class","placeholder","Box","mt","hist","createBrowserHistory","initialize","ReactDOM","ReactNotification","Router","ProtectedRoute","createRef","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","removeEventListener","Navbar","REACT_APP_SERVER","REACT_APP_DATA_CONTROLLER_SERVER","DATA_CONTROLLER_SERVER","REACT_APP_USER_CONTROLLER_SERVER","REACT_APP_SAMPLE_CONTROLLER_SERVER","REACT_APP_REPORTS_SERVER","REACT_APP_COMPANY_NAME","COMPANY_NAME","REACT_APP_COMPANY_NAME_SHORT","REACT_APP_COMPANY_HREF","REACT_APP_COMPANY_BRIEF","COMPANY_BRIEF","REACT_APP_COMPANY_SUMMERY","COMPANY_SUMMERY","REACT_APP_DEBUG","REACT_APP_CLIENT_ID","CLIENT_ID"],"mappings":"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","file":"static/js/main.422ae00e.chunk.js","sourcesContent":["const ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nmodule.exports = {\n  MenuProps: {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  },\n  limitType: [\n    { id: \"min\", name: \"min\" },\n    { id: \"max\", name: \"max\" },\n    { id: \"between\", name: \"between\" },\n  ]\n\n}","const hexToRgb = input => {\n  input = input + \"\";\n  input = input.replace(\"#\", \"\");\n  let hexRegex = /[0-9A-Fa-f]/g;\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\n    throw new Error(\"input is not a valid hex color.\");\n  }\n  if (input.length === 3) {\n    let first = input[0];\n    let second = input[1];\n    let last = input[2];\n    input = first + first + second + second + last + last;\n  }\n  input = input.toUpperCase(input);\n  let first = input[0] + input[1];\n  let second = input[2] + input[3];\n  let last = input[4] + input[5];\n  return (\n    parseInt(first, 16) +\n    \", \" +\n    parseInt(second, 16) +\n    \", \" +\n    parseInt(last, 16)\n  );\n};\n\n// ##############################\n// // // Variables - Styles that are used on more than one component\n// #############################\n\nconst drawerWidth = 260;\n\nconst transition = {\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\n};\n\nconst container = {\n  paddingRight: \"15px\",\n  paddingLeft: \"15px\",\n  marginRight: \"auto\",\n  marginLeft: \"auto\"\n};\n\nconst defaultFont = {\n  fontFamily: '\"Ubuntu\", sans-serif',\n  // fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  fontWeight: \"300\",\n  lineHeight: \"1.5em\"\n};\n\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\nconst grayColor = [\n  \"#999\",\n  \"#777\",\n  \"#3C4858\",\n  \"#AAAAAA\",\n  \"#D2D2D2\",\n  \"#DDD\",\n  \"#b4b4b4\",\n  \"#555555\",\n  \"#333\",\n  \"#a9afbb\",\n  \"#eee\",\n  \"#e7e7e7\"\n];\nconst blackColor = \"#000\";\nconst whiteColor = \"#FFF\";\n\nconst boxShadow = {\n  boxShadow:\n    \"0 10px 30px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 4px 25px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\"\n};\n\nconst primaryBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(primaryColor[0]) +\n    \",.4)\"\n};\nconst infoBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(infoColor[0]) +\n    \",.4)\"\n};\nconst successBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(successColor[0]) +\n    \",.4)\"\n};\nconst warningBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(warningColor[0]) +\n    \",.4)\"\n};\nconst dangerBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(dangerColor[0]) +\n    \",.4)\"\n};\nconst roseBoxShadow = {\n  boxShadow:\n    \"0 4px 20px 0 rgba(\" +\n    hexToRgb(blackColor) +\n    \",.14), 0 7px 10px -5px rgba(\" +\n    hexToRgb(roseColor[0]) +\n    \",.4)\"\n};\n\nconst warningCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\n  ...warningBoxShadow\n};\nconst successCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\n  ...successBoxShadow\n};\nconst dangerCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\n  ...dangerBoxShadow\n};\nconst infoCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\n  ...infoBoxShadow\n};\nconst primaryCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\n  ...primaryBoxShadow\n};\nconst roseCardHeader = {\n  background:\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\n  ...roseBoxShadow\n};\n\nconst cardActions = {\n  margin: \"0 20px 10px\",\n  paddingTop: \"10px\",\n  borderTop: \"1px solid \" + grayColor[10],\n  height: \"auto\",\n  ...defaultFont\n};\n\nconst cardHeader = {\n  margin: \"-20px 15px 0\",\n  borderRadius: \"3px\",\n  padding: \"15px\"\n};\n\nconst card = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"100%\",\n  margin: \"25px 0\",\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n  borderRadius: \"3px\",\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n  background: whiteColor\n};\n\nconst defaultBoxShadow = {\n  border: \"0\",\n  borderRadius: \"3px\",\n  boxShadow:\n    \"0 10px 20px -12px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.42), 0 3px 20px 0px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.12), 0 8px 10px -5px rgba(\" +\n    hexToRgb(blackColor) +\n    \", 0.2)\",\n  padding: \"10px 0\",\n  transition: \"all 150ms ease 0s\"\n};\n\nconst title = {\n  color: grayColor[2],\n  textDecoration: \"none\",\n  fontWeight: \"300\",\n  marginTop: \"30px\",\n  marginBottom: \"25px\",\n  minHeight: \"32px\",\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n  \"& small\": {\n    color: grayColor[1],\n    fontWeight: \"400\",\n    lineHeight: \"1\"\n  }\n};\n\nconst cardTitle = {\n  ...title,\n  marginTop: \"0\",\n  marginBottom: \"3px\",\n  minHeight: \"auto\",\n  \"& a\": {\n    ...title,\n    marginTop: \".625rem\",\n    marginBottom: \"0.75rem\",\n    minHeight: \"auto\"\n  }\n};\n\nconst cardSubtitle = {\n  marginTop: \"-.375rem\"\n};\n\nconst cardLink = {\n  \"& + $cardLink\": {\n    marginLeft: \"1.25rem\"\n  }\n};\n\nexport {\n  hexToRgb,\n  //variables\n  drawerWidth,\n  transition,\n  container,\n  boxShadow,\n  card,\n  defaultFont,\n  primaryColor,\n  warningColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  blackColor,\n  whiteColor,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  cardActions,\n  cardHeader,\n  defaultBoxShadow,\n  title,\n  cardTitle,\n  cardSubtitle,\n  cardLink\n};\n","import {\n  grayColor,\n  primaryColor,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  roseColor,\n  whiteColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst buttonStyle = {\n  button: {\n    minHeight: \"auto\",\n    minWidth: \"auto\",\n    backgroundColor: grayColor[0],\n    color: whiteColor,\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(grayColor[0]) +\n      \", 0.12)\",\n    border: \"none\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    padding: \"12px 30px\",\n    margin: \".3125rem 1px\",\n    fontSize: \"12px\",\n    fontWeight: \"400\",\n    textTransform: \"uppercase\",\n    letterSpacing: \"0\",\n    willChange: \"box-shadow, transform\",\n    transition:\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\n    lineHeight: \"1.42857143\",\n    textAlign: \"center\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\",\n    touchAction: \"manipulation\",\n    cursor: \"pointer\",\n    \"&:hover,&:focus\": {\n      color: whiteColor,\n      backgroundColor: grayColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(grayColor[0]) +\n        \", 0.2)\"\n    },\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      marginTop: \"-1em\",\n      marginBottom: \"-1em\",\n      fontSize: \"1.1rem\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"& svg\": {\n      position: \"relative\",\n      display: \"inline-block\",\n      top: \"0\",\n      width: \"18px\",\n      height: \"18px\",\n      marginRight: \"4px\",\n      verticalAlign: \"middle\"\n    },\n    \"&$justIcon\": {\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        marginTop: \"0px\",\n        position: \"absolute\",\n        width: \"100%\",\n        transform: \"none\",\n        left: \"0px\",\n        top: \"0px\",\n        height: \"100%\",\n        lineHeight: \"41px\",\n        fontSize: \"20px\"\n      }\n    }\n  },\n  white: {\n    \"&,&:focus,&:hover\": {\n      backgroundColor: whiteColor,\n      color: grayColor[0]\n    }\n  },\n  rose: {\n    backgroundColor: roseColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(roseColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: roseColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(roseColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(primaryColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(primaryColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  success: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(successColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 2px 2px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.14), 0 3px 1px -2px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.2), 0 1px 5px 0 rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \", 0.12)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 14px 26px -12px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.42), 0 4px 23px 0px rgba(\" +\n        hexToRgb(blackColor) +\n        \", 0.12), 0 8px 10px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \", 0.2)\"\n    }\n  },\n  simple: {\n    \"&,&:focus,&:hover\": {\n      color: whiteColor,\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"&$rose\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: roseColor[0]\n      }\n    },\n    \"&$primary\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: primaryColor[0]\n      }\n    },\n    \"&$info\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: infoColor[0]\n      }\n    },\n    \"&$success\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: successColor[0]\n      }\n    },\n    \"&$warning\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: warningColor[0]\n      }\n    },\n    \"&$danger\": {\n      \"&,&:focus,&:hover,&:visited\": {\n        color: dangerColor[0]\n      }\n    }\n  },\n  transparent: {\n    \"&,&:focus,&:hover\": {\n      color: \"inherit\",\n      background: \"transparent\",\n      boxShadow: \"none\"\n    }\n  },\n  disabled: {\n    opacity: \"0.65\",\n    pointerEvents: \"none\"\n  },\n  lg: {\n    padding: \"1.125rem 2.25rem\",\n    fontSize: \"0.875rem\",\n    lineHeight: \"1.333333\",\n    borderRadius: \"0.2rem\"\n  },\n  sm: {\n    padding: \"0.40625rem 1.25rem\",\n    fontSize: \"0.6875rem\",\n    lineHeight: \"1.5\",\n    borderRadius: \"0.2rem\"\n  },\n  round: {\n    borderRadius: \"30px\"\n  },\n  block: {\n    width: \"100% !important\"\n  },\n  link: {\n    \"&,&:hover,&:focus\": {\n      backgroundColor: \"transparent\",\n      color: grayColor[0],\n      boxShadow: \"none\"\n    }\n  },\n  justIcon: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    fontSize: \"20px\",\n    height: \"41px\",\n    minWidth: \"41px\",\n    width: \"41px\",\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\n      marginRight: \"0px\"\n    },\n    \"&$lg\": {\n      height: \"57px\",\n      minWidth: \"57px\",\n      width: \"57px\",\n      lineHeight: \"56px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"32px\",\n        lineHeight: \"56px\"\n      },\n      \"& svg\": {\n        width: \"32px\",\n        height: \"32px\"\n      }\n    },\n    \"&$sm\": {\n      height: \"30px\",\n      minWidth: \"30px\",\n      width: \"30px\",\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"17px\",\n        lineHeight: \"29px\"\n      },\n      \"& svg\": {\n        width: \"17px\",\n        height: \"17px\"\n      }\n    }\n  }\n};\n\nexport default buttonStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularButton(props) {\n  const classes = useStyles();\n  const {\n    color,\n    round,\n    children,\n    disabled,\n    simple,\n    size,\n    block,\n    link,\n    justIcon,\n    className,\n    muiClasses,\n    onClick,\n    ...rest\n  } = props;\n  const btnClasses = classNames({\n    [classes.button]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [classes.round]: round,\n    [classes.disabled]: disabled,\n    [classes.simple]: simple,\n    [classes.block]: block,\n    [classes.link]: link,\n    [classes.justIcon]: justIcon,\n    [className]: className\n  });\n  return (\n    <Button {...rest} onClick={onClick} classes={muiClasses} className={btnClasses}>\n      {children}\n    </Button>\n  );\n}\n\nRegularButton.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"rose\",\n    \"white\",\n    \"transparent\"\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  link: PropTypes.bool,\n  justIcon: PropTypes.bool,\n  className: PropTypes.string,\n  // use this to pass the classes props from Material-UI\n  muiClasses: PropTypes.object,\n  children: PropTypes.node\n};\n","import moment from 'moment';\nimport PRE_DEFINED_VALUES from './PREDEFINED_VALUES';\n\nconst todaysDate = moment().format(\"MMM Do YY\");\n\nexport default {\n    todaysDate,\n    \"TODAYS_DATE\": \"MOwp20-LLoepq-81239Oekm\",\n    \"TOKEN_ID\": \"lsoOPss-JDneoa-Owqp1299aS\",\n    \"PRIVILAGE_ID\": \"lsoOPss-JDneoa-Pqelx4nas\",\n    \"DEFAULT_ERROR_ALERT\": \"Oops, something went wrong!\",\n    \"Location_error\": \"Location is Required\",\n    \"Checklist_process\": \"Checklist Process is Required\",\n    \"Sample_id\": \"Sample Id is Required.\",\n    \"Shipping_Address\": \"Shipping Address is Required.\",\n    \"Billing_contact\": \"Billing Contact is Required.\",\n    \"Billing_Email\": \"Billing Email Id is Required.\",\n    \"Kit\": \"Kit is Required.\",\n    \"Qauntity\": \"quantity is Required.\",\n    \"Tracking_id\": \"Tracking Id is Required.\",\n    \"Shipping_Service\": \"Shipping Service is Required.\",\n    PRE_DEFINED_VALUES,\n    emailRegex: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n}","export default {\n    PACKING: [\"Select One\",\"Single Box\", \"Multiple Box\"]\n}","import Axios from 'axios';\nimport https from 'https'\n\nimport config from \"config\";\nimport constants from 'constants/index'\n\nconst axios = Axios.create({\n    httpsAgent: new https.Agent({\n        rejectUnauthorized: false\n    }),\n    // mode: \"cors\",\n    crossdomain: true,\n})\n\nexport default axios\n\nexport const header = {\n    'authorization': `Bearer ${localStorage.getItem(constants.TOKEN_ID)}`,\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': config.SERVER\n}\n\nexport const headerMultiPart = {\n    'authorization': `Bearer ${localStorage.getItem(constants.TOKEN_ID)}`,\n    'Access-Control-Allow-Origin': config.SERVER\n}","export default {\n    \"F9md4cafLc98pfX8fTp6pW9P\": \"admin\",\n    \"admin\": \"F9md4cafLc98pfX8fTp6pW9P\",\n    \"sLVXTwSnwM56Z2HmVmTN5jGb\":\"manager\",\n    \"manager\":\"sLVXTwSnwM56Z2HmVmTN5jGb\",\n    \"QxhXJ3sxuga6ssderbN66NDz\": \"employee\",\n    \"employee\": \"QxhXJ3sxuga6ssderbN66NDz\",\n    \"USTwhNzMQt9jaGZRDtr6SybV\": \"customer\",\n    \"customer\": \"USTwhNzMQt9jaGZRDtr6SybV\",\n}","import configuration from \"config\";\n\nconst logger = (...rest) => {\n  if (configuration.DEBUG)\n    console.log(...rest);\n  return true\n}\n\nexport default logger;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { store } from 'react-notifications-component';\nimport ReactGA from 'react-ga';\n\nimport constants from 'constants/index'\nimport axios, { header } from '_helper/axios'\nimport config from \"config\";\nimport AUTH_ROLE from './authRoles'\nimport logger from '_helper/logger';\n\nconst todaysDate = constants.todaysDate;\nclass Auth {\n    constructor() {\n        this.authenticated = true;\n        this._onLoad(() => console.log(`Loading...`))\n    }\n\n    showNotification = (type, message) => {\n        store.addNotification({\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 5000,\n                onScreen: true\n            }\n        });\n    }\n\n    _onLoad = callback => {\n        let storedTodaysDate = localStorage.getItem(constants.TODAYS_DATE);\n        if (!storedTodaysDate)\n            localStorage.setItem(constants.TODAYS_DATE, todaysDate)\n\n        if (storedTodaysDate != todaysDate) {\n            localStorage.removeItem(constants.TODAYS_DATE);\n            localStorage.removeItem(constants.TOKEN_ID);\n            localStorage.removeItem(constants.PRIVILAGE_ID);\n        }\n\n        if (!localStorage.getItem(constants.TOKEN_ID)) {\n            this.authenticated = false;\n            window.history.replaceState(null, null, \"/login\");\n        }\n        else if (localStorage.getItem(constants.TOKEN_ID)) {\n            // console.log(localStorage.getItem(constants.TOKEN_ID))\n            axios({\n                method: 'get',\n                url: config.SERVER + 'users/',\n                headers: header\n            }).then(response => {\n                localStorage.setItem(constants.PRIVILAGE_ID, response.data.role)\n                this.authenticated = true;\n                callback(true)\n            }).catch((error) => {\n                this.authenticated = false;\n                window.history.replaceState(null, null, \"/\");\n            })\n        }\n\n    }\n\n    login = ({ email, password }, callback) => {\n        logger(`Login data: Email => ${email} & Password ${password}`)\n        if (!email) {\n            this.showNotification('danger', 'Please provide Email')\n            return callback(false)\n        }\n        if (!constants.emailRegex.test(email)) {\n            this.showNotification('danger', 'Invalid Email')\n            return callback(false)\n        }\n        if (!password) {\n            this.showNotification('danger', 'Please provide Password')\n            return callback(false)\n        }\n\n        const loginData = {\n            email: email.toLowerCase().trim(),\n            password: password.trim(),\n        }\n\n\n        axios({\n            method: 'post',\n            url: config.SERVER + 'users/authenticate',\n            data: loginData\n        }).then(response => {\n            ReactGA.event({\n                category: 'USER',\n                action: `USER LOGIN `\n            });\n            const res = response.data;\n            if (response) {\n                localStorage.setItem(constants.TOKEN_ID, res.token);\n                axios({\n                    method: 'get',\n                    url: config.SERVER + 'users/',\n                    headers: {\n                        'authorization': `Bearer ${res.token}`,\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    }\n                }).then(response => {\n                    localStorage.setItem(constants.TODAYS_DATE, todaysDate)\n                    localStorage.setItem(constants.PRIVILAGE_ID, response.data.role)\n                    this.authenticated = true;\n                    this.showNotification('success', 'Hi, ' + response.data.fname + \" \" + response.data.surname)\n                    window.location.reload();\n                    callback(res)\n                }).catch((error) => {\n                    this.showNotification('danger', 'Login failed')\n                });\n            }\n        }).catch(error => {\n            console.log(error)\n            if (error) {\n                this.showNotification('danger', 'Login failed')\n            }\n        })\n\n    }\n\n    logout = () => {\n        localStorage.removeItem(constants.TOKEN_ID);\n        localStorage.removeItem(constants.PRIVILAGE_ID);\n        this.authenticated = false;\n        window.history.replaceState(null, null, \"/\");\n        window.location.reload(false);\n    }\n\n    isAuthenticated = () => {\n        return this.authenticated\n    }\n\n    changeUser = userType => {\n        this.authenticated = false;\n        localStorage.setItem(constants.PRIVILAGE_ID, userType);\n        window.location.reload(false);\n        return <Redirect to='/' />\n    }\n\n    authRole = () => {\n        if (localStorage.getItem(constants.PRIVILAGE_ID))\n            return AUTH_ROLE[localStorage.getItem(constants.PRIVILAGE_ID)]\n        axios({\n            method: 'get',\n            url: config.SERVER + 'users/',\n            headers: header\n        }).then(response => {\n            localStorage.setItem(constants.PRIVILAGE_ID, response.data.role)\n            return AUTH_ROLE[response.data.role]\n        }).catch((error) => {\n            return null;\n        });\n    }\n}\nexport default new Auth()","import {\n  primaryColor,\n  whiteColor,\n  primaryBoxShadow,\n  defaultFont,\n  blackColor,\n  grayColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dropdownStyle = theme => ({\n  buttonLink: {\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"flex\",\n      marginLeft: \"30px\",\n      width: \"auto\"\n    }\n  },\n  links: {\n    width: \"20px\",\n    height: \"20px\",\n    zIndex: \"4\",\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"block\",\n      width: \"30px\",\n      height: \"30px\",\n      color: grayColor[9],\n      marginRight: \"15px\"\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\"\n  },\n  popperClose: {\n    pointerEvents: \"none\"\n  },\n  pooperResponsive: {\n    [theme.breakpoints.down(\"md\")]: {\n      zIndex: \"1640\",\n      position: \"static\",\n      float: \"none\",\n      width: \"auto\",\n      marginTop: \"0\",\n      backgroundColor: \"transparent\",\n      border: \"0\",\n      WebkitBoxShadow: \"none\",\n      boxShadow: \"none\",\n      color: \"black\"\n    }\n  },\n  popperNav: {\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"static !important\",\n      left: \"unset !important\",\n      top: \"unset !important\",\n      transform: \"none !important\",\n      willChange: \"unset !important\",\n      \"& > div\": {\n        boxShadow: \"none !important\",\n        marginLeft: \"0rem\",\n        marginRight: \"0rem\",\n        transition: \"none !important\",\n        marginTop: \"0px !important\",\n        marginBottom: \"0px !important\",\n        padding: \"0px !important\",\n        backgroundColor: \"transparent !important\",\n        \"& ul li\": {\n          color: whiteColor + \" !important\",\n          margin: \"10px 15px 0!important\",\n          padding: \"10px 15px !important\",\n          \"&:hover\": {\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\n            boxShadow: \"none\"\n          }\n        }\n      }\n    }\n  },\n  dropdown: {\n    borderRadius: \"3px\",\n    border: \"0\",\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\n    top: \"100%\",\n    zIndex: \"1000\",\n    minWidth: \"160px\",\n    padding: \"5px 0\",\n    margin: \"2px 0 0\",\n    fontSize: \"14px\",\n    textAlign: \"left\",\n    listStyle: \"none\",\n    backgroundColor: whiteColor,\n    WebkitBackgroundClip: \"padding-box\",\n    backgroundClip: \"padding-box\"\n  },\n  dropdownItem: {\n    ...defaultFont,\n    fontSize: \"13px\",\n    padding: \"10px 20px\",\n    margin: \"0 5px\",\n    borderRadius: \"2px\",\n    WebkitTransition: \"all 150ms linear\",\n    MozTransition: \"all 150ms linear\",\n    OTransition: \"all 150ms linear\",\n    MsTransition: \"all 150ms linear\",\n    transition: \"all 150ms linear\",\n    display: \"block\",\n    clear: \"both\",\n    fontWeight: \"400\",\n    lineHeight: \"1.42857143\",\n    color: grayColor[8],\n    whiteSpace: \"nowrap\",\n    height: \"unset\",\n    minHeight: \"unset\",\n    \"&:hover\": {\n      backgroundColor: primaryColor[0],\n      color: whiteColor,\n      ...primaryBoxShadow\n    }\n  }\n});\n\nexport default dropdownStyle;\n","import {\n  defaultFont,\n  dangerColor,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\n\nconst headerLinksStyle = theme => ({\n  ...dropdownStyle(theme),\n  search: {\n    \"& > div\": {\n      marginTop: \"0\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"10px 15px !important\",\n      float: \"none !important\",\n      paddingTop: \"1px\",\n      paddingBottom: \"1px\",\n      padding: \"0!important\",\n      width: \"60%\",\n      marginTop: \"40px\",\n      \"& input\": {\n        color: whiteColor\n      }\n    }\n  },\n  linkText: {\n    zIndex: \"4\",\n    ...defaultFont,\n    fontSize: \"14px\",\n    margin: \"0px\"\n  },\n  buttonLink: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      margin: \"10px 15px 0\",\n      width: \"-webkit-fill-available\",\n      \"& svg\": {\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n        fontSize: \"24px\",\n        lineHeight: \"30px\",\n        width: \"24px\",\n        height: \"30px\",\n        marginRight: \"15px\",\n        marginLeft: \"-15px\"\n      },\n      \"& > span\": {\n        justifyContent: \"flex-start\",\n        width: \"100%\"\n      }\n    }\n  },\n  searchButton: {\n    [theme.breakpoints.down(\"sm\")]: {\n      top: \"-50px !important\",\n      marginRight: \"22px\",\n      float: \"right\"\n    }\n  },\n  margin: {\n    zIndex: \"4\",\n    margin: \"0\"\n  },\n  searchIcon: {\n    width: \"17px\",\n    zIndex: \"4\"\n  },\n  notifications: {\n    zIndex: \"4\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      top: \"2px\",\n      border: \"1px solid \" + whiteColor,\n      right: \"4px\",\n      fontSize: \"9px\",\n      background: dangerColor[0],\n      color: whiteColor,\n      minWidth: \"16px\",\n      height: \"16px\",\n      borderRadius: \"10px\",\n      textAlign: \"center\",\n      lineHeight: \"16px\",\n      verticalAlign: \"middle\",\n      display: \"block\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      ...defaultFont,\n      fontSize: \"14px\",\n      marginRight: \"8px\"\n    }\n  },\n  manager: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    },\n    display: \"inline-block\"\n  },\n  searchWrapper: {\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"-webkit-fill-available\",\n      margin: \"10px 15px 0\"\n    },\n    display: \"inline-block\"\n  }\n});\n\nexport default headerLinksStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport auth from \"services/auth\"\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nconst notificationData = []\n\n\nexport default () => {\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = event => {\n    event.preventDefault();\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n\n  return (\n    <div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>{notificationData.length}</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    {notificationData.map(item =>\n                      <MenuItem\n                        onClick={handleCloseNotification}\n                        className={classes.dropdownItem}\n                      >\n                        {item}\n                      </MenuItem>\n                    )}\n\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={() => auth.logout()}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                    {/* <Divider light /> */}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n","import {\n  container,\n  defaultFont,\n  primaryColor,\n  defaultBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst headerStyle = () => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    borderBottom: \"0\",\n    marginBottom: \"0\",\n    position: \"absolute\",\n    width: \"100%\",\n    paddingTop: \"10px\",\n    zIndex: \"1029\",\n    color: grayColor[7],\n    border: \"0\",\n    borderRadius: \"3px\",\n    padding: \"10px 0\",\n    transition: \"all 150ms ease 0s\",\n    minHeight: \"50px\",\n    display: \"block\"\n  },\n  container: {\n    ...container,\n    minHeight: \"50px\"\n  },\n  flex: {\n    flex: 1\n  },\n  title: {\n    ...defaultFont,\n    letterSpacing: \"unset\",\n    lineHeight: \"30px\",\n    fontSize: \"18px\",\n    borderRadius: \"3px\",\n    textTransform: \"none\",\n    color: \"inherit\",\n    margin: \"0\",\n    \"&:hover,&:focus\": {\n      background: \"transparent\"\n    }\n  },\n  appResponsive: {\n    top: \"8px\"\n  },\n  primary: {\n    backgroundColor: primaryColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  info: {\n    backgroundColor: infoColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  success: {\n    backgroundColor: successColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor[0],\n    color: whiteColor,\n    ...defaultBoxShadow\n  }\n});\n\nexport default headerStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  const classes = useStyles();\n  function makeBrand() {\n    var name;\n    props.routes.map(prop => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        name = prop.name;\n      }\n      return null;\n    });\n    return name;\n  }\n  const { color } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\n            {makeBrand()}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n        <AdminNavbarLinks />\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\n","import {\n  defaultFont,\n  container,\n  primaryColor,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst footerStyle = {\n  block: {\n    color: \"inherit\",\n    padding: \"15px\",\n    textTransform: \"uppercase\",\n    borderRadius: \"3px\",\n    textDecoration: \"none\",\n    position: \"relative\",\n    display: \"block\",\n    ...defaultFont,\n    fontWeight: \"500\",\n    fontSize: \"12px\"\n  },\n  left: {\n    float: \"left!important\",\n    display: \"block\"\n  },\n  right: {\n    padding: \"15px 0\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    float: \"right!important\"\n  },\n  footer: {\n    bottom: \"0\",\n    borderTop: \"1px solid \" + grayColor[11],\n    padding: \"15px 0\",\n    ...defaultFont\n  },\n  container,\n  a: {\n    color: primaryColor,\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\"\n  },\n  list: {\n    marginBottom: \"0\",\n    padding: \"0\",\n    marginTop: \"0\"\n  },\n  inlineBlock: {\n    display: \"inline-block\",\n    padding: \"0px\",\n    width: \"auto\"\n  }\n};\nexport default footerStyle;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/components/footerStyle.js\";\nimport { COMPANY_NAME_SHORT, COMPANY_HREF } from 'config';\nconst { REACT_APP_VERSION } = process.env\n\nconst useStyles = makeStyles(styles);\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <div className={classes.container}>\n        <p className={classes.right}>\n          <span>\n            &copy; {1900 + new Date().getYear()}{\" \"}\n            <a\n              href={COMPANY_HREF}\n              className={classes.a}\n            >\n              {COMPANY_NAME_SHORT}\n            </a>\n            {`   v.${REACT_APP_VERSION}`}\n          </span>\n        </p>\n      </div>\n    </footer>\n  );\n}\n","import {\n  drawerWidth,\n  transition,\n  boxShadow,\n  defaultFont,\n  primaryColor,\n  primaryBoxShadow,\n  infoColor,\n  successColor,\n  warningColor,\n  dangerColor,\n  whiteColor,\n  grayColor,\n  blackColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst sidebarStyle = theme => ({\n  drawerPaper: {\n    background: \"linear-gradient(to right bottom, #1eb9cc, #189fb0)\",\n    border: \"none\",\n    position: \"fixed\",\n    top: \"0\",\n    bottom: \"0\",\n    left: \"0\",\n    zIndex: \"1\",\n    ...boxShadow,\n    width: drawerWidth,\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      position: \"fixed\",\n      height: \"100%\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n      ...boxShadow,\n      position: \"fixed\",\n      display: \"block\",\n      top: \"0\",\n      height: \"100vh\",\n      right: \"0\",\n      left: \"auto\",\n      zIndex: \"1032\",\n      visibility: \"visible\",\n      overflowY: \"visible\",\n      borderTop: \"none\",\n      textAlign: \"left\",\n      paddingRight: \"0px\",\n      paddingLeft: \"0\",\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\n      ...transition\n    }\n  },\n  drawerPaperRTL: {\n    [theme.breakpoints.up(\"md\")]: {\n      left: \"auto !important\",\n      right: \"0 !important\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"0  !important\",\n      right: \"auto !important\"\n    }\n  },\n  logo: {\n    position: \"relative\",\n    padding: \"15px 15px\",\n    zIndex: \"4\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: \"0\",\n\n      height: \"1px\",\n      right: \"15px\",\n      width: \"calc(100% - 30px)\",\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\n    }\n  },\n  logoLink: {\n    ...defaultFont,\n    textTransform: \"uppercase\",\n    padding: \"5px 0\",\n    display: \"block\",\n    fontSize: \"18px\",\n    textAlign: \"left\",\n    fontWeight: \"400\",\n    lineHeight: \"30px\",\n    textDecoration: \"none\",\n    backgroundColor: \"transparent\",\n    \"&,&:hover\": {\n      color: whiteColor\n    }\n  },\n  logoLinkRTL: {\n    textAlign: \"right\"\n  },\n  logoImage: {\n    width: \"70px\",\n    display: \"inline-block\",\n    maxHeight: \"30px\",\n    marginLeft: \"20px\",\n    marginRight: \"15px\"\n  },\n  img: {\n    width: \"70px\",\n    top: \"22px\",\n    position: \"absolute\",\n    verticalAlign: \"middle\",\n    border: \"0\"\n  },\n  background: {\n    position: \"absolute\",\n    zIndex: \"1\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"block\",\n    top: \"0\",\n    left: \"0\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center center\",\n    \"&:after\": {\n      position: \"absolute\",\n      zIndex: \"3\",\n      width: \"100%\",\n      height: \"100%\",\n      content: '\"\"',\n      display: \"block\",\n      background: blackColor,\n      opacity: \".8\"\n    }\n  },\n  list: {\n    marginTop: \"20px\",\n    paddingLeft: \"0\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    marginBottom: \"0\",\n    listStyle: \"none\",\n    position: \"unset\"\n  },\n  item: {\n    position: \"relative\",\n    display: \"block\",\n    textDecoration: \"none\",\n    \"&:hover,&:focus,&:visited,&\": {\n      color: whiteColor\n    }\n  },\n  itemLink: {\n    width: \"auto\",\n    transition: \"all 300ms linear\",\n    margin: \"10px 15px 0\",\n    borderRadius: \"3px\",\n    position: \"relative\",\n    display: \"block\",\n    padding: \"10px 15px\",\n    backgroundColor: \"transparent\",\n    ...defaultFont\n  },\n  itemIcon: {\n    width: \"24px\",\n    height: \"30px\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    float: \"left\",\n    marginRight: \"15px\",\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\"\n  },\n  itemIconRTL: {\n    marginRight: \"3px\",\n    marginLeft: \"15px\",\n    float: \"right\"\n  },\n  itemText: {\n    ...defaultFont,\n    margin: \"0\",\n    lineHeight: \"30px\",\n    fontSize: \"14px\",\n    color: whiteColor\n  },\n  itemTextRTL: {\n    textAlign: \"right\"\n  },\n  whiteFont: {\n    color: whiteColor\n  },\n  purple: {\n    backgroundColor: primaryColor[0],\n    ...primaryBoxShadow,\n    \"&:hover,&:focus\": {\n      backgroundColor: primaryColor[0],\n      ...primaryBoxShadow\n    }\n  },\n  blue: {\n    backgroundColor: infoColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(infoColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: infoColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(infoColor[0]) +\n        \",.2)\"\n    }\n  },\n  green: {\n    backgroundColor: successColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(successColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: successColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(successColor[0]) +\n        \",.2)\"\n    }\n  },\n  orange: {\n    backgroundColor: warningColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(warningColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: warningColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(warningColor[0]) +\n        \",.2)\"\n    }\n  },\n  red: {\n    backgroundColor: dangerColor[0],\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.28), 0 4px 20px 0 rgba(\" +\n      hexToRgb(blackColor) +\n      \",.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(dangerColor[0]) +\n      \",.2)\",\n    \"&:hover,&:focus\": {\n      backgroundColor: dangerColor[0],\n      boxShadow:\n        \"0 12px 20px -10px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.28), 0 4px 20px 0 rgba(\" +\n        hexToRgb(blackColor) +\n        \",.12), 0 7px 8px -5px rgba(\" +\n        hexToRgb(dangerColor[0]) +\n        \",.2)\"\n    }\n  },\n  sidebarWrapper: {\n    position: \"relative\",\n    height: \"calc(100vh - 75px)\",\n    overflow: \"auto\",\n    width: \"260px\",\n    zIndex: \"4\",\n    overflowScrolling: \"touch\"\n  },\n  activePro: {\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      width: \"100%\",\n      bottom: \"13px\"\n    }\n  }\n});\n\nexport default sidebarStyle;\n","/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"#\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 -15px !important\",\n    width: \"unset\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node\n};\n","import {\n  blackColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\"\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"10px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest} >\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  grayColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardIconStyle = {\n  cardIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      borderRadius: \"100px / 20px\",\n      backgroundColor: grayColor[1],\n      padding: \"15px\",\n      marginTop: \"-20px\",\n      marginRight: \"15px\",\n      float: \"left\"\n    }\n  },\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader\n};\n\nexport default cardIconStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardIconStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardIcon(props) {\n  const classes = useStyles();\n  const { className, children, color, ...rest } = props;\n  const cardIconClasses = classNames({\n    [classes.cardIcon]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardIconClasses} {...rest} style={{\n      boxShadow:\n        `0px 2px 10px rgba(0,0,0,0.2), \n      0px 10px 20px rgba(0,0,0,0.3), \n      0px 30px 60px 1px rgba(0,0,0,0.5)`\n    }}>\n      {children}\n    </div>\n  );\n}\n\nCardIcon.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  children: PropTypes.node\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  successColor,\n  whiteColor,\n  grayColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst dashboardStyle = {\n  successText: {\n    color: successColor[0]\n  },\n  upArrowCardCategory: {\n    width: \"16px\",\n    height: \"16px\"\n  },\n  stats: {\n    color: grayColor[0],\n    display: \"inline-flex\",\n    fontSize: \"12px\",\n    lineHeight: \"22px\",\n    \"& svg\": {\n      top: \"4px\",\n      width: \"16px\",\n      height: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      top: \"4px\",\n      fontSize: \"16px\",\n      position: \"relative\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    }\n  },\n  cardCategory: {\n    color: grayColor[0],\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    paddingTop: \"10px\",\n    marginBottom: \"0\"\n  },\n  cardCategoryWhite: {\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitle: {\n    color: grayColor[2],\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  cardTitleWhite: {\n    color: whiteColor,\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: grayColor[1],\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  },\n  formControl: {\n    marginTop: 28,\n    minWidth: '100%',\n    // maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  InputLabelGrey: {\n    color: 'black',\n  },\n  MultilineTest: {\n    '& .MuiTextField-root': {\n      // margin: theme.spacing(1),\n      width: '115ch',\n    },\n  },\n  urlLink:{\n    color:'#66CCFF',\n    textDecorationLine: 'underline',\n  },\n  CardFooterAlignment:{\n    float: \"right\",\n    // marginTop: 35,\n  },\n  SIFbutton:{\n    marginRight: 5,\n    marginLeft: 5\n  },\n  hidden:{\n    display: \"none\"\n  },\n  FileNameAlignment:{\n    float:\"left\",\n  }\n\n\n};\n\nexport default dashboardStyle;\n","import { store } from 'react-notifications-component';\n\nimport { USER_CONTROLLER_SERVER } from \"config\";\nimport constants from \"constants/index\"\nimport axios, { header } from '_helper/axios'\nclass UserService {\n\n    showNotification = (type, message) => {\n        store.addNotification({\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 5000,\n                onScreen: true\n            }\n        });\n    }\n\n    // Users related\n    register = async (data, role, callback) => {\n        const formData = {\n            managerid: data.managerid,\n            company: data.company,\n            email: data.email.toLowerCase().trim(),\n            fname: data.fname.trim(),\n            surname: data.surname.trim(),\n            phone: (data.phone.replace(/[^0-9]/g, '').length === 10) ? data.phone.replace(/[^0-9]/g, '').slice(0, 10) : \" \",\n            address: data.address.trim(),\n            city: data.city.trim(),\n            state: data.state.trim(),\n            country: data.country.trim(),\n            zipcode: data.zipcode.trim(),\n            role: role,\n            clientid: data.clientid ? data.clientid.trim() : \" \",\n        }\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'users/register',\n            headers: header,\n            data: formData,\n        }).then(response => {\n            if (response.data && response.data.status === 'success') {\n                this.showNotification(response.data.status, `${role} created`)\n                callback({\n                    message: response.data.message,\n                    token: response.data.token,\n                });\n            } else {\n                if (response.data && response.data.status) {\n                    this.showNotification(response.data.status, response.data.message)\n                }\n            }\n        }).catch(error => {\n            if (error.message) {\n                this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            }\n        })\n    }\n\n    getTokenUser = callback => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'users/',\n            headers: header\n        }).then(response => {\n            callback(response.data)\n        }).catch(() => {\n            this.authenticated = false;\n        })\n    }\n\n    getUsersList = (role, issiftable, callback) => {\n        const params = {};\n        if (role) params.search = role;\n\n        if (issiftable) params.issiftable = issiftable;\n\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'users/all',\n            headers: header,\n            params: params,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getUserById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'users/' + id,\n            headers: header,\n        }).then(response => {\n            var result = response.data\n            if (result.phone) {\n                result.phone = result.phone.toString().slice(0, 3) + '-' + result.phone.toString().slice(3, 6) + '-' + result.phone.toString().slice(6, 10)\n            } else {\n                result.phone = \" \"\n            }\n            callback(result);\n        }).catch(() => {\n        })\n    }\n\n    resetPassword = (email, callback) => {\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'users/forgot',\n            headers: header,\n            data: { email: email },\n        }).then(() => {\n            this.showNotification('success', 'Password has been reset')\n            callback({ message: \"New password is sent to your mail \" });\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback({ message: \"Please try again\" })\n        })\n    }\n\n    changePassword = (password, callback) => {\n        const formData = {\n            password: password\n        }\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'users/password',\n            headers: header,\n            data: formData,\n        }).then(() => {\n            this.showNotification('success', 'Password changed')\n            callback();\n        }).catch(() => {\n            this.showNotification('success', 'Sorry, cannot change password at this moment')\n        })\n    }\n\n    updateUser = (userInfo, callback) => {\n        if (userInfo.phone) {\n            userInfo.phone = (userInfo.phone.replace(/[^0-9]/g, '').length === 10) ? userInfo.phone.replace(/[^0-9]/g, '').slice(0, 10) : \" \"\n        }\n        axios({\n            method: 'put',\n            url: USER_CONTROLLER_SERVER + 'users/' + userInfo.id,\n            headers: header,\n            data: userInfo,\n        }).then(() => {\n            this.showNotification('success', 'User details updated')\n            callback();\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    deleteUser = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: USER_CONTROLLER_SERVER + 'users/' + id,\n            headers: header,\n        }).then(_response => {\n            let response = (_response && _response.data) || null\n            console.log(response.data)\n            if (response && response.status) {\n                this.showNotification('success', response.data.message || 'User deleted sucessfully')\n                callback(response.data);\n            } else {\n                this.showNotification('danger', 'Operation failed')\n            }\n\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    /* --------------------------------- Customer section ------------------------------------- */\n\n    createCustomer = (data, callback) => {\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'clients/create',\n            headers: header,\n            data: {\n                name: data.companyName,\n            },\n        }).then(response => {\n            if (response.data) {\n                callback(response.data);\n                this.showNotification('success', 'Customer created')\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getCustomerList = callback => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'clients/all',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getCustomerById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'clients/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    deleteCustomer = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: USER_CONTROLLER_SERVER + 'clients/' + id,\n            headers: header,\n        }).then(() => {\n            this.showNotification('success', 'customer deleted')\n            callback();\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    updateCustomer = (data, callback) => {\n        axios({\n            method: 'put',\n            url: USER_CONTROLLER_SERVER + 'clients/' + data.id,\n            headers: header,\n            data: data,\n        }).then(() => {\n            this.showNotification('success', 'customer updated')\n            callback();\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    // Location\n\n    createClientLocation = (data, callback) => {\n\n        var locationData = data;\n        if (locationData.phone) {\n            locationData.phone = locationData.phone.replace(/[^0-9]/g, '') ? locationData.phone.replace(/[^0-9]/g, '') : \" \"\n        }\n\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'clients/location/add',\n            headers: header,\n            data: locationData,\n        }).then(response => {\n            if (response.data && response.data.status) {\n                this.showNotification('success', response.data.status)\n                callback(response.data);\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getCustomerLocationByID = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'clients/location/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data && response.data.data) {\n                var result = response.data.data;\n                if (result && result.phone) {\n                    result.phone = result.phone.toString().slice(0, 3) + '-' + result.phone.toString().slice(3, 6) + '-' + result.phone.toString().slice(6, 10)\n                }\n                callback(result);\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getCustomerLocationByClient = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'clients/location/client/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    updateClientLocation = (data, callback) => {\n\n        var locationData = data.location\n\n        if (locationData.phone)\n            locationData.phone = locationData.phone.replace(/[^0-9]/g, '') || \" \";\n\n        axios({\n            method: 'put',\n            url: USER_CONTROLLER_SERVER + 'clients/location/update/' + data.id,\n            headers: header,\n            data: locationData,\n        }).then(() => {\n            this.showNotification('success', 'Location updated')\n            callback();\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    deleteClientLocation = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: USER_CONTROLLER_SERVER + 'clients/location/' + id,\n            headers: header,\n        }).then(() => {\n            this.showNotification('success', 'Location deleted')\n            callback();\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getAllLocation = callback => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'clients/location/getall',\n            headers: header,\n        }).then(({ data }) => {\n            if (data) {\n                callback(data);\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    // User\n\n    getUsersByCustomerID = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'users/client/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    makeUserPrimary = (data, callback) => {\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'users/primary/',\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('success', 'User is now primary')\n            callback(true);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    // Privilege\n\n    createPrivilege = (privilegeData, callback) => {\n        axios({\n            method: 'post',\n            url: USER_CONTROLLER_SERVER + 'permission/create',\n            headers: header,\n            data: privilegeData,\n        }).then(response => {\n            if (response.data.status) {\n                this.showNotification('success', response.data.status || 'Privilage created')\n                callback(response.data);\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getUserPrivilege = (data, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'permission/' + data.clientid + '/user/' + data.userid,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                if (response.data) {\n                    callback(response.data || []);\n                }\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    getUserPrivilegeByToken = (id, callback) => {\n        axios({\n            method: 'get',\n            url: USER_CONTROLLER_SERVER + 'permission/get',\n            headers: header,\n            params: {\n                c: id,\n            }\n        }).then(response => {\n            if (response.data) {\n                callback(response.data || {});\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getUserPrivilegeOptions = callback => {\n        const response = [\n            { selection: \"Admin\", selectionKey: 'admin' },\n            { selection: \"User\", selectionKey: 'user' },\n            { selection: \"Location\", selectionKey: 'location' },\n            { selection: \"Order\", selectionKey: 'order' },\n            { selection: \"SIF\", selectionKey: 'sif' },\n            { selection: \"Trending\", selectionKey: 'trending' },\n        ];\n        callback(response)\n    }\n\n    updatePrivilege = (privilegeData, callback) => {\n        axios({\n            method: 'put',\n            url: USER_CONTROLLER_SERVER + 'permission/update/' + privilegeData.privilegeid,\n            headers: header,\n            data: privilegeData,\n        }).then(response => {\n            if (response.data) {\n\n                this.showNotification('warning', response.data.message || 'Permission updated')\n                callback(response.data);\n            }\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    deletePrivilege = (privilegeData, callback) => {\n        callback()\n    }\n\n}\n\nexport default new UserService()","import { store } from 'react-notifications-component';\nimport { SAMPLE_CONTROLLER_SERVER, REPORTS_SERVER } from \"config\";\nimport constants from \"constants/index\"\nimport axios, { header } from '_helper/axios'\nimport logger from '_helper/logger';\n\nconst GC_FTIR_OIL_Report_URL = `${SAMPLE_CONTROLLER_SERVER}GCFTIROilReport`;\nclass SampleService {\n\n    showNotification = (type, message) => {\n        store.addNotification({\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 5000,\n                onScreen: true\n            }\n        });\n    }\n\n    /*-------------------------------- SIF --------------------------*/\n    createSIF = async (data, callback) => {\n        if (data.requireCustomLabIDSection) {\n            if (!data.labid) {\n                this.showNotification('danger', `Opted for custom Lab ID but Lab ID Invalid`);\n                callback(false)\n            }\n        }\n        delete data.requireCustomLabIDSection\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/create',\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('success', response.data.message || 'SIF created')\n            if (response.data && response.data.data) {\n                callback(response.data.data);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getSIFList = ({ limit = \"\", filter = \"\" }, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample',\n            headers: header,\n            params: {\n                limit: limit,\n                filter: filter\n            }\n        }).then(response => {\n            if (response.data && response.data.sif.length) {\n                callback(response.data);\n            } else {\n                callback(false);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    searchSIFList = (limit, params, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/search?limit=' + limit,\n            headers: header,\n            params: params,\n        }).then(response => {\n            // if (response.data && !response.data.status) this.showNotification('info', 'No result found')\n            return callback(response.data);\n        }).catch(error => {\n            console.log(`api error`, error)\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    searchSIFListCount = (params, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/search/count',\n            headers: header,\n            params: params,\n        }).then(response => {\n            if (response.data && !response.data.status) this.showNotification('info', 'No result found')\n            return callback(response.data);\n        }).catch(error => {\n            console.log(`api error`, error)\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    searchSIFListSingleParam = (searchlike, callback) => {\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/search',\n            headers: header,\n            data: {\n                searchquery: searchlike,\n            },\n        }).then(response => {\n            const data = response.data || []\n            callback(data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback(error.message)\n        })\n    }\n\n    getSIFById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/id',\n            headers: header,\n            params: {\n                id: id\n            }\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    updateSIFById = (id, data, callback) => {\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/update/' + id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            const res = response.data\n            if (res.status) {\n                this.showNotification('warning', response.data.message || 'SIF updated')\n                return callback(res);\n            } else {\n                this.showNotification('danger', 'Operation failed')\n                return callback([]);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    deleteSIF = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                this.showNotification('success', 'SIF deleted')\n                return callback(response.data)\n            } else {\n                this.showNotification('danger', 'Cannot delete SIF')\n                return callback(false)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n\n    changeSIFStatus = ({ labid, status }, callback) => {\n        const data = { status, labid }\n        axios({\n            method: 'put',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/updatestatus/',\n            headers: header,\n            data: data,\n        }).then(response => {\n            console.log(`SIF STATUS || CHANGE || ${status}`)\n            this.showNotification('info', 'SIF changed to ' + status)\n        }).catch(error => {\n            console.log(error)\n        }).finally(() => {\n            return callback(false);\n        })\n    }\n\n    getSampleList = callback => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getSamplePendingList = callback => {\n        var newSampleList = [];\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/',\n            headers: header,\n        }).then(response => {\n            response.data.map(values => {\n                if (!values.isApproved) {\n                    return newSampleList.push(values)\n                }\n                return false;\n            })\n            callback({ list: newSampleList })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getRecentSampleList = callback => {\n        var newSampleList = [];\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/',\n            headers: header,\n        }).then(response => {\n            response.data.map(values => {\n                if (values.isapproved) {\n                    return newSampleList.push(values)\n                }\n                return false;\n            })\n            callback({ list: newSampleList })\n        }).catch(() => {\n        })\n    }\n\n    getSampleById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/id?id=' + id,\n            headers: header,\n        }).then(response => {\n            response.data.map(values => {\n                if (values.id === id) {\n                    return callback(values)\n                }\n                return false;\n            })\n        }).catch(() => {\n        })\n    }\n\n    getAllTestOnLaiIb = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/test/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data)\n        }).catch(() => {\n        })\n    }\n\n    updateSampleTestResult = (body, callback) => {\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/test/result/',\n            headers: header,\n            data: body,\n        }).then(response => {\n            this.showNotification('warning', 'Updated sample test results')\n            callback(response.data)\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    updateSample = (formValue, callback) => {\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/update',\n            headers: header,\n            data: formValue,\n        }).then(response => {\n            this.showNotification('warning', 'Updated')\n            callback(response);\n        }).catch(() => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    approveSample = (formValue, callback) => {\n        formValue.isApproved = true;\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'sample/update',\n            headers: header,\n            data: formValue,\n        }).then(response => {\n            this.showNotification('success', 'Sample approved')\n            callback(response);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    downloadpdf = (labid) => {\n        this.showNotification('warning', 'Reteriving PDF. Please wait...')\n        window.open(`${REPORTS_SERVER}reports/SIF_${labid}.pdf`)\n    }\n\n    generateAndDownloadpdf = (labid) => {\n        this.showNotification('warning', 'Reteriving PDF. Please wait...')\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'report/getpdf?labid=' + labid,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                if ((response.data.status == 'danger'))\n                    this.showNotification(response.data.status || 'danger', response.data.message || 'Cannot generate PDF right now.')\n\n                if (response.data && response.data.path) {\n                    this.downloadpdf(labid)\n                }\n            }\n        }).catch(error => {\n            // this.showNotification('danger', `${constants.DEFAULT_ERROR_ALERT}`)\n            console.log(`PDF FETCH ERROR || ${error}`);\n        })\n    }\n\n    sendMail = ({ labid }, callback) => {\n\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'report/mailpdf?labid=' + labid,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', ('Mail sent for ' + labid))\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    mailMultiSIF = (ids, callback) => {\n        this.showNotification('warning', 'Preparing mail. Please wait..')\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'report/mailbulkpdf',\n            headers: header,\n            data: {\n                labids: ids\n            },\n        }).then(response => {\n            console.log(`MULTI MAIL || SUCCESS`)\n        }).catch(error => {\n            console.log(`MULTI MAIL ERROR ${error}`)\n        }).finally(() => {\n            this.showNotification('success', 'Mail Sent...')\n            callback(true)\n        })\n    }\n\n    mailMultiPersonalSIF = (ids, emails, callback) => {\n        this.showNotification('warning', 'Preparing mail. Please wait..')\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'report/personalmailbulkpdf',\n            headers: header,\n            data: {\n                labids: ids,\n                mailids: emails,\n            },\n        }).then(response => {\n            if (response.data) {\n                callback(response.data);\n            }\n        }).catch(error => {\n            console.log(`MULTI MAIL ERROR || ${error}`)\n        }).finally(() => {\n            this.showNotification('success', `Mail sent...`)\n        })\n    }\n\n    getPendingLabtestsByLabTestFilter = async (params) => {\n        if (!params.test_id || !params.start_date || !params.end_date) {\n            return []\n        }\n\n        try {\n            const { data: response } = await axios({\n                method: 'get',\n                url: SAMPLE_CONTROLLER_SERVER + 'sample/work-flow/lab-test-value',\n                headers: header,\n                params,\n            })\n            logger(response.data)\n            return response\n        } catch (e) {\n            logger(e)\n            return []\n        }\n    }\n\n    updatePendingLabtestsByLabTestFilter = async ({ lab_ref, test_ref, result }) => {\n        if (!lab_ref || !test_ref || !result) {\n            logger('INvalid data', lab_ref, test_ref, result)\n            return null\n        }\n        try {\n            const { data: response } = await axios({\n                method: 'put',\n                url: SAMPLE_CONTROLLER_SERVER + 'sample/work-flow/lab-test-value',\n                headers: header,\n                params: {\n                    lab_ref,\n                },\n                data: {\n                    result,\n                    test_ref,\n                },\n            })\n            logger(response.data)\n            return response\n        } catch (e) {\n            logger(e)\n            return null\n        }\n    }\n\n    disposeFuelTest = async (labRef, test_ref) => {\n        if (!test_ref || !test_ref) {\n            logger({ labRef, test_ref, message: \"Missing data\" })\n            return false;\n        }\n        try {\n            const { data: response } = await axios({\n                method: 'PUT',\n                url: `${SAMPLE_CONTROLLER_SERVER}sample/dispose/fuel-test/${labRef}/${test_ref}`,\n                headers: header,\n            })\n            logger(response.data)\n            return response\n        } catch (e) {\n            logger(e)\n            return []\n        }\n    }\n\n    getWorkOrderSectionReportByDate = async (params) => {\n        if (!params.test_id || !params.start_date || !params.end_date) {\n            return []\n        }\n\n        try {\n            const { data: response } = await axios({\n                method: 'get',\n                url: `${SAMPLE_CONTROLLER_SERVER}sample/work-flow/report/lab-test-value`,\n                headers: header,\n                params,\n                responseType: 'blob',\n            })\n\n            const fileName = `${params.test_name}-${params.start_date} to ${params.end_date}.xlsx`\n            const url = window.URL.createObjectURL(new Blob([response]));\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', fileName);\n            document.body.appendChild(link);\n            link.click();\n            return response;\n        } catch (e) {\n            logger(e)\n            return []\n        }\n    }\n\n    /************************Order********************************* */\n    createOrder = async (data, callback) => {\n        data.phone = (data.phone.replace(/[^0-9]/g, '').length === 10) ? data.phone.replace(/[^0-9]/g, '').slice(0, 10) : \"\"\n        if (data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (data.shipping_address === \"\" && data.shipping_city === \"\" && data.shipping_state === \"\" && data.shipping_country === \"\" && data.shipping_zipcode === \"\") {\n            this.showNotification('danger', constants.Shipping_Address)\n        }\n        else if (data.email.length === 0) {\n            this.showNotification('danger', constants.Billing_Email)\n        }\n        else if (data.phone === \"\" || data.phone.length !== 10) {\n            this.showNotification('danger', constants.Billing_contact)\n        }\n        else if (data.kit === null) {\n            this.showNotification('danger', constants.Kit)\n        }\n        else if (data.quantity === '') {\n            this.showNotification('danger', constants.Qauntity)\n        }\n        else if (data.isShippingTrackable === false && data.shipping_service !== null && data.tracking_id !== \"\") {\n            // data.tracking_id=data.isShippingTrackable === false && data.shipping_service !== null && data.tracking_id !== \"\" ? \"\" : data.tracking_id\n            this.showNotification('warning', \"This Shipping Service not Trackable\")\n        }\n        else if (data.shipping_service !== null && data.tracking_id === \"\" && data.isShippingTrackable === true) {\n            this.showNotification('danger', constants.Tracking_id)\n        }\n        else if (data.tracking_id !== \"\" && data.shipping_service === null) {\n            this.showNotification('danger', constants.Shipping_Service)\n        }\n        else {\n            // data.phone= (data.phone.replace(/[^0-9]/g, '').length === 10) ? data.phone.replace(/[^0-9]/g, '').slice(0, 10) : \" \"\n            axios({\n                method: 'post',\n                url: SAMPLE_CONTROLLER_SERVER + 'order',\n                headers: header,\n                data: data,\n            }).then(response => {\n                if (response.data && response.data.status === true) {\n                    this.showNotification('success', response.data.message || 'Order created')\n                    callback(response.data.data);\n                }\n                else if (response.data.status === false) {\n                    this.showNotification('warning', response.data.message)\n                }\n            }).catch(error => {\n                this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n    getOrderList = ({ sortStatus }, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'order',\n            headers: header,\n            params: {\n                sortStatus: sortStatus\n            }\n        }).then(response => {\n            if (response.data) {\n                callback(response.data);\n            } else {\n                callback(false);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n    getOrderById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'order/',\n            headers: header,\n            params: { order_id: id }\n        }).then(response => {\n            if (response.data.data.order_id === id) {\n                var result = response.data.data\n                if (result.phone) {\n                    result.phone = result.phone.toString().slice(0, 3) + '-' + result.phone.toString().slice(3, 6) + '-' + result.phone.toString().slice(6, 10)\n                } else {\n                    result.phone = \" \"\n                }\n                callback(result);\n            }\n            return false;\n\n        }).catch(() => {\n        })\n    }\n    updateOrderById = (id, data, callback) => {\n        data.phone = (data.phone.replace(/[^0-9]/g, '').length === 10) ? data.phone.replace(/[^0-9]/g, '').slice(0, 10) : \"\"\n        if (data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (data.shipping_address === \"\" && data.shipping_city === \"\" && data.shipping_state === \"\" && data.shipping_country === \"\" && data.shipping_zipcode === \"\") {\n            this.showNotification('danger', constants.Shipping_Address)\n        }\n        else if (data.email.length === 0) {\n            this.showNotification('danger', constants.Billing_Email)\n        }\n        else if (data.phone === \"\" || data.phone.length !== 10) {\n            this.showNotification('danger', constants.Billing_contact)\n        }\n        else if (data.kit === null) {\n            this.showNotification('danger', constants.Kit)\n        }\n        else if (data.quantity === '') {\n            this.showNotification('danger', constants.Qauntity)\n        }\n        else if (data.isShippingTrackable === false && data.shipping_service !== null && data.tracking_id !== \"\") {\n            // data.tracking_id=data.isShippingTrackable === false && data.shipping_service !== null && data.tracking_id !== \"\" ? \"\" : data.tracking_id\n            this.showNotification('warning', \"This Shipping Service not Trackable\")\n        }\n        else if (data.shipping_service !== null && data.tracking_id === \"\" && data.isShippingTrackable === true) {\n            this.showNotification('danger', constants.Tracking_id)\n        }\n        else if (data.tracking_id !== \"\" && data.shipping_service === null) {\n            this.showNotification('danger', constants.Shipping_Service)\n        }\n        else {\n            // data.phone= (data.phone.replace(/[^0-9]/g, '').length === 10) ? data.phone.replace(/[^0-9]/g, '').slice(0, 10) : \" \"\n            axios({\n                method: 'put',\n                url: SAMPLE_CONTROLLER_SERVER + 'order/' + id,\n                headers: header,\n                data: data,\n            }).then(response => {\n                const res = response.data\n                if (res.status) {\n                    this.showNotification('warning', 'Order updated Successfully')\n                    return callback(res.data);\n                } else {\n                    this.showNotification('danger', 'Operation failed')\n                    return callback([]);\n                }\n            }).catch(error => {\n                this.showNotification('danger', error.response.data.message || constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n    deleteOrder = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SAMPLE_CONTROLLER_SERVER + 'order/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                this.showNotification('success', 'Order deleted')\n                return callback(response.data)\n            } else {\n                this.showNotification('danger', 'Cannot delete Order')\n                return callback(false)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    searchOrder = (search_key, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'order/search',\n            headers: header,\n            params: {\n                search: search_key,\n            },\n        }).then(response => {\n            const data = response.data || []\n            callback(data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback(error.message)\n        })\n    }\n    getOrderCountList = (callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'order/get_count',\n            headers: header,\n        }).then(response => {\n            if (response.data && response.data.data) {\n                callback(response.data);\n            } else {\n                callback(false);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n        })\n    }\n\n    /***************************************** Shipping Service****************************** */\n    getShippingSeviceList = callback => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'shipping/service/',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    /******************************************* Checkout********************************************** */\n    createCheckout = async (data, callback) => {\n        axios({\n            method: 'post',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/',\n            headers: header,\n            data: data,\n        }).then(response => {\n            if (response.data && response.data.status === true) {\n                this.showNotification('success', 'Checklist Created Successfully')\n                callback(response.data.data);\n            }\n            else if (response.status === false) {\n                this.showNotification('danger', response.message)\n            }\n        }).catch(error => {\n            if (data.location === null) {\n                this.showNotification('danger', constants.Location_error)\n            }\n            else if (data.selected_checklists.length === 0) {\n                this.showNotification('danger', constants.Checklist_process)\n            }\n            else {\n                this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            }\n        })\n    }\n    getCheckoutList = callback => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    getCheckoutById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/',\n            headers: header,\n            params: { id: id }\n        }).then(response => {\n            if (response.data.data._id === id) {\n                return callback(response.data.data)\n            }\n            return false;\n\n        }).catch(() => {\n        })\n    }\n    updateCheckoutById = (id, data, callback) => {\n        if (data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (data.selected_checklists.length === 0) {\n            this.showNotification('danger', constants.Checklist_process)\n        }\n        else {\n            axios({\n                method: 'put',\n                url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/' + id,\n                headers: header,\n                data: data,\n            }).then(response => {\n                const res = response.data\n                if (res.status) {\n                    this.showNotification('warning', 'Checklist Updated Successfully')\n                    return callback(res);\n                } else {\n                    this.showNotification('danger', 'Operation failed')\n                    return callback([]);\n                }\n            }).catch(error => {\n                this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n    deleteCheckout = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                this.showNotification('success', 'Checkout deleted Successfully')\n                return callback(response.data)\n            } else {\n                this.showNotification('danger', 'Cannot delete Checkout')\n                return callback(false)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    searchCheckout = (search_key, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/search',\n            headers: header,\n            params: {\n                search: search_key,\n            },\n        }).then(response => {\n            const data = response.data || []\n            callback(data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback(error.message)\n        })\n    }\n\n    /*********************************checkout test************************************* */\n    getCheckoutTestList = callback => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'record_checklist/test/',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    /******************************************* environmental_lab_reports********************************************** */\n    createEnv_labreport = async (state_data, callback) => {\n        const reWhiteSpace = new RegExp(/\\s/);\n        const whitespace = reWhiteSpace.test(state_data.lab_id)\n        if (state_data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (state_data.lab_id === \"\") {\n            this.showNotification('danger', \"Lab ID is required\")\n        }\n        else if (/^[A-Z0-9]*$/.test(state_data.lab_id) === false) {\n            this.showNotification('danger', \"Only capital letter Allowed in LabID\")\n        }\n        else if (whitespace === true) {\n            this.showNotification('danger', \"Spacing Not Allowed in LabID\")\n        }\n        else if (state_data.reportPDF === null) {\n            this.showNotification('danger', \"PDF file is required\")\n        }\n        else {\n            const data = new FormData()\n            data.append('report', state_data.reportPDF)\n            data.append(\"location\", state_data.location || null)\n            data.append(\"labid\", state_data.lab_id)\n            data.append(\"additional_email\", state_data.emailCollection)\n            data.append(\"project_number\", state_data.project_no)\n            data.append(\"coc\", state_data.coc_number)\n            data.append(\"po\", state_data.po)\n            data.append(\"reported_at\", state_data.reportDate)\n            axios({\n                method: 'post',\n                url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/',\n                headers: header,\n                data: data,\n            }).then(response => {\n                if (response.data) {\n                    this.showNotification('success', 'Environmental Lab Reports Created Successfully')\n                    callback(response.data.data);\n                }\n\n            }).catch(error => {\n                this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n\n    }\n    getAllEnv_labreport = callback => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    getEnv_labreportById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/',\n            headers: header,\n            params: { id: id }\n        }).then(response => {\n            if (response.data) {\n                return callback(response.data.data)\n            }\n            return false;\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n    updateEnv_labreport = (id, state_data, callback) => {\n        const reWhiteSpace = new RegExp(/\\s/);\n        const whitespace = reWhiteSpace.test(state_data.lab_id)\n        if (state_data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (state_data.lab_id === \"\") {\n            this.showNotification('danger', \"Lab ID is required\")\n        }\n        else if (/^[A-Z0-9]*$/.test(state_data.lab_id) === false) {\n            this.showNotification('danger', \"Only capital letter Allowed in LabID\")\n        }\n        else if (whitespace === true) {\n            this.showNotification('danger', \"Spacing Not Allowed in LabID\")\n        }\n        // else if (state_data.reportPDF === null) {\n        //     this.showNotification('danger', \"PDF file is required\")\n        // }\n        else {\n            const data = new FormData()\n            data.append('report', state_data.reportPDF)\n            data.append(\"location\", state_data.location || null)\n            data.append(\"labid\", state_data.lab_id)\n            data.append(\"additional_email\", state_data.emailCollection)\n            data.append(\"project_number\", state_data.project_no)\n            data.append(\"coc\", state_data.coc_number)\n            data.append(\"po\", state_data.po)\n            data.append(\"reported_at\", state_data.reportDate)\n            axios({\n                method: 'put',\n                url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/' + id,\n                headers: header,\n                data: data,\n            }).then(response => {\n                const res = response.data\n                if (res.status) {\n                    this.showNotification('warning', 'Environmental Lab Reports Updated Successfully')\n                    return callback(res);\n                }\n            }).catch(error => {\n                this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n\n    deleteEnv_labreport = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                this.showNotification('success', 'Environmental Lab Reports deleted Successfully')\n                return callback(response.data)\n            } else {\n                this.showNotification('danger', 'Cannot delete Environmental Lab Reports')\n                return callback(false)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    downloadReportpdf = (report_path) => {\n        if (report_path !== \"\") {\n            this.showNotification('warning', 'Reteriving PDF. Please wait...')\n            //  window.open(REPORTS_SERVER + report_path)\n            window.open(REPORTS_SERVER + report_path + \"?auth=\" + header.authorization)\n        }\n        else if (report_path === \"\") {\n            this.showNotification('danger', 'Cannot generate PDF right now.')\n        }\n\n    }\n    searchEnvLabReport = (search_key, callback) => {\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/search',\n            headers: header,\n            params: {\n                search: search_key,\n            },\n        }).then(response => {\n            const data = response.data || []\n            callback(data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback(error.message)\n        })\n    }\n    sendMailtoClient = (labid, callback) => {\n        console.log(labid)\n        axios({\n            method: 'get',\n            url: SAMPLE_CONTROLLER_SERVER + 'env_labreport/mail/' + labid,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', ('Mail sent for' + labid))\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    /******************************************* GC_FTIR_OIL_Report********************************************** */\n    GC_FTIR_OIL_Report_Create = async (state_data, callback) => {\n        const reWhiteSpace = new RegExp(/\\s/);\n        const whitespace = reWhiteSpace.test(state_data.lab_id)\n        if (state_data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (state_data.lab_id === \"\") {\n            this.showNotification('danger', \"Lab ID is required\")\n        }\n        else if (/^[A-Z0-9]*$/.test(state_data.lab_id) === false) {\n            this.showNotification('danger', \"Only capital letter Allowed in LabID\")\n        }\n        else if (whitespace === true) {\n            this.showNotification('danger', \"Spacing Not Allowed in LabID\")\n        }\n        else if (state_data.reportPDF === null) {\n            this.showNotification('danger', \"PDF file is required\")\n        }\n        else {\n            const data = new FormData()\n            data.append('report', state_data.reportPDF)\n            data.append(\"location\", state_data.location || null)\n            data.append(\"labid\", state_data.lab_id)\n            data.append(\"additional_email\", state_data.emailCollection)\n            data.append(\"sample_id\", state_data.sample_id)\n            data.append(\"wo\", state_data.wo)\n            data.append(\"po\", state_data.po)\n            data.append(\"reported_at\", state_data.reportDate)\n            axios({\n                method: 'post',\n                url: GC_FTIR_OIL_Report_URL,\n                headers: header,\n                data: data,\n            }).then(response => {\n                if (response.data) {\n                    this.showNotification('success', 'GC FTIR OIL Report Created Successfully')\n                    callback(response.data.data);\n                }\n\n            }).catch(error => {\n                this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n    GC_FTIR_OIL_Report_GetAll = callback => {\n        axios({\n            method: 'get',\n            url: GC_FTIR_OIL_Report_URL,\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    GC_FTIR_OIL_Report_GetByID = (id, callback) => {\n        axios({\n            method: 'get',\n            url: GC_FTIR_OIL_Report_URL,\n            headers: header,\n            params: { id: id }\n        }).then(response => {\n            if (response.data) {\n                return callback(response.data.data)\n            }\n            return false;\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n    GC_FTIR_OIL_Report_Update = (id, state_data, callback) => {\n        const reWhiteSpace = new RegExp(/\\s/);\n        const whitespace = reWhiteSpace.test(state_data.lab_id)\n        if (state_data.location === null) {\n            this.showNotification('danger', constants.Location_error)\n        }\n        else if (state_data.lab_id === \"\") {\n            this.showNotification('danger', \"Lab ID is required\")\n        }\n        else if (/^[A-Z0-9]*$/.test(state_data.lab_id) === false) {\n            this.showNotification('danger', \"Only capital letter Allowed in LabID\")\n        }\n        else if (whitespace === true) {\n            this.showNotification('danger', \"Spacing Not Allowed in LabID\")\n        }\n        // else if (state_data.reportPDF === null) {\n        //     this.showNotification('danger', \"PDF file is required\")\n        // }\n        else {\n            const data = new FormData()\n            data.append('report', state_data.reportPDF)\n            data.append(\"location\", state_data.location || null)\n            data.append(\"labid\", state_data.lab_id)\n            data.append(\"additional_email\", state_data.emailCollection)\n            data.append(\"sample_id\", state_data.sample_id)\n            data.append(\"wo\", state_data.wo)\n            data.append(\"po\", state_data.po)\n            data.append(\"reported_at\", state_data.reportDate)\n            axios({\n                method: 'put',\n                url: `${GC_FTIR_OIL_Report_URL}/${id}`,\n                headers: header,\n                data: data,\n            }).then(response => {\n                const res = response.data\n                if (res.status) {\n                    this.showNotification('warning', 'GC FTIR OIL Report Updated Successfully')\n                    return callback(res);\n                }\n            }).catch(error => {\n                this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n        }\n    }\n\n    GC_FTIR_OIL_Report_Delete = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: `${GC_FTIR_OIL_Report_URL}/${id}`,\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                this.showNotification('success', 'GC FTIR OIL Report deleted Successfully')\n                return callback(response.data)\n            } else {\n                this.showNotification('danger', 'Cannot delete GC FTIR OIL Report')\n                return callback(false)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    GC_FTIR_OIL_Report_Download_PDF = (report_path) => {\n        if (report_path !== \"\") {\n            this.showNotification('warning', 'Reteriving PDF. Please wait...')\n            //  window.open(SAMPLE_CONTROLLER_SERVER + report_path)\n            window.open(REPORTS_SERVER + report_path + \"?auth=\" + header.authorization)\n        }\n        else if (report_path === \"\") {\n            this.showNotification('danger', 'Cannot generate PDF right now.')\n        }\n\n    }\n    GC_FTIR_OIL_Report_Search = (search_key, callback) => {\n        axios({\n            method: 'get',\n            url: `${GC_FTIR_OIL_Report_URL}/search`,\n            headers: header,\n            params: {\n                search: search_key,\n            },\n        }).then(response => {\n            const data = response.data || []\n            callback(data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            callback(error.message)\n        })\n    }\n    GC_FTIR_OIL_Report_MailClient = (labid, callback) => {\n        axios({\n            method: 'get',\n            url: `${GC_FTIR_OIL_Report_URL}/mail/${labid}`,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', ('Mail sent for' + labid))\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', error.response.data.error_message || constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n}\n\nexport default new SampleService()\n","import { store } from 'react-notifications-component';\n\nimport { DATA_CONTROLLER_SERVER as SERVICE_URL } from \"config\";\nimport constants from \"constants/index\"\nimport axios, { header, headerMultiPart } from '_helper/axios'\nimport logger from '_helper/logger';\n\nclass DataControllerService {\n\n    showNotification = (type, message) => {\n        store.addNotification({\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n                duration: 5000,\n                onScreen: true\n            }\n        });\n    }\n\n    getPopulationAndStoreDataByTag = (callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'sample/populate/api-collect',\n            headers: header,\n        }).then(response => {\n            const { data: { fuelServices = [], packageServices = [], reportCompanies = [] } } = response.data;\n            return callback({ fuelServices, packageServices, reportCompanies, })\n        }).catch((getPopulationAndStoreDataByTagError) => {\n            logger(getPopulationAndStoreDataByTagError, 'getPopulationAndStoreDataByTagError')\n            return callback({ fuelServices: [], packageServices: [], reportCompanies: [], })\n        })\n    }\n    /*-------------------- Controller functions ----------------------*/\n    /*-------------------- Fuel related ----------------------*/\n\n    createFuel = (data, callback) => {\n        const formData = {\n            name: data.fuelName\n        }\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'fuel/create',\n            headers: header,\n            data: formData,\n        }).then(response => {\n            this.showNotification('success', 'New fuel ' + data.fuelName + \" created\")\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getFuelList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'fuel/',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(() => {\n            callback([])\n        })\n    }\n\n    deleteFuel = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'fuel/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Fuel deleted sucessfully')\n            callback(response.data);\n        }).catch(() => {\n            this.showNotification('success', 'Cannot delete fuel at this moment')\n            callback([])\n        })\n\n    }\n\n    fuelById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'fuel/',\n            headers: header,\n        }).then(response => {\n            response.data.map(value => {\n                if (value.id === id) {\n                    return callback(value);\n                }\n                return false;\n            })\n        }).catch(() => {\n        })\n    }\n\n    updateFuel = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'fuel/' + data.id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('warning', 'Fuel details updated')\n            callback(response.data);\n        }).catch(() => {\n            callback([])\n        })\n\n    }\n\n    /*------------------ Laboratory test related ---------------*/\n\n    getLabTestResultType = callback => {\n        const resultType = [\n            {\n                id: \"celsius\",\n                name: \"Celsius\"\n            },\n            {\n                id: \"convert_to_celsius\",\n                name: \"Convert to Celsius\"\n            },\n            {\n                id: \"ppm\",\n                name: \"ppm\"\n            },\n            {\n                id: \"other\",\n                name: \"Other\"\n            }\n        ]\n        callback(resultType)\n    }\n\n    createLabTest = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'labtest/create',\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('success', 'New laboratory test added')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getLabTestList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'labtest',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getLabTestListByDate = (start_date, end_date, callback) => {\n        if (!start_date || !end_date) {\n            callback([])\n            return\n        }\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'sample/work-flow/data/get-locations-by-date-on-sampl-test',\n            headers: header,\n            params: {\n                start_date,\n                end_date\n            }\n        }).then(({ data = {} }) => {\n            callback(data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getLabTestList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'labtest',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getLabTestById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'labtest/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    updateLabTest = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'labtest/' + data.id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('warning', 'Laboratory test updated')\n            callback(response);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    deleteLabTest = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'labtest/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Laboratory test deleted')\n            callback(response);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    /*------------------  Kit ----------------------*/\n\n    createFuelKit = (data, callback) => {\n        const formData = {\n            name: data,\n        }\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'kit/create',\n            headers: header,\n            data: formData,\n        }).then(response => {\n            this.showNotification('success', 'Created fuel kit')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getKitList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'kit/',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    getKitById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'kit/',\n            headers: header,\n        }).then(response => {\n            if (response.data) {\n                response.data.map(value => {\n                    if (value.id === id) {\n                        return callback(value);\n                    }\n                    return false;\n                })\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    updateFuelKit = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'kit/' + data.id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('warning', 'Fuel kit updated')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    deletetKit = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'kit/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Fuel kit deleted')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    /*--------------- Package ---------------------*/\n\n    createPackage = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'package/create',\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('success', 'New package created')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getAllPackage = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'package/',\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    updatePackage = (data, callback) => {\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'package/' + data.id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('warning', 'Package updated')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getPackageById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'package/' + id,\n            headers: header,\n        }).then(response => {\n            callback(response.data);\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    deletePackage = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'package/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Package deleted')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    getComponentMake = callback => {\n        callback(\n            [\n                { id: '', name: \"Select one\" },\n                { id: \"AA\", name: \"AA\", },\n                { id: \"cat\", name: \"Cat\", },\n                { id: \"cummins\", name: \"Cummins\", },\n                { id: \"detroitdiesel\", name: \"Detroit Diesel\", },\n                { id: \"generac\", name: \"Generac\", },\n                { id: \"katolight\", name: \"Katolight\", },\n                { id: \"kohler\", name: \"Kohler\", },\n                { id: \"mitshubishi\", name: \"Mitshubishi\", },\n                { id: \"olympian\", name: \"Olympian\", },\n                { id: \"waukesha\", name: \"Waukesha\", },\n                { id: \"perkins\", name: \"Perkins\", },\n                { id: \"em\", name: \"EM\", },\n                { id: \"johndeere\", name: \"John Deere\", },\n                { id: \"onan\", name: \"Onan\", },\n                { id: \"other\", name: \"Other\", },\n            ]\n        )\n    }\n\n    getRushList = callback => {\n        callback(\n            [\n                { id: \"standard\", days: \"3\", name: \"Standard\", },\n                { id: \"rush24\", days: \"1\", name: \"Rush 24\", },\n                { id: \"rush48\", days: \"2\", name: \"Rush 48\", },\n            ]\n        )\n    }\n\n\n    reportCompanyCreate = (companyData, callback) => {\n\n        var data = {\n            'name': companyData.name,\n            'address': companyData.address,\n            'city': companyData.city,\n            'state': companyData.state,\n            'zipcode': companyData.zipcode,\n            'phone1': (companyData.phone1.replace(/[^0-9]/g, '').length === 10) ? companyData.phone1.replace(/[^0-9]/g, '').slice(0, 10) : null,\n            'phone2': (companyData.phone2.replace(/[^0-9]/g, '').length === 10) ? companyData.phone2.replace(/[^0-9]/g, '').slice(0, 10) : null,\n        }\n\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'reportcom/create/',\n            headers: header,\n            data: data,\n        }).then(response => {\n            if (response.data) {\n                const companyResponse = response.data.data;\n                this.reportLogoUpload(companyData.logo, companyResponse.id, () => {\n\n                })\n                this.showNotification('success', 'New reporting company created')\n                callback(companyResponse)\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    reportCompanyList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'reportcom/',\n            headers: header,\n        }).then(response => {\n            callback(response.data)\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    reportCompanyGetId = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'reportcom/' + id,\n            headers: header,\n        }).then(response => {\n            var result = response.data\n            if (result) {\n                if (result.phone1) {\n                    result.phone1 = (result.phone1.toString().slice(0, 3) + '-' + result.phone1.toString().slice(3, 6) + '-' + result.phone1.toString().slice(6, 10))\n                } else {\n                    result.phone1 = \" \"\n                }\n                if (result.phone2) {\n                    result.phone2 = (result.phone2.toString().slice(0, 3) + '-' + result.phone2.toString().slice(3, 6) + '-' + result.phone2.toString().slice(6, 10))\n                } else {\n                    result.phone2 = \" \"\n                }\n            }\n            callback(result)\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    reportCompanyUpdate = (companyData, callback) => {\n\n        var data = {\n            'name': companyData.name,\n            'address': companyData.address,\n            'city': companyData.city,\n            'state': companyData.state,\n            'zipcode': companyData.zipcode,\n            'phone1': (companyData.phone1.replace(/[^0-9]/g, '').length === 10) ? companyData.phone1.replace(/[^0-9]/g, '').slice(0, 10) : null,\n            'phone2': (companyData.phone2.replace(/[^0-9]/g, '').length === 10) ? companyData.phone2.replace(/[^0-9]/g, '').slice(0, 10) : null,\n        }\n\n        axios({\n            method: 'put',\n            url: SERVICE_URL + 'reportcom/' + companyData.selectedid,\n            headers: header,\n            data: data,\n        }).then(response => {\n            this.showNotification('warning', 'Update success')\n            callback(response.data)\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    reportLogoUpload = (logo, id, callback) => {\n        if (logo) {\n            var data = new FormData()\n            data.append('logo', logo);\n            axios({\n                method: 'post',\n                url: SERVICE_URL + 'reportcom/logo/?id=' + id,\n                headers: headerMultiPart,\n                data: data,\n            }).then(response => {\n                this.showNotification('success', 'Logo uploaded')\n                callback(response)\n            }).catch(error => {\n                this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n                console.log(error)\n            })\n            return\n        }\n        this.showNotification('danger', 'No logo for company')\n    }\n\n    reportCompanyDelete = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'reportcom/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Reporting company deleted')\n            callback(response.data)\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    /************************ Shipping Method ********************************* */\n    createShippingMethod = async (data, callback) => {\n        const formData = {\n            name: data.name,\n            cost: data.cost,\n            duration: data.duration\n        }\n        axios({\n            method: 'post',\n            url: SERVICE_URL + 'shipping/methods',\n            headers: header,\n            data: formData,\n        }).then(response => {\n            this.showNotification('success', response.data.message || 'Shipping Method created')\n            if (response.data && response.data.data) {\n                callback(response.data.data);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    getShippingMethodList = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'shipping/methods',\n            headers: header,\n        }).then(response => {\n            return callback(response.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    getShippingMethodById = (id, callback) => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'shipping/methods/' + id,\n            headers: header,\n        }).then(response => {\n            if (response.data.data.id === id) {\n                return callback(response.data.data)\n            }\n            return false;\n\n        }).catch(() => {\n        })\n    }\n    updateShippingMehtodById = (id, data, callback) => {\n        axios({\n            method: 'put',\n            url: SERVICE_URL + 'shipping/methods/' + id,\n            headers: header,\n            data: data,\n        }).then(response => {\n            const res = response.data\n            if (res.status) {\n                this.showNotification('warning', response.data.message || 'Shipping Mathod updated')\n                return callback(res);\n            } else {\n                this.showNotification('danger', 'Operation failed')\n                return callback([]);\n            }\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n    deleteShippingMethod = (id, callback) => {\n        axios({\n            method: 'delete',\n            url: SERVICE_URL + 'shipping/methods/' + id,\n            headers: header,\n        }).then(response => {\n            this.showNotification('success', 'Shipping Method deleted')\n            callback(response.data);\n        }).catch(error => {\n            this.showNotification('danger', constants.DEFAULT_ERROR_ALERT)\n            console.log(error)\n        })\n    }\n\n    /***********************************Admin panel - Selected Checklist ******************************************* */\n    getAdminChecklist = callback => {\n        axios({\n            method: 'get',\n            url: SERVICE_URL + 'checklist',\n            headers: header,\n        }).then(response => {\n            return callback(response.data.data)\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n\n}\n\nexport default new DataControllerService()","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Icon } from \"@material-ui/core\";\nimport Loader from 'react-loader-spinner';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport moment from \"moment-timezone\";\n\nimport auth from 'services/auth'\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { sampleService } from 'services/api.services'\n\nconst useStyles = () => (styles);\nvar _renderDashboard = null;\n\nclass DashboardViewPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sifList: [], sifPendingCount: 0, sifArchivedCount: 0, sifCompletedCount: 0,\n      isLoading: true, isPendingSIFView: false, isArchivedSIFView: false, isCompletedSIFView: false,\n      role: 'customer',\n    }\n  }\n\n  componentDidMount = () => {\n    this._loadData()\n    this.setState({\n      role: auth.authRole()\n    })\n  }\n\n  _loadData = () => {\n    this.setState({ isLoading: true })\n    this.getSIFList()\n  }\n\n  getSIFList = () => {\n    var params = {\n      limit: 10,\n    }\n    if (this.state.isPendingSIFView) { params.filter = 'pending' }\n    if (this.state.isArchivedSIFView) { params.filter = 'archived' }\n    if (this.state.isCompletedSIFView) { params.filter = 'completed' }\n\n    sampleService.getSIFList(params, ({ sif = [], count = {} }) => {\n      this.setState({\n        sifList: sif || [],\n        sifPendingCount: count.pending || 0,\n        sifCompletedCount: count.completed || 0,\n        sifArchivedCount: count.archived || 0\n      })\n      this.setState({ isLoading: false })\n    })\n  }\n\n  getpdf = labid => {\n    sampleService.downloadpdf(labid, result => {\n\n    });\n  }\n\n  _renderAdminDash = () => {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this._renderHeader()}\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Recent SIF</h4>\n              </CardHeader>\n              <CardBody>\n                {this.state.isLoading\n                  ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n                  : <div className={classes.tableResponsive}>\n                    <Table className={classes.table}>\n                      <TableHead className={classes.info}>\n                        <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"pdf\"} > PDF </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"customer\"} > Customer </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"company\"} > Company </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"labid\"} > Lab ID </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"email\"} > Email </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"} > Status </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n\n                        {this.state.sifList.length\n                          ? this.state.sifList.map((value, key) =>\n                            <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                              <TableCell className={classes.tableCell} key={key}>\n                                <PictureAsPdfIcon onClick={() => this.getpdf(value.labid)} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={'customername' + key}> {value.customer} </TableCell>\n                              <TableCell className={classes.tableCell} key={'company' + key}> {value.company} </TableCell>\n                              <TableCell className={classes.tableCell} key={'labid' + key}> {value.labid} </TableCell>\n                              <TableCell className={classes.tableCell} key={'additionamemail' + key}> {value.additionalemail.length ? value.additionalemail.length + 1 : 1} </TableCell>\n                              <TableCell className={classes.tableCell} key={'status' + key}> {value.status ? (value.status.slice(0, 1).toUpperCase() + value.status.slice(1)) : \"\"} </TableCell>\n                            </TableRow>\n                          )\n                          : <TableRow>No records available</TableRow>}\n                      </TableBody>\n                    </Table>\n                  </div>\n                }\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    )\n  }\n\n  _renderManagerDashboard = () => {\n    return (\n      this._renderAdminDash()\n    )\n  }\n\n  _renderEmployeeDashboard = () => {\n    return (\n      this._renderAdminDash()\n    )\n  }\n\n  _renderCustomerDashboard = () => {\n    const { classes } = this.props;\n    return (\n      <div>\n        {this._renderHeader()}\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Recent Result</h4>\n              </CardHeader>\n              <CardBody>\n                {this.isLoading\n                  ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n                  : <div className={classes.tableResponsive}>\n                    <Table className={classes.table}>\n                      <TableHead className={classes.info}>\n                        <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"pdf\"} > PDF </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"labid\"} > Lab ID </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"sample-id\"} > Sample ID </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"customer\"} > Location </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"} > Status </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"company\"} > Received </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n\n                        {this.state.sifList.length\n                          ? this.state.sifList.map((value, key) =>\n                            <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                              <TableCell className={classes.tableCell} key={key}>\n                                <PictureAsPdfIcon onClick={() => this.getpdf(value.labid)} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={'labid-' + key}> {value.labid} </TableCell>\n                              <TableCell className={classes.tableCell} key={'sample-id-' + key}> {value.sampleid} </TableCell>\n                              <TableCell className={classes.tableCell} key={'customername' + key}> {value.wolocation} </TableCell>\n                              <TableCell className={classes.tableCell} key={'status' + key}> {value.status ? (value.status.slice(0, 1).toUpperCase() + value.status.slice(1)) : \"\"} </TableCell>\n                              <TableCell className={classes.tableCell} key={'company' + key}> {moment(value.datein).format('ll')} </TableCell>\n                            </TableRow>\n                          )\n                          : <TableRow>No records available</TableRow>}\n                      </TableBody>\n                    </Table>\n                  </div>\n                }\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    )\n  }\n  _renderHeader = () => {\n    const { classes } = this.props\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={this.state.role === 'customer' ? 6 : 4}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Icon>P</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Pending test</p>\n              <h3 className={classes.cardTitle}>{this.state.sifPendingCount} </h3>\n            </CardHeader>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={this.state.role === 'customer' ? 6 : 4}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Icon>C</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Completed test</p>\n              <h3 className={classes.cardTitle}>{this.state.sifCompletedCount}</h3>\n            </CardHeader>\n          </Card>\n        </GridItem>\n        {this.state.role === 'customer'\n          ? null\n          : <GridItem xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader color=\"warning\" stats icon>\n                <CardIcon color=\"warning\">\n                  <Icon>A</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory}>Archived test</p>\n                <h3 className={classes.cardTitle}>{this.state.sifArchivedCount}</h3>\n              </CardHeader>\n            </Card>\n          </GridItem>\n        }\n      </GridContainer>\n    )\n  }\n\n  render() {\n    switch (auth.authRole()) {\n\n      case \"admin\": {\n        _renderDashboard = this._renderAdminDash();\n        break;\n      }\n      case \"manager\": {\n        _renderDashboard = this._renderManagerDashboard();\n        break;\n      }\n      case \"employee\": {\n        _renderDashboard = this._renderEmployeeDashboard();\n        break;\n      }\n      case \"customer\": {\n        _renderDashboard = this._renderCustomerDashboard();\n        break;\n      }\n      default: {\n        _renderDashboard = null;\n        break;\n      }\n    }\n    return (\n      _renderDashboard\n    );\n\n  }\n}\n\n\nexport default withStyles(useStyles)(DashboardViewPage);\n","import { grayColor } from \"assets/jss/material-dashboard-react.js\";\n\nconst cardFooterStyle = {\n  cardFooter: {\n    padding: \"0\",\n    paddingTop: \"10px\",\n    margin: \"0 15px 10px\",\n    borderRadius: \"0\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundColor: \"transparent\",\n    border: \"0\"\n  },\n  cardFooterProfile: {\n    marginTop: \"-15px\"\n  },\n  cardFooterPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    backgroundColor: \"transparent\"\n  },\n  cardFooterStats: {\n    borderTop: \"1px solid \" + grayColor[10],\n    marginTop: \"20px\",\n    \"& svg\": {\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\",\n      width: \"16px\",\n      height: \"16px\"\n    },\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\n      fontSize: \"16px\",\n      position: \"relative\",\n      top: \"4px\",\n      marginRight: \"3px\",\n      marginLeft: \"3px\"\n    }\n  },\n  cardFooterChart: {\n    borderTop: \"1px solid \" + grayColor[10]\n  }\n};\n\nexport default cardFooterStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardFooterStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardFooter(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\n  const cardFooterClasses = classNames({\n    [classes.cardFooter]: true,\n    [classes.cardFooterPlain]: plain,\n    [classes.cardFooterProfile]: profile,\n    [classes.cardFooterStats]: stats,\n    [classes.cardFooterChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardFooterClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardFooter.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  stats: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  primaryColor,\n  dangerColor,\n  successColor,\n  defaultFont\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst customInputStyle = {\n  disabled: {\n    \"&:before\": {\n      backgroundColor: \"transparent !important\"\n    }\n  },\n  underline: {\n    \"&:hover:not($disabled):before,&:before\": {\n      borderColor: 'black' + \" !important\",\n      borderWidth: \"1px !important\"\n    },\n    \"&:after\": {\n      borderColor: primaryColor[0]\n    }\n  },\n  underlineError: {\n    \"&:after\": {\n      borderColor: dangerColor[0]\n    }\n  },\n  underlineSuccess: {\n    \"&:after\": {\n      borderColor: successColor[0]\n    }\n  },\n  chip: {\n\n  },\n  chips: {\n\n  },\n  labelRoot: {\n    ...defaultFont,\n    color: 'black' + \" !important\",\n    fontWeight: \"400\",\n    fontSize: \"14px\",\n    lineHeight: \"1.42857\",\n    letterSpacing: \"unset\"\n  },\n  labelRootError: {\n    color: dangerColor[0]\n  },\n  labelRootSuccess: {\n    color: successColor[0]\n  },\n  feedback: {\n    position: \"absolute\",\n    top: \"18px\",\n    right: \"0\",\n    zIndex: \"2\",\n    display: \"block\",\n    width: \"24px\",\n    height: \"24px\",\n    textAlign: \"center\",\n    pointerEvents: \"none\"\n  },\n  marginTop: {\n    marginTop: \"16px\"\n  },\n  formControl: {\n    paddingBottom: \"10px\",\n    margin: \"27px 0 0 0\",\n    position: \"relative\",\n    verticalAlign: \"unset\"\n  }\n};\n\nexport default customInputStyle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n// @material-ui/icons\nimport Clear from \"@material-ui/icons/Clear\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/customInputStyle.js\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport { Chip, MenuItem, Select } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    onChange\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        onChange={onChange}\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nexport function CustomDateRangePicker(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    onChange\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <DateRangePicker\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        onChange={onChange}\n        {...inputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nexport function CustomMultiEmailInput(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    onChange,\n    onKeyDown,\n    onPaste\n  } = props;\n\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n      {labelText !== undefined ? (\n        <InputLabel\n          className={classes.labelRoot + labelClasses}\n          htmlFor={id}\n          {...labelProps}\n        >\n          {labelText}\n        </InputLabel>\n      ) : null}\n      <Input\n        onChange={onChange}\n        onPaste={onPaste}\n        onKeyDown={onKeyDown}\n        classes={{\n          root: marginTop,\n          disabled: classes.disabled,\n          underline: underlineClasses\n        }}\n        id={id}\n        {...inputProps}\n      />\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nexport function CustomDropBox(props) {\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    selectProps,\n    error,\n    success,\n    onChange,\n    valuekey,\n    value,\n    selectedValue,\n    inputProps,\n  } = props;\n  \n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  return (\n    <FormControl\n      {...formControlProps}\n      className={formControlProps.className + \" \" + classes.formControl}\n    >\n\n      {labelText !== undefined\n        ? (<InputLabel htmlFor={id} className={classes.labelRoot} id={id+\"-selection\"}>{labelText}</InputLabel>)\n        : null}\n      <Select\n        labelId={id + \"-selection\"}\n        id={id + \"-selection\"}\n        value={selectedValue}\n        onChange={onChange}\n        {...inputProps}\n        input={<Input id={id + \"-multiple-chip\"} />}\n        renderValue={(selected) => (\n          <div className={classes.chips}>\n            {selected.map((value) => (\n              <Chip key={value.id} label={valuekey.map(key => {\n                if (key.trim() === 'email' && value[key] !== '' && value[key] !== 'undefined' && value[key] !== null) {\n                  return ' - ' + value[key] || \" \"\n                }\n                return (value[key] || \" \") + \" \"\n              })} className={classes.chip} />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n        {...selectProps}\n      >\n        {value.map((value) => (\n          <MenuItem key={value.id} value={value} >\n            {valuekey.map(key => {\n              if (key.trim() === 'email' && value[key] !== '' && value[key] !== 'undefined' && value[key] !== null) {\n                return ' -' + value[key]\n              }\n              return value[key] + \" \"\n            })}\n          </MenuItem>\n        ))}\n      </Select>\n      {error ? (\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\n      ) : success ? (\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\n      ) : null}\n    </FormControl>\n  );\n}\n\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\nCustomDateRangePicker.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\nCustomMultiEmailInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool\n};\n","import {whiteColor} from \"assets/jss/material-dashboard-react.js\";\n  \n  const autocompleteStyle = {\n    autocomplete: {\n      minHeight: \"auto\",\n      minWidth: \"auto\",\n      backgroundColor: whiteColor ,\n      color: whiteColor,\n      border: \"none\",\n      borderRadius: \"3px\",\n      position: \"relative\",\n      padding: \"12px 0px\",\n      margin: \".3125rem 1px\",\n      fontSize: \"10px\",\n      fontWeight: \"400\", \n      letterSpacing: \"0\",\n      willChange: \"box-shadow, transform\",\n      lineHeight: \"1.42857143\",\n      textAlign: \"center\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      touchAction: \"manipulation\",\n      cursor: \"pointer\",\n      \"&:hover,&:focus\": {\n        color: whiteColor,\n        backgroundColor: whiteColor[0],\n       \n      },\n      \n    },\n    white: {\n      \"&,&:focus,&:hover\": {\n        backgroundColor: whiteColor,\n        color: whiteColor[0]\n      }\n    },\n\n    transparent: {\n      \"&,&:focus,&:hover\": {\n        color: \"inherit\",\n        background: \"transparent\",\n        boxShadow: \"none\"\n      }\n    },\n   \n    lg: {\n      padding: \"1.125rem 2.25rem\",\n      fontSize: \"0.875rem\",\n      lineHeight: \"1.333333\",\n      borderRadius: \"0.2rem\"\n    },\n    sm: {\n      padding: \"0.40625rem 1.25rem\",\n      fontSize: \"0.6875rem\",\n      lineHeight: \"1.5\",\n      borderRadius: \"0.2rem\"\n    },\n    \n  };\n  \n  export default autocompleteStyle;\n  ","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// material-ui components\nimport { makeStyles } from \"@material-ui/core/styles\"; \n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport styles from \"assets/jss/material-dashboard-react/components/autocompleteStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function RegularAutocomplete(props) {\n  const classes = useStyles();\n  const {\n    color,\n    children,\n    size,\n    className,\n    muiClasses,\n    onClick,\n    ...rest\n  } = props;\n  const autocompleteClasses = classNames({\n    [classes.autocomplete]: true,\n    [classes[size]]: size,\n    [classes[color]]: color,\n    [className]: className\n  });\n  return (\n    <Autocomplete {...rest} onClick={onClick} classes={muiClasses} className={autocompleteClasses}>\n      {children}\n    </Autocomplete>\n  );\n}\n\nRegularAutocomplete.propTypes = {\n  color: PropTypes.oneOf([\n    \"white\",\n    \"transparent\"\n  ]),\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\n  className: PropTypes.string,\n  muiClasses: PropTypes.object,\n  children: PropTypes.node\n};\n","import moment from \"moment-timezone\";\n\nexport default {\n  // On Load list\n  customerList: [],\n  fuelList: [],\n  packageList: [],\n  labTestList: [],\n  sifList: [],\n  sifPendingCount: 0,\n  sifArchivedCount: 0,\n  sifCompletedCount: 0,\n  componentMakeList: [],\n  rushList: [],\n  reportCompList: [],\n  isSIFLoading: true,\n  locationList: [],\n  // Tab Selection\n  onShowSIFTab: true,\n  // SIF Form\n  isCreateSIF: false,\n  selectedPriority: [],\n  dueDate: moment().tz(\"America/Los_Angeles\").add(\"3\", \"days\").format(\"LL\"),\n  selectedFuelTest: [],\n  company: \"\",\n  selectedCustomer: [],\n  customerId: \"\",\n  customerName: \"\",\n  tankCapacity: \"\",\n  tankQuantity: \"\",\n  componentModel: \"\",\n  po: \"\",\n  wo: \"\",\n  woLocation: \"\",\n  selectedFuelTypes: [],\n  applicableTest: [],\n  labId: \"\",\n  sampleid: \"\",\n  sampleLoc: \"\",\n  comment: \"\",\n  isEditSIF: false,\n  woZipCode: \"\",\n  componentMake: \"\",\n  selectedSif: {},\n  collectionDate: \"\",\n  serialNumber: \"\",\n  //SIF Form error\n  selectedCustomerError: false,\n  // Common\n  isDisabled: false,\n  // Multiple email\n  emailCollection: [],\n  value: \"\",\n  emailError: null,\n  //Package\n  selectedPackage: [],\n  // Popup\n  triggerMessage: \"\",\n  // Pagination\n  page: 0,\n  rowsPerPage: 10,\n  //\n  SelectedComponentMake: [],\n  originalSIFList: [],\n  // SIF Filter\n  isPendingSIFView: false,\n  isCompletedSIFView: false,\n  isArchivedSIFView: false,\n  //Reported Company\n  selectedReportComp: [],\n  // Temporary pdf selection\n  selectedpdf: null,\n  //SearchKeyword\n  searchValue: '',\n  // Multiple select\n  multiLabIDSelected: [],\n  //Toggle Button\n  index: 0,\n  disabledNext: false,\n  disabledPrev: false,\n  //sifStatus\n  sifStatus: \"Available SIF\",\n  //location\n  defaultLocation: '',\n  location_value: {},\n  locationupdatedId: '',\n  //availabel sifList\n  Available_SifList: [],\n  //Data Available fule test\n  dataAvailable: false,\n  dataValue: [],\n  //customercomment\n  customercomment: '',\n  comments: [],\n  selectedFuelTestComment: '',\n  //selected Test Result\n  selectedTestResult: '',\n  // If user needs to create custom SIF with LAB ID provided\n  customLabID: \"\",\n  requireCustomLabIDSection: false,\n  createdDate: moment().format(\"LL\"),\n}","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { MenuItem, InputLabel, FormControl, Select, Chip, Input, Icon, TextField, FormControlLabel, Checkbox, } from \"@material-ui/core\";\nimport moment from \"moment-timezone\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Popup from \"reactjs-popup\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { red } from \"@material-ui/core/colors\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Loader from \"react-loader-spinner\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CardIcon from \"components/Card/CardIcon\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { userService, sampleService, dataControllerService, } from \"services/api.services\";\nimport CustomInput, { CustomMultiEmailInput, } from \"components/CustomInput/CustomInput\";\nimport Autocomplete from 'components/Autocomplete/Autocomplete';\nimport initialState from \"./initialState\";\n\nconst useStyles = () => styles;\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = { PaperProps: { style: { maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP, width: 250, }, }, };\n\nclass SampleViewPageV2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount = () => {\n    this._onLoad();\n  };\n\n  _onLoad = () => {\n    try {\n      // Location collection\n      let locationList = sessionStorage.getItem('location-list');\n      locationList = JSON.parse(locationList);\n      if (locationList && (locationList instanceof Array) && locationList.length) {\n        this.setState({ locationList });\n      }\n\n    } catch (e) {\n      console.log(e)\n    }\n\n    dataControllerService.getPopulationAndStoreDataByTag(({ fuelServices = [], packageServices = [], reportCompanies = [] }) => {\n      let reportCompListInitial = [{ name: \"Select One\", id: null }];\n      this.setState({\n        fuelList: fuelServices,\n        packageList: packageServices,\n        reportCompList: reportCompListInitial.concat(reportCompanies || []),\n      });\n    });\n\n    this.getSIFList(); userService.getUsersList(\"customer\", true, (result) => { this.setState({ customerList: result }); });\n    dataControllerService.getLabTestList((result) => { this.setState({ labTestList: result }); });\n    dataControllerService.getComponentMake((componentMakeList) => { this.setState({ componentMakeList: componentMakeList, }); });\n    dataControllerService.getRushList((rushList) => { this.setState({ rushList: rushList, }); });\n    userService.getAllLocation(({ data: locationList }) => {\n      if (locationList && (locationList instanceof Array)) {\n        this.setState({ locationList });\n        sessionStorage.setItem('location-list', JSON.stringify(locationList))\n      }\n    });\n\n  };\n\n  getSIFList = (filter = \"\") => {\n    var params = { limit: 1000, };\n    if (this.state.isPendingSIFView) { params.filter = \"pending\"; }\n    if (this.state.isArchivedSIFView) { params.filter = \"archived\"; }\n    if (this.state.isCompletedSIFView) { params.filter = \"completed\"; }\n    sampleService.getSIFList(params, (result) => {\n      if (result) {\n        const count = result.count;\n        try {\n          this.setState({\n            sifStatus: params.filter,\n            sifList: result.sif || [],\n            sifPendingCount: count.pending || this.state.sifPendingCount,\n            sifCompletedCount: count.completed || this.state.sifCompletedCount,\n            sifArchivedCount: count.archived || this.state.sifArchivedCount,\n          });\n        } catch (err) {\n          console.log(err)\n        }\n      }\n\n      this.setState({ isSIFLoading: false, Available_SifList: this.state.sifList });\n    });\n  };\n\n  /*------------------------- Handlers ------------------------- */\n  _handleReset = () => {\n    this.setState({\n      // SIF Form\n      isCreateSIF: false, selectedPriority: [], dueDate: moment().tz(\"America/Los_Angeles\").add(\"3\", \"days\").format(\"LL\"),\n      selectedFuelTest: [], company: \"\", selectedCustomer: [], customerId: \"\", customerName: \"\", tankCapacity: \"\", tankQuantity: \"\", componentModel: \"\", po: \"\", wo: \"\", woLocation: \"\", selectedFuelTypes: [], applicableTest: [], labId: \"\", sampleid: \"\", sampleLoc: \"\",\n      comment: \"\",\n      isEditSIF: false,\n      woZipCode: \"\",\n      componentMake: \"\",\n      selectedSif: {},\n      collectionDate: \"\",\n      serialNumber: \"\",\n      //SIF Form error\n      selectedCustomerError: false,\n      // Common\n      isDisabled: false,\n      // Multiple email\n      emailCollection: [],\n      value: \"\",\n      emailError: null,\n      //Package\n      selectedPackage: [],\n      // Popup\n      triggerMessage: \"\",\n      //\n      SelectedComponentMake: [],\n      // SIF Filter\n      isPendingSIFView: false,\n      isCompletedSIFView: false,\n      isArchivedSIFView: false,\n      //Reported Company\n      selectedReportComp: [],\n      // Temporary pdf selection\n      selectedpdf: null,\n      //defaultLocation\n      defaultLocation: '',\n      locationupdatedId: '',\n      location_value: {},\n      selectedFuelTestComment: '',\n      comments: [],\n      // If user needs to create custom SIF with LAB ID provided\n      customLabID: \"\", requireCustomLabIDSection: false, createdDate: moment().format(\"LL\"),\n    });\n  };\n\n  _handleLocationSelection = (location) => {\n    if (location) {\n      var customername = \"\"; customername = location.name.trim();\n      var temp = { city: \"\", state: \"\", country: \"\", };\n      if (location.city !== \"undefined\" && location.city !== null && location.city !== \"\")\n        temp.city = location.city + \", \" || \" \";\n\n      if (location.state !== \"undefined\" && location.state !== null && location.state !== \"\")\n        temp.state = location.state + \", \" || \" \";\n\n      if (location.country !== \"undefined\" && location.country !== null && location.country !== \"\")\n        temp.country = location.country || \" \";\n\n\n      var tempEmail = [];\n      if (location.email && location.email.length > 0) {\n        location.email.map((email) => {\n          if (\n            email !== undefined && email !== \"undefined\" && email !== null &&\n            email !== \"\"\n          ) {\n            return tempEmail.push(email);\n          }\n          return false;\n        });\n      }\n      if (location.primaryemail !== undefined && location.primaryemail !== \"undefined\" && location.primaryemail !== null && location.primaryemail !== \"\")\n        tempEmail.push(location.primaryemail);\n\n\n      var selectedReportComp = this.state.selectedReportComp || [];\n      if (\n        location.reportcomp !== undefined && location.reportcomp !== \"undefined\" && location.reportcomp !== null && location.reportcomp !== \"\"\n      ) {\n        this.state.reportCompList.map((reportcomp) => {\n          if (reportcomp.id === location.reportcomp) {\n            return (selectedReportComp = [reportcomp]);\n          }\n          return false;\n        });\n      }\n      this.state.locationList.map((e, i) => {\n        if (e.name === customername) {\n          this.setState({ defaultLocation: e.name, locationupdatedId: location._id, customerNames: e.name })\n          this.setState({ location_value: { name: customername } })\n        }\n        return false;\n      })\n      this.setState({\n        locationId: location._id,\n        selectedCustomer: [location],\n        customerId: location.id,\n        customerName: customername,\n        company: \"\",\n        woLocation: temp.city + temp.state + temp.country,\n        woZipCode: location.zipcode || \"\",\n        emailCollection: tempEmail || [],\n        selectedReportComp: selectedReportComp || [],\n      });\n    } else {\n      this.setState({\n        selectedCustomer: [],\n        customerId: \"\",\n        customerName: \"\",\n        company: \"\",\n        defaultLocation: \"\",\n      });\n    }\n  };\n\n  _handlePrioritySelection = (event) => {\n    this.setState({ selectedPriority: [event.target.value], dueDate: moment().tz(\"America/Los_Angeles\").add(event.target.value.days, \"days\").format(\"LL\"), });\n  };\n\n  _handleReportCompSelection = (event) => {\n    if (event.target.value.id) { this.setState({ selectedReportComp: [event.target.value], }); }\n    else { this.setState({ selectedReportComp: [], }); }\n  };\n\n  _handleComponentMakeSelection = (event) => {\n    const value = event.target.value;\n    if (value.id) {\n      this.setState({\n        SelectedComponentMake: [event.target.value],\n      });\n    } else {\n      this.setState({\n        SelectedComponentMake: [],\n      });\n    }\n  };\n\n  _handleFuelSelection = (event) => {\n    const seletedFuel = event.target.value;\n    var applicableTestID = [];\n    let applicableTest = [];\n    if (seletedFuel.test.length) {\n      seletedFuel.test.map((test) => {\n        if (applicableTestID.indexOf(test.id) === -1) { return applicableTestID.push(test.id); }\n        return false;\n      });\n    }\n    applicableTestID.map((testid) => {\n      this.state.labTestList.map((labtest) => {\n        if (labtest.id === testid) { return applicableTest.push(labtest); }\n        return false;\n      });\n      return true;\n    });\n    this.setState({\n      selectedFuelTypes: [seletedFuel],\n      applicableTest: applicableTest,\n      selectedPackage: [],\n      selectedFuelTest: [],\n    });\n  };\n\n  _handlePackageSelection = (event) => {\n    const selectedPackage = event.target.value;\n    const test = selectedPackage.test;\n    var currentTestAvailableID = [];\n    var newSelectedTestID = [];\n    this.state.applicableTest.map((test) => { return currentTestAvailableID.push(test.id); });\n    if (test.length) {\n      test.map((value) => { return newSelectedTestID.push(value.testid); });\n    }\n    var temp = [];\n    currentTestAvailableID.map((current) => {\n      newSelectedTestID.map((present) => {\n        if (current === present) { return temp.push(present); }\n        return false;\n      });\n      return true;\n    });\n    var newTestApplicable = [];\n    temp.map((newid) => {\n      this.state.applicableTest.map((test) => {\n        return test.id === newid ? newTestApplicable.push(test) : null;\n      });\n      return true;\n    });\n    this.setState({\n      selectedPackage: [selectedPackage],\n      selectedFuelTest: newTestApplicable,\n      // selectedPackage: [],\n    });\n  };\n  _handleTestResultSelection = (event) => {\n    const selectedTest = event.target.value;\n    this.setState({ selectedTestResult: selectedTest });\n    var temp = this.state.selectedFuelTest;\n    var tempChange = {};\n    var selectedKey = null;\n    temp.map((test, key) => {\n      if (test.name === \"Microbial Growth\") {\n        selectedKey = key;\n        tempChange = temp[key];\n        tempChange.result = selectedTest;\n        return true;\n      }\n      return false;\n    });\n    temp[selectedKey] = tempChange;\n    this.setState({ selectedFuelTest: temp });\n  };\n  _handleTestSelection = (event) => {\n    let temp = event.target.value\n    this.setState({\n      selectedFuelTest: temp,\n    });\n  };\n\n  onFileSelect = (event) => {\n    this.setState({ selectedpdf: event.target.files[0] });\n  };\n\n  /*----------------- Multiple email entry handle ------------------*/\n  handleKeyDown = (evt) => {\n    if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n      evt.preventDefault();\n\n      var value = this.state.value.trim();\n\n      if (value && this._handleEmailIsValid(value)) {\n        this.setState({\n          emailCollection: [...this.state.emailCollection, this.state.value], value: \"\",\n        });\n      }\n    }\n  };\n\n  _handleEmailAddChange = (evt) => {\n    this.setState({\n      value: evt.target.value,\n      emailError: null,\n    });\n  };\n\n  _handleEmailRemoveChange = (item) => {\n    this.setState({\n      emailCollection: this.state.emailCollection.filter((i) => i !== item),\n    });\n  };\n\n  _handleEmailPasteChange = (evt) => {\n    evt.preventDefault();\n    var paste = evt.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !this._handleEmailIsInList(email));\n      this.setState({ emailCollection: [...this.state.emailCollection, ...toBeAdded], });\n    }\n  };\n\n  _handleEmailIsValid(email) {\n    let emailError = null;\n    if (this._handleEmailIsInList(email)) { emailError = `${email} has already been added.`; }\n    if (!this._handleEmailIsIsEmail(email)) { emailError = `${email} is not a valid email address.`; }\n    if (emailError) { this.setState({ emailError }); return false; }\n    return true;\n  }\n\n  _handleEmailIsInList(email) {\n    return this.state.emailCollection.includes(email);\n  }\n\n  _handleEmailIsIsEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n\n  /*------------------------------ Pagination -----------------------------------*/\n\n  _handleChangePage = (event, newPage) => { this.setState({ page: newPage }); };\n\n  _handleChangeRowsPerPage = (event) => { this.setState({ rowsPerPage: parseInt(+event.target.value) }); this.setState({ page: 0 }); };\n\n  /*-------------------- SIF -----------------------*/\n\n  onCreateSIF = () => {\n    var fuelTest = [];\n    this.state.selectedFuelTest.map((test) => {\n      if (test.name === \"Microbial Growth\") {\n        return fuelTest.push({ testid: test.id, name: test.name, dataAvailable: true })\n      }\n      else {\n        return fuelTest.push({ testid: test.id, name: test.name, dataAvailable: false })\n      }\n    })\n    const formdata = {\n      customerid: this.state.customerId,\n      locationid: this.state.customerId,\n      customer: this.state.customerName,\n      location: this.state.customerName,\n      company: this.state.company,\n      priority: this.state.selectedPriority.length ? this.state.selectedPriority[0].id : \"standard\",\n      due: this.state.dueDate,\n      tankcapacity: this.state.tankCapacity,\n      quantitytank: this.state.tankQuantity,\n      componentmodel: this.state.componentModel,\n      po: this.state.po,\n      wo: this.state.wo,\n      wolocation: this.state.woLocation.trim(),\n      wozipcode: this.state.woZipCode,\n      additionalemail: this.state.emailCollection,\n      fuel: this.state.selectedFuelTypes.length ? this.state.selectedFuelTypes[0]._id : \"\",\n      fueltest: fuelTest,\n      sampleid: this.state.sampleid,\n      sampleLoc: this.state.sampleLoc,\n      comment: this.state.comment,\n      serial: this.state.serialNumber,\n      reportcomp: this.state.selectedReportComp.length ? this.state.selectedReportComp[0]._id : \"\",\n    };\n\n    if (this.state.SelectedComponentMake.length) {\n      formdata.componentmake = this.state.SelectedComponentMake[0].name || \" \";\n    }\n    if (this.state.collectionDate) {\n      formdata.collectiondate = this.state.collectionDate\n    }\n    if (this.state.selectedCustomer.length) {\n      formdata.customeraddress = this.state.selectedCustomer[0].address;\n      formdata.customercity = this.state.selectedCustomer[0].city;\n      formdata.customerstate = this.state.selectedCustomer[0].state;\n      formdata.customercountry = this.state.selectedCustomer[0].country;\n      formdata.customerzipcode = this.state.selectedCustomer[0].zipcode;\n    }\n    if (this.state.selectedPackage && this.state.selectedPackage.length) { formdata.package = this.state.selectedPackage[0]._id; }\n\n    // For Custom SIF only\n    const { requireCustomLabIDSection, customLabID } = this.state;\n    if (requireCustomLabIDSection) {\n      formdata.labid = customLabID\n      formdata.requireCustomLabIDSection = requireCustomLabIDSection\n      formdata.datein = this.state.createdDate\n    }\n\n    sampleService.createSIF(formdata, (result) => {\n      if (result) {\n        this.setState({ triggerMessage: (<h1>{`Save Lab ID for reference: ` + (result.labid || \" \")}</h1>), });\n        this.getSIFList();\n      }\n    });\n  };\n\n  deleteSIF = (id) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete\",\n      buttons: [{ label: \"Delete\", onClick: () => { sampleService.deleteSIF(id, (result) => { if (result) { this.getSIFList(); } }); }, },\n      { label: \"Cancel\", onClick: () => console.log(\"cancel delete\"), },\n      ],\n    });\n  };\n\n  getSIFbyID = (labid) => {\n    const index = this.state.sifList.findIndex(x => x.labid === labid)\n    this._setToggleButtonAvailability(index)\n    this._handleReset();\n    sampleService.getSIFById(labid, (result, i) => {\n      this.state.dataValue = [\"Select One\"];\n      if (result) {\n\n        let tempFuel = [];\n        this.state.fuelList.map((fuel) => {\n          if (fuel._id === result.fuel) {\n            return tempFuel.push(fuel);\n          }\n          return false;\n        });\n        var applicableTestID = [];\n        var applicableTest = [];\n        if (tempFuel.length) {\n          tempFuel.map((fuel) => {\n            if (fuel.test.length) {\n              fuel.test.map((test) => {\n                if (applicableTestID.indexOf(test._id) === -1) {\n                  return applicableTestID.push(test._id);\n                }\n                return false;\n              });\n            }\n            return false;\n          });\n        }\n        applicableTestID.map((testid) => {\n          this.state.labTestList.map((labtest) => {\n            if (labtest._id === testid) {\n              return applicableTest.push(labtest);\n            }\n            return false;\n          });\n          return true;\n        });\n        const selectedTest = [];\n        if (result.fueltest && result.fueltest.length) {\n          result.fueltest.map((test) => {\n            this.state.labTestList.map((labtest) => {\n              if (test.testid === labtest.id) {\n                var temp = labtest;\n                temp._id = test._id\n                temp.result = test.result;\n                temp.comment = test.comment;\n                selectedTest.push(temp);\n                return true;\n              }\n              return false;\n            });\n            return false;\n          });\n        }\n\n        const selectedComponetntMake = [];\n        if (\n          result.componentmake && result.componentmake !== \"undefined\" && result.componentmake !== null && result.componentmake !== \"\"\n        ) {\n          this.state.componentMakeList.map((make) => {\n            if (\n              make.id ===\n              result.componentmake\n                .split(\" \")\n                .join(\"\")\n                .toLowerCase()\n            ) {\n              return selectedComponetntMake.push(make);\n            }\n            return false;\n          });\n        }\n        var selectedReportComp = [];\n        this.state.reportCompList.map((company) => {\n          if (result.reportcomp === company.id) {\n            return selectedReportComp.push(company);\n          }\n          return false;\n        });\n\n        var selectedPackage = [];\n        if (\n          result.package !== \"undefined\" && result.package !== null && result.package !== \"\"\n        ) {\n          this.state.packageList.map((item) => {\n            if (item._id === result.package) {\n              selectedPackage = [item];\n            }\n          });\n        }\n        this.setState({\n          selectedSif: result,\n          isEditSIF: true,\n          locationid: this.state.locationid,\n          location: this.state.customerName,\n          customerName: this.state.customerName,\n          SelectedComponentMake: selectedComponetntMake,\n          selectedFuelTypes: tempFuel,\n          applicableTest: applicableTest,\n          selectedFuelTest: selectedTest,\n          priority: result.priority,\n          company: result.company ? result.company : result.customer,\n          labid: result.labid,\n          dueDate: moment(result.due).format(\"LL\"),\n          tankCapacity: result.tankcapacity,\n          tankQuantity: result.quantitytank,\n          componentMake: result.componentmake,\n          componentModel: result.componentmodel,\n          po: result.po,\n          wo: result.wo,\n          woLocation: result.wolocation,\n          woZipCode: result.wozipcode,\n          emailCollection: result.additionalemail ? result.additionalemail : [],\n          sampleid: result.sampleid,\n          sampleLoc: result.samplelocation,\n          collectionDate: result.collectiondate ? moment(result.collectiondate).format(\"YYYY-MM-DD\") : \"\",\n          // customercomment: result.comment,\n          comment: result.comment,\n          serialNumber: result.serial,\n          selectedReportComp: selectedReportComp,\n          selectedPackage: selectedPackage,\n          index\n        }, () => {\n          console.log(`getSIFbyID::: API CollectionDate: ${result.collectiondate}  State: ${this.state.collectionDate}  Formatted: ${moment(result.collectiondate).format(\"YYYY-MM-DD\")}`)\n        });\n        this.state.locationList.map((e, i) => {\n          if (this.state.selectedSif.customer === e.name) {\n            this.setState({ defaultLocation: this.state.selectedSif.customer })\n          }\n          return false;\n        })\n        const sifIndex = this.state.labid;\n        const sifItems = this.state.Available_SifList.map((e, i) => { e.labid === sifIndex ? this.setState({ index: i }) : console.log(\"\") }\n        )\n        this.state.labTestList.map((labtest) => {\n          {\n            labtest.dataAvailable === true && labtest.name === \"Microbial Growth\" ?\n              this.setState({ dataValue: this.state.dataValue.concat(labtest.dataValue || []) })\n              : console.log(\"\")\n          }\n\n        })\n        var selectedTestResult = [];\n        this.state.dataValue.map((name) => {\n          if (result.dataValue === name) {\n            return selectedTestResult.push(name);\n          }\n          return false;\n        });\n        let testRes = this.state.dataValue[0]\n        result.fueltest.map((e, i) => {\n          if (e.name === \"Microbial Growth\" && (e.result === \"Negative\" || e.result === \"Positive\")) {\n            let getresult = e.result\n            this.setState({ selectedTestResult: getresult })\n          }\n          else if (e.name === \"Microbial Growth\") {\n            this.setState({ selectedTestResult: testRes })\n          }\n          return false;\n        })\n        this.setState(() => {\n          this.state.comments.push(this.state.comment);\n          // console.log(this.state.comments)\n        });\n      }\n    });\n  };\n\n  updateSifByID = () => {\n    const labid = this.state.labid;\n    const fuelTest = [];\n    this.state.selectedFuelTest.map((test) => {\n      const result = test.result || (test.dataAvailable && test.dataValue.length == 1 && test.dataValue[0]) || \"\"\n      return fuelTest.push({ testid: test.id, name: test.name, result, comment: test.comment, _id: test._id });\n    });\n    this.setState(() => {\n      this.state.comments.push(this.state.comment);\n    });\n    const formData = {\n      locationid: this.state.locationupdatedId,\n      location: this.state.customerName,\n      customerName: this.state.customerName,\n      tankcapacity: this.state.tankCapacity,\n      quantitytank: this.state.tankQuantity,\n      componentmodel: this.state.componentModel,\n      po: this.state.po,\n      wo: this.state.wo,\n      wolocation: this.state.woLocation,\n      wozipcode: this.state.woZipCode,\n      additionalemail: this.state.emailCollection,\n      fuel: this.state.selectedFuelTypes.length ? this.state.selectedFuelTypes[0]._id : \"\",\n      fueltest: fuelTest,\n      sampleid: this.state.sampleid,\n      sampleLoc: this.state.sampleLoc,\n      // customercomment: this.state.customercomment,\n      comment: this.state.comment,\n      comments: this.state.comments,\n      serial: this.state.serialNumber,\n      reportcomp: this.state.selectedReportComp.length ? this.state.selectedReportComp[0].id : \"\",\n    }\n    if (this.state.collectionDate) {\n      formData.collectiondate = this.state.collectionDate;\n    }\n    if (this.state.SelectedComponentMake.length) {\n      formData.componentmake = this.state.SelectedComponentMake[0].name || \" \";\n    }\n    if (this.state.selectedPackage && this.state.selectedPackage.length) {\n      formData.package = this.state.selectedPackage[0]._id;\n    }\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to update\",\n      buttons: [{\n        label: \"Update\", onClick: () => {\n          sampleService.updateSIFById(labid, formData, (result) => {\n            if (result.status) {\n              this.getSIFList();\n            }\n          });\n        },\n      },\n      {\n        label: \"Cancel\",\n        onClick: () => console.log(\"cancel Update\"),\n      },\n      ],\n    });\n  };\n  changeSIFStatus = (status) => {\n    const formData = {\n      labid: [this.state.selectedSif.labid],\n      status: status,\n    };\n    sampleService.changeSIFStatus(formData, (result) => {\n      this.getSIFList();\n    });\n  };\n  changeMultipleSIFStatus = (status) => {\n    const formData = {\n      status,\n      labid: this.state.multiLabIDSelected\n    }\n    sampleService.changeSIFStatus(formData, (result) => {\n      this._resetCheck();\n      this.getSIFList();\n    });\n  }\n  _handleResultValue = (event) => {\n    var temp = this.state.selectedFuelTest;\n    var tempChange = {};\n    var selectedKey = null;\n    temp.map((test, key) => {\n      if (test.id === event.target.id) {\n        selectedKey = key;\n        tempChange = temp[key];\n        console.log(temp)\n        if (tempChange.dataValue.length == 1)\n          tempChange.dataValue = [event.target.value];\n        tempChange.result = event.target.value;\n        return true;\n      }\n      return false;\n    });\n    temp[selectedKey] = tempChange;\n    this.setState({ selectedFuelTest: temp });\n  };\n\n  _handleCustomerCommentValue = (event) => {\n    this.setState({ comment: event.target.value });\n\n  };\n\n  _handleSearchFilter = () => {\n    this.setState({ isSIFLoading: true });\n    sampleService.searchSIFListSingleParam(this.state.searchValue, (result) => {\n      if (result) {\n        this.setState({\n          sifList: result,\n          isSIFLoading: false,\n          // Pagination\n          page: 0,\n          // Filter selection reset\n          isPendingSIFView: false,\n          isCompletedSIFView: false,\n          isArchivedSIFView: false,\n          searchValue: \"\"\n        });\n      }\n    });\n  };\n\n  _handleSearchValue = (event) => {\n    this.setState({ searchValue: event.target.value })\n  }\n\n  _sendMail = () => {\n    confirmAlert({\n      title: \"Send\",\n      message: \"Are you sure you want to send this report\",\n      buttons: [\n        {\n          label: \"Send\",\n          onClick: () => {\n            sampleService.mailMultiSIF([this.state.selectedSif.labid])\n          },\n        },\n        {\n          label: \"Cancel\",\n          onClick: () => console.log(\"cancel send report\"),\n        },\n      ],\n    });\n  };\n  /*--------------------------- Handlers -----------------------------------*/\n  _handleCollectionDate = (event) => {\n    this.setState({ collectionDate: event.target.value });\n  };\n\n  getpdf = (labid, generateNew) => {\n    if (generateNew) {\n      sampleService.generateAndDownloadpdf(labid, (result) => { });\n    } else {\n      sampleService.downloadpdf(labid, (result) => { });\n    }\n  };\n\n  _resetCheck = () => {\n    var temp = [];\n    this.state.sifList\n      .slice(\n        this.state.page * this.state.rowsPerPage,\n        this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\n      )\n      .map((value, key) => {\n        document.getElementById(value.labid).checked = false;\n        return temp.push(value.labid);\n      });\n    document.getElementById(\"select-all\").checked = false;\n    this.setState({ multiLabIDSelected: [] });\n\n  }\n\n  _handleMultiSIFsend = () => {\n    if (this.state.multiLabIDSelected && this.state.multiLabIDSelected.length) {\n      sampleService.mailMultiSIF(this.state.multiLabIDSelected, () => {\n        this._resetCheck()\n      })\n    }\n  };\n  _handleMultiSelect = (event) => {\n    var temp = this.state.multiLabIDSelected;\n    if (event.target.checked) {\n      if (!temp.includes(event.target.id)) {\n        temp.push(event.target.id);\n      }\n    } else {\n      if (temp.includes(event.target.id)) {\n        temp = temp.filter((e) => e !== event.target.id);\n      }\n    }\n    document.getElementById(\"select-all\").checked = false;\n    this.setState({ multiLabIDSelected: temp });\n  };\n  _handleSelectAll = (event) => {\n    if (event.target.checked) {\n      var temp = [];\n      this.state.sifList\n        .slice(\n          this.state.page * this.state.rowsPerPage,\n          this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\n        )\n        .map((value, key) => {\n          document.getElementById(value.labid).checked = true;\n          return temp.push(value.labid);\n        });\n      this.setState({ multiLabIDSelected: temp });\n    }\n  };\n\n  _handleRequireCustomLabIDSection = () => this.setState({ requireCustomLabIDSection: !this.state.requireCustomLabIDSection })\n\n  _deleteFuelTextSelected = async fuelTest => {\n    const { id: fuelTestId } = fuelTest\n    const { selectedSif: { labid } } = this.state;\n    const { status = false } = await sampleService.disposeFuelTest(labid, fuelTestId)\n    if (status) {\n      sampleService.getSIFById(labid, (result, i) => {\n        const tempFuel = [];\n        this.state.fuelList.map((fuel) => {\n          if (fuel._id === result.fuel) {\n            return tempFuel.push(fuel);\n          }\n          return false;\n        });\n        const applicableTestID = [];\n        const applicableTest = [];\n        if (tempFuel.length) {\n          tempFuel.map((fuel) => {\n            if (fuel.test.length) {\n              fuel.test.map((test) => {\n                if (applicableTestID.indexOf(test._id) === -1) {\n                  return applicableTestID.push(test._id);\n                }\n                return false;\n              });\n            }\n            return false;\n          });\n        }\n        applicableTestID.map((testid) => {\n          this.state.labTestList.map((labtest) => {\n            if (labtest._id === testid) {\n              return applicableTest.push(labtest);\n            }\n            return false;\n          });\n          return true;\n        });\n        const selectedTest = [];\n        if (result.fueltest && result.fueltest.length) {\n          result.fueltest.map((test) => {\n            this.state.labTestList.map((labtest) => {\n              if (test.testid === labtest.id) {\n                var temp = labtest;\n                temp._id = test._id\n                temp.result = test.result;\n                temp.comment = test.comment;\n                selectedTest.push(temp);\n                return true;\n              }\n              return false;\n            });\n            return false;\n          });\n        }\n\n        this.setState({\n          selectedFuelTypes: tempFuel,\n          applicableTest: applicableTest,\n          selectedFuelTest: selectedTest,\n        })\n      })\n    }\n  }\n\n  _handleCreatedDate = (event) => {\n    this.setState({ createdDate: event.target.value });\n  };\n\n  /*----------------------------------- Render ---------------------------*/\n  _renderTestUpdate = () => {\n    const { classes } = this.props;\n    const { disabledNext, disabledPrev } = this.state;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={8}>\n          <Card>\n            <CardBody>\n              {this.state.selectedFuelTest.length\n                ? this.state.selectedFuelTest.map((test) =>\n                (\n                  <div>\n                    {test.dataAvailable == true\n                      ? test.dataValue.length > 1\n                        ? <GridItem xs={12} sm={12} md={12}>\n                          <GridItem >\n                          <FormControl className={classes.formControl}>\n                            <InputLabel className={classes.InputLabelGrey} id=\"fuel-type-selection\" >{\"Result for \" + test.name}</InputLabel>\n                            <Select single required labelId=\"package-selection\" id=\"package-selection\"\n                              value={this.state.selectedTestResult ? this.state.selectedTestResult : []}\n                              onChange={this._handleTestResultSelection}\n                              input={<Input id=\"select-multiple-chip\" />}\n                              renderValue={(selected) => (<div className={classes.chips}>\n                                <Chip label={selected} className={classes.chip} />\n\n                              </div>\n                              )}\n                              MenuProps={MenuProps}\n                            >\n                              {this.state.dataValue.map((name) => (<MenuItem value={name}> {name} </MenuItem>))}\n                            </Select>\n                          </FormControl>\n                          </GridItem>\n                          <GridItem >\n                            <DeleteForeverIcon onClick={() => this._deleteFuelTextSelected(test)} style={{ color: red[500] }} />\n                          </GridItem>\n                        </GridItem>\n                        : <GridItem xs={10} sm={10} md={10}>\n                          <GridItem >\n                            <CustomInput\n                              labelText={\"Result for \" + test.name}\n                              id={test.id}\n                              onChange={this._handleResultValue}\n                              inputProps={{ type: \"text\", value: test.dataValue[0] }}\n                              formControlProps={{\n                                fullWidth: true,\n                              }}\n                            />\n                        </GridItem>\n                          <GridItem >\n                            <DeleteForeverIcon onClick={() => this._deleteFuelTextSelected(test)} style={{ color: red[500] }} />\n                            {/* </> */}\n                          </GridItem>\n                        </GridItem>\n                      // dataAvailable === false\n                      : <GridItem xs={12} sm={12} md={12}>\n                        <>\n                          <GridItem >\n                        <CustomInput\n                          labelText={\"Result for \" + test.name}\n                          id={test.id}\n                          onChange={this._handleResultValue}\n                          inputProps={{ type: \"text\", value: test.result }}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                            />\n                          </GridItem>\n                          <GridItem >\n                            <DeleteForeverIcon onClick={() => this._deleteFuelTextSelected(test)} style={{ color: red[500] }} />\n                          </GridItem>\n                        </>\n                      </GridItem>}\n\n                  </div>\n                ))\n                : null}\n            </CardBody>\n            <CardFooter>\n              {this.state.isEditSIF ? (\n                <Button onClick={this.updateSifByID} color=\"success\">\n                  Update\n                </Button>\n              ) : null}\n              {this.state.isEditSIF || this.state.isCreateSIF ? (\n                <Button onClick={this._handleReset} color=\"success\">\n                  Reset\n                </Button>\n              ) : null}\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <CardBody>\n              {this.state.isEditSIF ? (\n                <Button color=\"info\"> {this.state.labid} </Button>\n              ) : null}\n              {this.state.isEditSIF ? (\n                <Button\n                  onClick={() => this.getpdf(this.state.selectedSif.labid, true)}\n                  color=\"info\"\n                >\n                  Download PDF\n                </Button>\n              ) : null}\n              {this.state.isEditSIF ? (\n                <Button onClick={this._sendMail} color=\"info\">\n                  Submit to client\n                </Button>\n              ) : null}\n              {this.state.isEditSIF ? (\n                <Button\n                  onClick={() => this.changeSIFStatus(\"completed\")}\n                  color=\"info\"\n                >\n                  Complete\n                </Button>\n              ) : null}\n              {this.state.isEditSIF ? (\n                <Button\n                  onClick={() => this.changeSIFStatus(\"archived\")}\n                  color=\"info\"\n                >\n                  Archive\n                </Button>\n              ) : null}\n              {this.state.isEditSIF ? (\n                <div>\n                  <Button onClick={this.toggleNext.bind(this)} disabled={disabledNext} color=\"info\"> Previous </Button>\n                  <Button onClick={this.togglePrev.bind(this)} disabled={disabledPrev} color=\"info\"> Next </Button>\n                </div>\n              ) : null}\n\n            </CardBody>\n          </Card>\n          <Card>\n            <CardBody>\n              <GridItem xs={12} sm={12} md={12}>\n                <TextField\n                  label={\"laboratory Comment\"}\n                  onChange={this._handleCustomerCommentValue}\n                  inputProps={{ type: \"text\", value: this.state.comment }}\n                  floatingLabel={true}\n                  fullWidth={true}\n                  multiline\n                  rows={2}\n                  rowsMax={4} />\n\n              </GridItem>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  _renderSIFTable = () => {\n    const { classes } = this.props;\n    const { isSIFLoading } = this.state;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                {this.state.sifStatus === \"pending\" ? \"Pending SIF\" : this.state.sifStatus === \"completed\" ? \"Completed SIF\" : this.state.sifStatus === \"archived\" ? \"Archived SIF\" : \"Available SIF\"}\n              </h4>\n            </CardHeader>\n            <CardBody>\n              {isSIFLoading ? null : <GridItem xs={12} sm={12} md={4} style={{ flexDirection: 'row' }}>\n                <CustomInput\n                  labelText={\"Search\"}\n                  id={\"search\"}\n                  onChange={this._handleSearchValue}\n                  inputProps={{ type: \"text\" }}\n                  formControlProps={{\n                    fullWidth: false,\n                  }}\n                />\n                <Button onClick={this._handleSearchFilter} color=\"info\" style={{ marginLeft: 10, bottom: 10 }}>\n                  Search\n                </Button>\n                {this.state.multiLabIDSelected.length ? (\n                  <>\n                    <Button onClick={this._handleMultiSIFsend} color=\"info\"> Submit to client </Button>\n                    <Button onClick={() => this.changeMultipleSIFStatus('archived')} color=\"info\"> Archive </Button>\n                    <Button onClick={() => this.changeMultipleSIFStatus('completed')} color=\"info\"> Complete </Button>\n                  </>\n                ) : null}\n              </GridItem>\n              }\n              {isSIFLoading ? (\n                <GridItem xs={12} sm={12} md={4}>\n                  <Loader\n                    type=\"ThreeDots\"\n                    color=\"#a5d1e6\"\n                    height={50}\n                    width={50}\n                  />\n                </GridItem>\n              ) : (\n                <div className={classes.tableResponsive}>\n                  <Table className={classes.table}>\n                    <TableHead className={classes.info}>\n                      <TableRow className={classes.tableHeadRow}>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                          <input id=\"select-all\" name=\"select-all\" type=\"checkbox\" onChange={this._handleSelectAll} />\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"customer\"}>\n                          PDF\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"customer\"}>\n                          Customer\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"company\"} >\n                          Company\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"labid\"} >\n                          Lab ID\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"sample-id\"} >\n                          Sample ID\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"email\"} >\n                          Email\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"}                       >\n                          Status\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"option\"} >\n                          Options\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.sifList.length ? (\n                        this.state.sifList\n                          .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                          .map((value, key) => (\n                            <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                              <TableCell className={classes.tableCell} key={\"check\" + key} >\n                                <input id={value.labid} type=\"checkbox\" onChange={this._handleMultiSelect} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"customername\" + key} >\n                                <PictureAsPdfIcon onClick={() => this.getpdf(value.labid, false)} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"customername\" + key} >\n                                {value.customer}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"company\" + key} >\n                                {value.company}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"labid\" + key} >\n                                {value.labid}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"sampleid\" + key} >\n                                {value.sampleid}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"additionamemail\" + key} >\n                                {value.additionalemail.length ? value.additionalemail.length : 0}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"status\" + key} >\n                                {value.status ? value.status.slice(0, 1).toUpperCase() + value.status.slice(1) : \"\"}\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"option\" + key} >\n                                <DeleteForeverIcon onClick={() => this.deleteSIF(value.labid)} style={{ color: red[500] }} />\n                                <BorderColorIcon onClick={() => this.getSIFbyID(value.labid)} />\n                              </TableCell>\n                            </TableRow>\n                          ))\n                      ) : (\n                        <TableRow>No records available</TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                  <TablePagination\n                    component=\"div\"\n                    count={this.state.sifList.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    onChangePage={this._handleChangePage}\n                    onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                  />\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  _renderSIFForm = () => {\n    const { classes } = this.props;\n    const { isCreateSIF, requireCustomLabIDSection } = this.state;\n    const location_value = { name: this.state.defaultLocation || \"\" };\n    return (\n      <Card>\n        <CardHeader color=\"primary\">\n          <h4 className={classes.cardTitleWhite}>\n            {isCreateSIF\n              ? \"Create Sample Order\"\n              : `Sample Details of ${this.state.labid}`}\n          </h4>\n          {isCreateSIF ? (\n            <p className={classes.cardCategoryWhite}>Complete order form</p>\n          ) : null}\n        </CardHeader>\n        <CardBody>\n          <GridContainer>\n            {isCreateSIF ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>\n                      this._handleLocationSelection(newValue)\n                    }\n                    options={this.state.locationList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Location\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isEditSIF ? (\n              <GridItem xs={12} sm={12} md={6}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    size=\"small\"\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>\n                      this._handleLocationSelection(newValue)\n                    }\n                    options={this.state.locationList}\n                    getOptionLabel={option => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Location\"\n                        variant=\"outlined\"\n                      />\n                    )}\n                    value={location_value}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {isCreateSIF ? (\n              <GridItem xs={12} sm={12} md={6}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    className={classes.InputLabelGrey}\n                    id=\"priority-type-selection\"\n                  >\n                    Priority\n                  </InputLabel>\n                  <Select\n                    labelId=\"priority-type-selection\"\n                    id=\"priority-type-selection\"\n                    single\n                    value={\n                      this.state.selectedPriority\n                        ? this.state.selectedPriority\n                        : []\n                    }\n                    onChange={this._handlePrioritySelection}\n                    input={<Input id=\"select-priority-chip\" />}\n                    renderValue={(selected) => (\n                      <div className={classes.chips}>\n                        {selected.map((value) => (\n                          <Chip\n                            key={value.id}\n                            label={value.name}\n                            className={classes.chip}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    MenuProps={MenuProps}\n                  >\n                    {this.state.rushList.map((value) => (\n                      <MenuItem key={value.id} value={value}>\n                        {value.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isEditSIF ? (\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText=\"Priority\"\n                  id=\"priority\"\n                  disabled\n                  inputProps={{ type: \"text\", value: this.state.priority }}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n              </GridItem>\n            ) : null}\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Due\"\n                id=\"dueDate\"\n                disabled\n                inputProps={{ type: \"text\", value: this.state.dueDate }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Tank capacity\"\n                onChange={(e) =>\n                  this.setState({ tankCapacity: e.target.value })\n                }\n                id=\"tankCapacity\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.tankCapacity }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Quantity tank\"\n                onChange={(e) =>\n                  this.setState({ tankQuantity: e.target.value })\n                }\n                id=\"tankQuantity\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.tankQuantity }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel\n                  className={classes.InputLabelGrey}\n                  id=\"component-type-selection\"\n                >\n                  Component Make\n                </InputLabel>\n                <Select\n                  labelId=\"component-type-selection\"\n                  id=\"component-type-selection\"\n                  single\n                  value={\n                    this.state.SelectedComponentMake\n                      ? this.state.SelectedComponentMake\n                      : []\n                  }\n                  onChange={this._handleComponentMakeSelection}\n                  input={<Input id=\"select-chip\" />}\n                  renderValue={(selected) => (\n                    <div className={classes.chips}>\n                      {selected.map((value) => (\n                        <Chip\n                          key={value.id}\n                          label={value.name}\n                          className={classes.chip}\n                        />\n                      ))}\n                    </div>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.componentMakeList.map((value) => (\n                    <MenuItem key={value.id} value={value}>\n                      {value.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Component model\"\n                onChange={(e) =>\n                  this.setState({ componentModel: e.target.value })\n                }\n                id=\"componentModel\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.componentModel }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Purchase order\"\n                onChange={(e) => this.setState({ po: e.target.value })}\n                id=\"po\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.po }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Work order\"\n                onChange={(e) => this.setState({ wo: e.target.value })}\n                id=\"wo\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.wo }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Location\"\n                onChange={(e) => this.setState({ woLocation: e.target.value })}\n                id=\"woLocation\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.woLocation }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Zip code\"\n                onChange={(e) => this.setState({ woZipCode: e.target.value })}\n                id=\"woZipCode\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.woZipCode }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Sample ID\"\n                onChange={(e) => this.setState({ sampleid: e.target.value })}\n                id=\"sampleid\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.sampleid }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Sample taken from\"\n                onChange={(e) => this.setState({ sampleLoc: e.target.value })}\n                id=\"sample-taken-from\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.sampleLoc }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Serial number\"\n                onChange={(e) =>\n                  this.setState({ serialNumber: e.target.value })\n                }\n                id=\"serialnumber\"\n                disabled={this.state.isDisabled}\n                inputProps={{ type: \"text\", value: this.state.serialNumber }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText={\"Collection date\"}\n                id=\"collectiondate\"\n                onChange={this._handleCollectionDate}\n                disabled={this.state.isDisabled}\n                labelProps={{ shrink: true }}\n                inputProps={{ type: \"date\", value: this.state.collectionDate }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomMultiEmailInput\n                error={this.state.error}\n                id=\"email\"\n                disabled={true}\n                inputProps={{ type: \"text\", value: this.state.value }}\n                labelText=\"Email\"\n                onKeyDown={this.handleKeyDown}\n                onChange={this._handleEmailAddChange}\n                onPaste={this._handleEmailPasteChange}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n              {this.state.emailError !== null ? <span style={{ color: 'red' }}>{this.state.emailError}</span> : null}\n              {this.state.emailCollection.map((item, key) => (<div className={classes.chips} key={item}>   <Chip onClick={() => this._handleEmailRemoveChange(item)} key={key} label={item + \"  X\"} className={classes.chip} /></div>))}\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id=\"fuel-type-selection\" > Fuel type </InputLabel>\n                <Select labelId=\"fuel-type-selection\" id=\"fuel-type-multiple-selection\" single\n                  value={this.state.selectedFuelTypes}\n                  onChange={this._handleFuelSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}>  {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))} </div>)}\n                  MenuProps={MenuProps} >\n                  {this.state.fuelList.map((name) => (<MenuItem key={name.id} value={name}>  {name.name} </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem>\n            {this.state.selectedFuelTypes.length &&\n              this.state.applicableTest.length ? (\n              <GridItem xs={12} sm={12} md={6}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel className={classes.InputLabelGrey} id={\"fuel-test-selection\"} > Test selection   </InputLabel>\n                  <Select labelId={\"fuel-test-selection\"} id={\"fuel-test-selection\"} name={\"fuel-test-selection\"} multiple\n                    value={this.state.selectedFuelTest}\n                    onChange={this._handleTestSelection}\n                    input={<Input id={\"select-multiple-test\"} />}\n                    renderValue={(selected) => (\n                      <div className={classes.chips}> {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))} </div>\n                    )}\n                    MenuProps={MenuProps}  >\n                    {this.state.applicableTest.map((name) => (<MenuItem key={name.id} value={name}>  {name.name}  </MenuItem>))}\n                  </Select>\n                </FormControl>\n              </GridItem>\n            ) : null}\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id=\"fuel-type-selection\" >Package</InputLabel>\n                <Select labelId=\"package-selection\" id=\"package-selection\" single required error={this.state.packageError}\n                  value={this.state.selectedPackage ? this.state.selectedPackage : []}\n                  onChange={this._handlePackageSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}> {selected.map((value) => (\n                    <Chip key={value.id} label={value.name} className={classes.chip} />\n                  ))}\n                  </div>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.packageList.map((name) => (<MenuItem key={name.id} value={name}> {name.name} </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id=\"fuel-type-selection\" > Reporting company </InputLabel>\n                <Select labelId=\"reporting-company-selection\" id=\"reporting-company-selection\" single required\n                  value={this.state.selectedReportComp ? this.state.selectedReportComp : []}\n                  onChange={this._handleReportCompSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}> {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))} </div>)}\n                  MenuProps={MenuProps} >\n                  {this.state.reportCompList.map((name) => (<MenuItem key={name.id} value={name}> {name.name} </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </GridItem>\n            {isCreateSIF\n              ? <GridItem xs={12} sm={12} md={6}>\n                <br />\n                <FormControlLabel control={\n                  <Checkbox\n                    defaultChecked\n                    color=\"default\"\n                    checked={requireCustomLabIDSection}\n                    onChange={this._handleRequireCustomLabIDSection}\n                    inputProps={{ 'aria-label': 'checkbox with default color' }}\n                  />}\n                  label=\" Click here if you need to create sample with custom LAB ID\"\n                />\n\n                {requireCustomLabIDSection ? <CustomInput\n                  labelText=\"Custom LAB ID\"\n                  onChange={(e) => this.setState({ customLabID: e.target.value })}\n                  id=\"custom-labid\"\n                  disabled={this.state.isDisabled}\n                  inputProps={{ type: \"text\", value: this.state.customLabID }}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                /> : null}\n\n                {requireCustomLabIDSection ? <CustomInput\n                  labelText={\"Created Date\"}\n                  id=\"created-date-date-in\"\n                  onChange={this._handleCreatedDate}\n                  disabled={this.state.isDisabled}\n                  labelProps={{ shrink: true }}\n                  inputProps={{ type: \"date\", value: this.state.createdDate }}\n                  formControlProps={{\n                    fullWidth: true,\n                  }}\n                />\n                  : null}\n\n              </GridItem>\n              : null}\n          </GridContainer>\n        </CardBody>\n        <CardFooter>\n          {isCreateSIF ? (<Button onClick={this.onCreateSIF} color=\"success\"> Create SIF </Button>) : null}\n          {isCreateSIF ? (<Button onClick={this._handleReset} color=\"success\">  Reset </Button>) : null}\n        </CardFooter>\n      </Card>\n    );\n  };\n\n  _renderHeader = () => {\n    const { classes } = this.props;\n    const { isSIFLoading } = this.state;\n    const { disabledNext, disabledPrev } = this.state;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Icon>P</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Pending test</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.sifPendingCount}\n              </h3>\n            </CardHeader>\n            {isSIFLoading ? null : <CardFooter stats>\n              <div className={classes.stats}>\n                <a\n                  href=\"#filter_pending\"\n                  onClick={(e) => {\n                    this.setState(\n                      {\n                        isPendingSIFView: !this.state.isPendingSIFView, isCompletedSIFView: false, isArchivedSIFView: false, isSIFLoading: true\n                      },\n                      () => {\n                        this.getSIFList();\n                      }\n                    );\n                  }}\n                >\n                  {this.state.sifPendingCount ? this.state.isPendingSIFView ? \"Show full\" : \"View\" : \"No results\"}\n                </a>\n              </div>\n            </CardFooter>}\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Icon>C</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Completed test</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.sifCompletedCount}\n              </h3>\n            </CardHeader>\n            {isSIFLoading ? null : <CardFooter stats>\n              <a href=\"#filter_completed\" onClick={(e) => {\n                this.setState(\n                  {\n                    isPendingSIFView: false,\n                    isCompletedSIFView: !this.state.isCompletedSIFView,\n                    isArchivedSIFView: false,\n                    isSIFLoading: true,\n                  },\n                  () => {\n                    this.getSIFList();\n                  }\n                );\n              }}\n              >\n                {this.state.sifCompletedCount ? this.state.isCompletedSIFView ? \"Show full\" : \"View\" : \"No results\"} </a>\n            </CardFooter>}\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card>\n            <CardHeader color=\"danger\" stats icon>\n              <CardIcon color=\"danger\">\n                <Icon>A</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Archived test</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.sifArchivedCount}\n              </h3>\n            </CardHeader>\n            {isSIFLoading ? null : <CardFooter stats>\n              <div className={classes.stats}>\n                <a href=\"#filter_archived\" onClick={(e) => { this.setState({ isPendingSIFView: false, isCompletedSIFView: false, isArchivedSIFView: !this.state.isArchivedSIFView, isSIFLoading: true }, () => { this.getSIFList(); }); }} >\n                  {this.state.sifArchivedCount ? this.state.isArchivedSIFView ? \"Show full\" : \"View\" : \"No results\"}\n                </a>\n              </div>\n            </CardFooter>}\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a className={this.state.onShowSIFTab ? \" nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} id=\"home-tab\" data-toggle=\"tab\" href=\"#SIF\" onClick={() => { this.setState({ onShowSIFTab: true, }); this._handleReset(); }} role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" >\n                  SIF\n                </a>\n              </li>\n            </ul>\n          </Card>\n        </GridItem>\n        <GridItem xs={6} sm={6} md={6}>  <Button onClick={() => { this._handleReset(); this.setState({ isCreateSIF: !this.state.isCreateSIF }); }} color=\"info\" > {this.state.isCreateSIF ? \" Return \" : \"Create SIF\"} </Button> </GridItem>\n        {this.state.isEditSIF ? (\n          <GridItem xs={6} sm={6} md={6} container justify=\"flex-end\">\n\n            <Button onClick={this.toggleNext.bind(this)} disabled={disabledNext} > <svg className=\"MuiSvgIcon-root\" focusable=\"false\" aria-hidden=\"true\" > <path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"></path>  </svg> </Button>\n            <Button onClick={this.togglePrev.bind(this)} disabled={disabledPrev} > <svg className=\"MuiSvgIcon-root\" focusable=\"false\" aria-hidden=\"true\" > <path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"></path> </svg> </Button>\n          </GridItem>\n        ) : null}\n        <GridItem>\n          {this.state.isEditSIF ? this._renderSIFForm() : null}\n          {this.state.isPendingSIFView || this.state.isCompletedSIFView || this.state.isArchivedSIFView ? this._handleReset() : null}\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  _setToggleButtonAvailability = index => {\n    console.log(`DEBUG || INDEX ${index} || SIF LENGTH => ${(this.state.sifList.length - 1)}`)\n    let disabledPrev = false;\n    let disabledNext = false;\n    if (index <= 0) disabledPrev = true\n    if (index >= this.state.sifList.length - 1) disabledNext = true\n    this.setState({ index, disabledPrev, disabledNext })\n  }\n  togglePrev(e) {\n    let index = this.state.index - 1;\n    const sifID = this.state.Available_SifList[index].labid;\n    this.getSIFbyID(sifID);\n    this._renderSIFForm();\n  }\n  toggleNext(e) {\n    let index = this.state.index + 1;\n    const sifID = this.state.Available_SifList[index].labid;\n    this.getSIFbyID(sifID);\n    this._renderSIFForm();\n  }\n\n  _renderAlert = () => {\n    return (\n      <Popup open={true} onClose={this._handleReset} position=\"right center\">\n        <Card>{this.state.triggerMessage}</Card>\n      </Popup>\n    );\n  };\n  render() {\n    return (\n      <div>\n        {this._renderHeader()}\n        {this.state.triggerMessage ? this._renderAlert() : null}\n        {this.state.isCreateSIF ? this._renderSIFForm() : null}\n        {this.state.isEditSIF ? this._renderTestUpdate() : null}\n        {this.state.onShowSIFTab ? this._renderSIFTable() : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SampleViewPageV2);\n","import mapDataUSA from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\n\n//CONSTANTS\nexport const CONFIG_CONSTANTS = {\n    COLOR_BLUE: '#4169E1',\n    COLOR_RED: '#FF0000',\n    COLOR_GREEN: 'rgba(0, 128, 0, 1.0)',\n    COLOR_GREY: \"rgba(200, 200, 200, 0.3)\",\n}\n\n// Maps\nexport const mapOptions = {\n    chart: {\n        map: 'countries/us/us-all'\n    },\n    title: {\n        text: 'Locations Map'\n    },\n    credits: {\n        enabled: false\n    },\n    mapNavigation: {\n        enabled: true\n    },\n    tooltip: {\n        headerFormat: '',\n        pointFormat: '<b>Company: {point.company}</b><br><b>Location: {point.customer}</b><br><b>Tests: {point.sampleCount}</b><br><b>Pass: {point.passCount}</b><br><b>Fails: {point.failedCount}</b>'\n    },\n    series: [{\n        // Use the gb-all map with no data as a basemap\n        name: 'Locations',\n        mapData: mapDataUSA,\n        borderColor: '#A0A0A0',\n        nullColor: CONFIG_CONSTANTS.COLOR_GREY,\n        showInLegend: false\n    }, {\n        // Specify points using lat/lon\n        type: 'mappoint',\n        name: 'Customer Locations',\n        // marker: { symbol: 'url(/Map_marker.png)' },\n        color: CONFIG_CONSTANTS.COLOR_BLUE,\n        data: [],\n        cursor: 'pointer',\n        point: {\n            events: {\n                click: function (e) {\n                    console.log(`Warning: No click-able function || Reporting `);\n                }\n            }\n        }\n    }]\n}\n\n// Pie chart\nexport const pieOptions = {\n    chart: {\n        plotBackgroundColor: null,\n        plotBorderWidth: null,\n        plotShadow: false,\n        type: 'pie'\n    },\n    title: {\n        text: 'Sample Passed/Failed'\n    },\n    tooltip: {\n        pointFormat: '{series.name}: <b>{point.count}</b>'\n    },\n    plotOptions: {\n        pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.count}'\n            }\n        }\n    },\n    series: [{\n        name: 'Pass/Fail',\n        colorByPoint: true,\n        data: [{\n            name: 'Passed',\n            y: 10,\n            sliced: true,\n            selected: true\n        }, {\n            name: 'Failed',\n            y: 10\n        }]\n    }]\n}\n\n// Sample Test Bar Graph\nexport const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n\nexport const monthlyCountOptions = {\n    chart: {\n        type: 'column'\n    },\n    title: {\n        text: ''\n    },\n    xAxis: {\n        categories: [],\n        labels: {\n            formatter: function () {\n                console.log('testResultsOptions label click')\n            }\n        },\n    },\n    yAxis: {\n        title: {\n            text: 'Count'\n        }\n    },\n    series: [{\n        name: 'Count',\n        data: []\n    }]\n};\n\n// Test Result\nexport const testResultsOptions = {\n    chart: {\n        type: 'line'\n    },\n    title: {\n        text: ''\n    },\n    xAxis: {\n        type: 'datetime',\n        categories: [],\n        labels: {\n            formatter: function () {\n                // return this.value;\n                console.log('testResultsOptions label click')\n            },\n        },\n\n    },\n    yAxis: {\n        title: {\n            text: 'Test Results'\n        }\n    },\n    series: [{\n        name: 'Cetane Index',\n        data: []\n    }],\n    plotOptions: {\n        series: {\n            events: {\n                cursor: \"pointer\",\n                click: function (e) {\n                    console.log('DEBUG');\n                    console.log(e);\n                }\n            }\n        }\n    },\n};\n\n// Sample count\nexport const sampleCountOptions = {\n    chart: {\n        type: 'column'\n    },\n    title: {\n        text: ''\n    },\n\n    yAxis: {\n        title: {\n            text: 'Count'\n        }\n    },\n    xAxis: {\n        step: 1,\n        categories: [],\n        labels: {\n            formatter: function () {\n                return this.value;\n            }\n        },\n\n    },\n    plotOptions: {\n        series: {\n            events: {\n                cursor: \"pointer\",\n                click: function (e) {\n                    console.log(e);\n                    /* console.log(\n                       TEST_KEYS_IN_SAMPLE(e.xAxis[0].value),\n                         e.yAxis[0].value\n                     ) */\n                }\n            }\n        }\n    },\n    series: [{\n        name: 'Count',\n        data: [],\n\n    }],\n\n};","export const INITIAL_STATE = {\n  workOrders: [],\n  sampleLocations: [],\n  sifList: [],\n  // ON SELECTION\n  selectedCustomer: null,\n  selectedWorkOrder: null,\n  selectedSampleLocation: null,\n  selectedWOLocation: null,\n  selectedDateOut: null,\n  selectedDateOutStart: null,\n  selectedDateOutEnd: null,\n  selectedTest: \"\",\n  selectedTestCount: 0,\n  testResults: [],\n  testPassFail: [],\n  submittedCount: 0,\n  pendingCount: null,\n  completedCount: null,\n  failedCount: 0,\n  customers: [],\n  selectedLocationId: \"\",\n  locations: [],\n  dateOuts: [],\n  chartsUpdated: false,\n  ready: false,\n  monthNames: [],\n  sampleLocationsMap: [],\n  dateOutRange: [null, null],\n  years: [],\n  selectedYear: null,\n  limit: 10,\n  skip: 0,\n  loading: true,\n  TEST_KEYS_IN_SAMPLE: null,\n}\n\nexport const SAMPLE_TEST_BAR_GRAPH_TEST_KEYS = [\n  \"Cetane Index\",\n  \"Distillation, 50%\",\n  \"Distillation, 90%\",\n  \"Copper Strip Corrosion\",\n  \"Water and Sediment\",\n  \"Water by Karl Fischer\",\n  \"Sulfur\",\n  \"Flash Point\",\n  \"API Gravity by Hydrometer\",\n  \"Acid Number\",\n  \"pH\"\n]","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Icon, Select, FormControl, InputLabel, MenuItem } from \"@material-ui/core\";\nimport moment from \"moment-timezone\";\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highchartsMap from \"highcharts/modules/map\";\nimport proj4 from \"proj4\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { userService, sampleService } from \"services/api.services\";\nimport { CustomDateRangePicker } from \"components/CustomInput/CustomInput\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport { mapOptions, pieOptions, monthNames, sampleCountOptions, monthlyCountOptions, testResultsOptions, CONFIG_CONSTANTS } from \"./HighChatSettings\";\nimport { INITIAL_STATE, SAMPLE_TEST_BAR_GRAPH_TEST_KEYS } from \"./trendingConstants\";\n\nconst useStyles = () => (styles);\nif (typeof window !== \"undefined\") {\n  window.proj4 = window.proj4 || proj4;\n}\n\nhighchartsMap(Highcharts);\n\nclass TrendingViewPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = INITIAL_STATE\n    this.testResultsChart = null;\n    this.sampleCountsChart = null;\n    this.mapChart = null;\n    this.monthlyCountsChart = null;\n    this.pieChart = null;\n    sampleCountOptions.plotOptions.series.events.click = this.selectTest;\n    testResultsOptions.plotOptions.series.events.click = this.selectSampleByTest;\n  }\n\n  componentDidMount = () => {\n    this._loadData()\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.selectedTest !== nextState.selectedTest) {\n      return false;\n    }\n    if (!this.state.chartsUpdated && nextState.chartsUpdated) {\n      return false;\n    }\n    return true;\n  }\n\n  _loadData = () => {\n    userService.getAllLocation(locationList => {\n      if (locationList && locationList.data && locationList.data.length) {\n        let locations = locationList.data || [];\n        locations = locations.sort((a, b) => {\n          if (a.name && b.name) return a.name.localeCompare(b.name);\n          else return -1;\n        });\n        this.setState({\n          locations: locations\n        });\n      }\n    })\n    this.setState({ loading: true })\n    sampleService.searchSIFList(this.state.limit, {}, result => {\n      this.processData(result);\n    });\n\n    sampleService.searchSIFListCount({}, _result => {\n      const result = _result.data || {}\n      this.setState({\n        pendingCount: result.totalPending || 0,\n        completedCount: result.totalCompleted || 0,\n        failedCount: result.failed || 0,\n        passedCount: result.passed || 0,\n        sampleLocations: result.sampleid || [],\n        workOrders: result.wolocation || [],\n\n      }, () => {\n        this.pieChart.chart.series[0].setData([{ name: \"Pass\", count: this.state.passedCount, y: this.state.passedCount }, { name: \"Fail\", count: this.state.failedCount, y: this.state.failedCount }], true)\n      })\n    });\n\n  }\n\n  resultConversion = (result, type) => {\n    // result is string\n    if (result) {\n      if (type === \"convert_to_celsius\") {\n        return ((result.trim() - 32) * (5 / 9)).toFixed(2);\n      }\n      return result;\n    }\n    return result;\n  };\n  selectTest = (e) => {\n    let selectedTest = this.state.TEST_KEYS_IN_SAMPLE[e.point.x];\n    let selectedTestCount = e.point.y;\n    let results = [];\n    // let passCount = 0;\n    // let failCount = 0;\n    this.state.sifList.forEach(sample => {\n      // let isCompleted = sample.isapproved === true || sample.status === \"completed\";\n      // if (isCompleted) {\n      let dt = new Date(sample.dateout);\n      const dtStr = dt.getFullYear() + \"-\" + (dt.getMonth() > 8 ? \"\" : \"0\") + (dt.getMonth() + 1) +\n        \"-\" + (dt.getDate() > 9 ? \"\" : \"0\") + (dt.getDate());\n      dt = new Date(dtStr);\n      sample.fueltests.forEach(ft => {\n        if (ft.name === selectedTest) {\n          let rv = ft.result;\n          if (ft.name.match(/^Distillation/)) {\n            rv = this.resultConversion(rv, 'convert_to_celsius');\n          }\n          results.push({\n            ...sample,\n            dateout: dt,\n            result: rv,\n            labid: sample.labid,\n            customer: sample.customer,\n            company: sample.company,\n          });\n          // if (ft.isfailed || sample.isfailed) failCount++;\n          // else passCount++;\n        }\n      });\n      // }\n    })\n    let sortedResults = results.sort((a, b) => {\n      if (new Date(a.dateout) < new Date(b.dateout)) return -1;\n      if (new Date(a.dateout) > new Date(b.dateout)) return 1;\n      return 0;\n    });\n\n    // let testPassFail = [{\n    //   name: \"Passed\", count: this.state.submittedCount, y: this.state.submittedCount, sliced: true,\n    //   selected: true\n    // },\n    // { name: \"Failed\", count: this.state.failedCount, y: this.state.failedCount, sliced: true }];\n\n    let sortedData = sortedResults.map(v => parseFloat(v.result));\n    // let sortedCategories = sortedResults.map(v => moment(v.dateout).format(\"YYYY-MM-DD\"));\n    let sortedCategories = sortedResults.map(v => v.labid);\n    this.setState({\n      testResults: sortedResults,\n      ready: true\n\n    }, () => {\n      this.testResultsChart.chart.series[0].name = selectedTest;\n      this.testResultsChart.chart.yAxis[0].setTitle({ text: selectedTest }, true);\n      this.testResultsChart.chart.xAxis[0].setCategories([...sortedCategories], true);\n      // this.testResultsChart.chart.series[0].setData(sortedData, true);\n      this.testResultsChart.chart.series[0].update({ name: selectedTest, data: sortedData });\n      // if (this.pieChart) {\n      //   this.pieChart.chart.series[0].name = selectedTest;\n      //   this.pieChart.chart.series[0].setData(testPassFail, true);\n      // }\n\n      this.testResultsChart.chart.setTitle({ align: \"left\", text: selectedTest + \"/ Count: \" + selectedTestCount }, {}, true);\n\n      this.setState({\n        selectedTest: selectedTest,\n        selectedTestCount: selectedTestCount,\n        ready: false\n      });\n    });\n  }\n  selectSampleByTest = e => {\n    if (e.point.category)\n      this.getpdf(e.point.category)\n\n  }\n\n  processData = (result) => {\n    const samples = result.sif || []\n\n    if (!samples || samples.length < 0) return false\n    let counts = {};\n    let monthlyCounts = {};\n    let failed = false;\n\n    let workOrders = {}, sampleLocations = {}, dateOuts = {};\n    let workOrdersArray = [], sampleLocationsArray = [], dateOutsArray = [];\n    let sampleLocationMap = {};\n    let testKeys = {};\n    let yearKeys = {};\n    let years = [];\n    let selectedYear = null;\n\n    samples.forEach(sample => {\n\n      // Year drop down\n      const dropNewDt = new Date(sample.dateout);\n      const dropNewYear = dropNewDt.getFullYear();\n      if (!selectedYear || dropNewYear < selectedYear) selectedYear = dropNewYear;\n      yearKeys[dropNewYear] = dropNewYear;\n\n      // Maps\n      failed = sample.isfailed;\n      if (sample.locationid && (sample.geolat || sample.geolon)) {\n        if (sampleLocationMap[sample.locationid] === undefined) {\n          sampleLocationMap[sample.locationid] = {\n            z: 5, company: sample.company, customer: sample.customer,\n            sampleCount: 0, lat: parseFloat(sample.geolat),\n            lon: parseFloat(sample.geolon), failedCount: 0, passCount: 0,\n          };\n        }\n        sampleLocationMap[sample.locationid].sampleCount += 1;\n\n        if (sample.isfailed) sampleLocationMap[sample.locationid].failedCount += 1;\n\n        if (!sample.isfailed) sampleLocationMap[sample.locationid].passCount += 1;\n\n      }\n\n      // Drop down\n      let dt = new Date(sample.dateout);\n      let month = dt.getMonth();\n      let year = dt.getFullYear();\n      if ((sample.wolocation && sample.wolocation !== \"\")) {\n        workOrders[sample.wolocation] = {\n          location: sample.wolocation,\n        };\n      }\n\n      const sampleKey = sample.labid;\n      if ((sample.sampleid && sample.sampleid !== \"\" && sample.sampleid !== undefined)) {\n        sampleLocations[sampleKey] = {\n          location: sample.sampleid\n        };\n      }\n      sample.fueltests.forEach(ft => {\n        testKeys[ft.name] = ft.name;\n        if (ft.isfailed === true) failed = true;\n        if (counts[ft.name] === undefined) {\n          counts[ft.name] = 1;\n        } else {\n          counts[ft.name] += 1;\n        }\n      });\n\n      if (!selectedYear || year === selectedYear) {\n        if (monthlyCounts[month] === undefined) {\n          monthlyCounts[month] = 1;\n        } else {\n          monthlyCounts[month] += 1;\n        }\n      }\n\n      if (sample.dateout) {\n        const dateout = moment(new Date(sample.dateout)).format(\"YYYY-MM-DD\");\n        dateOuts[dateout] = {\n          dateStr: dateout,\n          fullDateStr: sample.dateout\n        }\n      }\n    });\n\n    let sampleLocationMapArray = [];\n    Object.keys(sampleLocationMap).forEach(key => {\n      sampleLocationMapArray.push({ ...sampleLocationMap[key] });\n    })\n\n    // Test graph\n    let countsArray = [];\n\n    const TEST_KEYS_IN_SAMPLE = SAMPLE_TEST_BAR_GRAPH_TEST_KEYS\n\n    SAMPLE_TEST_BAR_GRAPH_TEST_KEYS.forEach(key => {\n      countsArray.push([key, counts[key] || 0])\n    });\n    let monthlyCountsArray = []\n    monthNames.forEach((key, idx) => {\n      monthlyCountsArray.push([key, monthlyCounts[idx] || 0])\n    })\n\n    Object.keys(workOrders).forEach(key => {\n      workOrdersArray.push(workOrders[key]);\n    });\n    workOrdersArray = workOrdersArray.sort((a, b) => a.location.localeCompare(b.location));\n    // console.log(`sampleLocationssampleLocations`,sampleLocations)\n    Object.keys(sampleLocations).forEach(key => {\n      sampleLocationsArray.push(sampleLocations[key]);\n    });\n    sampleLocationsArray = sampleLocationsArray.sort((a, b) => a.location.localeCompare(b.location));\n\n    Object.keys(dateOuts).forEach(key => {\n      dateOutsArray.push(dateOuts[key]);\n    });\n    dateOutsArray = dateOutsArray.sort((a, b) => a.dateStr.localeCompare(b.dateStr));\n\n    Object.keys(yearKeys).forEach(key => {\n      years.push(yearKeys[key]);\n    });\n    years = years.sort();\n    this.setState({\n      sifList: result.sif || [],\n      sampleCounts: countsArray,\n      monthlyCounts: monthlyCountsArray,\n      // submittedCount: submittedCount,\n      // pendingCount: pendingCount,\n      // completedCount: completedCount,\n      // failedCount: failedCount,\n      // workOrders: (this.state.selectedLocation && !this.state.selectedWOLocation) ? workOrdersArray : this.state.workOrders,\n      // sampleLocations: sampleLocationsArray,\n      sampleLocationsMap: sampleLocationMapArray,\n      dateOuts: dateOutsArray,\n      selectedTest: \"\",\n      TEST_KEYS_IN_SAMPLE: SAMPLE_TEST_BAR_GRAPH_TEST_KEYS,\n      ready: false,\n      monthNames: monthNames,\n      testResults: [],\n      years: years,\n      selectedYear: selectedYear,\n      loading: false,\n    }, () => {\n      this.setState({ chartsUpdated: true }, () => {\n        this.testResultsChart.chart.series[0].setData([], true);\n        this.testResultsChart.chart.setTitle({ align: \"left\", text: \"\" }, {}, true);\n        // this.pieChart.chart.series[0].setData([{ name: \"Pass\", count: (this.state.submittedCount - this.state.failedCount), y: (this.state.submittedCount - this.state.failedCount) }, { name: \"Fail\", count: this.state.failedCount, y: this.state.failedCount }], true);\n        this.sampleCountsChart.chart.xAxis[0].setCategories([...TEST_KEYS_IN_SAMPLE], true);\n        this.sampleCountsChart.chart.series[0].setData(countsArray, true);\n        this.mapChart.chart.series[1].setData(sampleLocationMapArray, true);\n        if (this.monthlyCountsChart) {\n          this.monthlyCountsChart.chart.xAxis[0].setCategories([...monthNames], true);\n          this.monthlyCountsChart.chart.series[0].setData(monthlyCountsArray, true);\n        }\n\n        // countries.forEach(c => {\n        this.mapChart.chart.series[1].data.forEach((el, index) => {\n          if (el.failedCount)\n            el.color = CONFIG_CONSTANTS.COLOR_RED\n          // el.options.color = CONFIG_CONSTANTS.COLOR_RED\n          return el\n        });\n        // });\n      });\n    });\n  }\n\n\n  _reloadData = () => {\n    let startDate = \"\";\n    if (this.state.dateOutRange[0]) startDate = moment(this.state.dateOutRange[0]).format(\"YYYY-MM-DD\");\n    let endDate = \"\";\n    if (this.state.dateOutRange[1]) endDate = moment(this.state.dateOutRange[1]).format(\"YYYY-MM-DD\");\n\n    var params = {\n      customerid: (this.state.selectedCustomer && this.state.selectedCustomer.id) || \"\",\n      locationid: (this.state.selectedLocation && this.state.selectedLocation.id) || \"\",\n      wolocation: this.state.selectedWOLocation || \"\",\n      sampleid: this.state.selectedSampleLocation || \"\",\n      dateoutstart: startDate || \"\",\n      dateoutend: endDate || \"\",\n      skip: this.state.skip,\n    };\n    this.setState({ loading: true })\n    sampleService.searchSIFList(this.state.limit, params, result => {\n      this.processData(result);\n    });\n\n    sampleService.searchSIFListCount(params, _result => {\n\n      const result = _result.data || {}\n      this.setState({\n        pendingCount: result.totalPending || 0,\n        completedCount: result.totalCompleted || 0,\n        failedCount: result.failed || 0,\n        passedCount: result.passed || 0,\n        sampleLocations: result.sampleid || [],\n        workOrders: result.wolocation || [],\n\n      }, () => {\n        this.pieChart.chart.series[0].setData([{ name: \"Pass\", count: this.state.passedCount, y: this.state.passedCount }, { name: \"Fail\", count: this.state.failedCount, y: this.state.failedCount }], true)\n      })\n\n    });\n\n  }\n  _handleLocationSelection = location => {\n\n    if (location) {\n      var locationName = ''\n\n      locationName = location.name.trim()\n\n      this.setState({\n        selectedLocation: location,\n        selectedLocationId: location.id,\n        locationName: locationName,\n        workOrders: [],\n        selectedWOLocation: \"\",\n        sampleLocations: [],\n        selectedSampleLocation: \"\",\n        skip: 0,\n      }, () => {\n        this._reloadData();\n      })\n    } else {\n      this.setState({\n        selectedLocation: null,\n        selectedLocationId: \"\",\n        locationName: \"\",\n        workOrders: [],\n        selectedWOLocation: \"\",\n        sampleLocations: [],\n        selectedSampleLocation: \"\",\n        skip: 0,\n      }, () => {\n        this._reloadData();\n      })\n    }\n    // this.refs[\"woLocationSearch\"].getElementsByClassName('MuiAutocomplete-clearIndicator')[0].click();\n\n  }\n  updateSearch = (field, evt, newValue) => {\n    let updateField = \"selectedCustomer\";\n    let value = newValue || \"\";\n    let newState = {\n      skip: 0\n    };\n    if (field === \"woLocation\") {\n      updateField = \"selectedWOLocation\";\n      newState[\"selectedSampleLocation\"] = \"\";\n      newState[\"sampleLocations\"] = [];\n      // this.refs[\"sampleIDSearch\"].getElementsByClassName('MuiAutocomplete-clearIndicator')[0].click();\n    }\n    if (field === \"sampleLocation\") {\n      updateField = \"selectedSampleLocation\";\n    }\n    if (field === \"dateout\") {\n      updateField = \"selectedDateOut\";\n    }\n\n    newState[updateField] = value;\n\n\n    this.setState(newState, () => {\n      this._reloadData();\n    });\n  }\n  changeYear = (event) => {\n    this.setState({\n      selectedYear: event.target.value\n    });\n\n    const samples = this.state.sifList;\n\n    let monthlyCounts = {};\n    let selectedYear = event.target.value || null;\n    samples.forEach(sample => {\n      let dt = new Date(sample.dateout);\n      let month = dt.getMonth();\n      let year = dt.getFullYear();\n      if (!selectedYear || year === selectedYear) {\n        if (monthlyCounts[month] === undefined) {\n          monthlyCounts[month] = 1;\n        } else {\n          monthlyCounts[month] += 1;\n        }\n      }\n\n    });\n    let monthlyCountsArray = []\n    monthNames.forEach((key, idx) => {\n      monthlyCountsArray.push([key, monthlyCounts[idx] || 0])\n    })\n\n    this.setState({ chartsUpdated: true }, () => {\n      if (this.monthlyCountsChart) {\n        this.monthlyCountsChart.chart.xAxis[0].setCategories([...monthNames], true);\n        this.monthlyCountsChart.chart.series[0].setData(monthlyCountsArray, true);\n      }\n    });\n  };\n  changeDateOutRange = (range) => {\n    if (range === null) {\n      range = [null, null];\n    }\n    this.setState({\n      skip: 0,\n      dateOutRange: [...range]\n    }, () => {\n      this._reloadData();\n    });\n  }\n  getpdf = labid => {\n    sampleService.downloadpdf(labid, () => {\n\n    });\n  }\n\n  _renderGraph = () => {\n    const { classes } = this.props;\n\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                Locations Map / Sample Months Table\n              </h4>\n            </CardHeader>\n            <CardBody>\n              <FormControl className={classes.formControl}\n                style={{ minWidth: 120, marginTop: -30 }}>\n                <InputLabel>\n                </InputLabel>\n              </FormControl>\n              <HighchartsReact\n                ref={(chart) => (this.mapChart = chart)}\n                allowChartUpdate={false}\n                constructorType={\"mapChart\"}\n                highcharts={Highcharts}\n                options={mapOptions}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                Samples Tested By Month\n              </h4>\n            </CardHeader>\n            <CardBody>\n              <div align=\"right\">\n                <FormControl\n                  className={classes.formControl}\n                  style={{ minWidth: 80, marginTop: -30 }}\n                >\n                  <InputLabel htmlFor=\"year-select\"></InputLabel>\n                  <Select\n                    value={this.state.selectedYear || \"\"}\n                    onChange={this.changeYear}\n                    inputProps={{\n                      name: \"year\",\n                      id: \"year-select\",\n                    }}\n                  >\n                    {this.state.years.map((value) => (\n                      <MenuItem key={\"year-\" + value} value={value}>\n                        {value}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </div>\n              <HighchartsReact\n                highcharts={Highcharts}\n                ref={(chart) => (this.monthlyCountsChart = chart)}\n                allowChartUpdate={false}\n                options={monthlyCountOptions}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Tests</h4>\n            </CardHeader>\n            <CardBody>\n              <HighchartsReact\n                highcharts={Highcharts}\n                ref={(chart) => (this.sampleCountsChart = chart)}\n                allowChartUpdate={false}\n                options={sampleCountOptions}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Expand Chart</h4>\n            </CardHeader>\n            <CardBody>\n              <HighchartsReact\n                highcharts={Highcharts}\n                ref={(chart) => (this.testResultsChart = chart)}\n                allowChartUpdate={false}\n                options={testResultsOptions}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Pass/Fail Chart</h4>\n            </CardHeader>\n            <CardBody>\n              <HighchartsReact\n                highcharts={Highcharts}\n                ref={(chart) => (this.pieChart = chart)}\n                allowChartUpdate={false}\n                options={pieOptions}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  }\n\n  _renderSearchFilters = () => {\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={3}>\n          <Autocomplete\n            id=\"locationSearch\"\n            onChange={(evt, newValue) =>\n              this._handleLocationSelection(newValue)\n            }\n            options={this.state.locations}\n            getOptionLabel={(option) => option.name}\n            style={{ backgroundColor: \"white\", width: 260, marginBottom: 20 }}\n            autoComplete\n            includeInputInList\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Location\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={3}>\n          <Autocomplete\n            id=\"woLocationSearch\"\n            ref={\"woLocationSearch\"}\n            onChange={(evt, newValue) =>\n              this.updateSearch(\"woLocation\", evt, newValue)\n            }\n            options={this.state.workOrders}\n            getOptionLabel={(option) => option || \"\"}\n            style={{ backgroundColor: \"white\", width: 260, marginBottom: 20 }}\n            autoComplete\n            includeInputInList\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Work Order Location\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </GridItem>\n\n        <GridItem xs={12} sm={12} md={3}>\n          <Autocomplete\n            id=\"sampleIDSearch\"\n            ref=\"sampleIDSearch\"\n            onChange={(evt, newValue) =>\n              this.updateSearch(\"sampleLocation\", evt, newValue)\n            }\n            options={this.state.sampleLocations}\n            getOptionLabel={(option) => option || \"\"}\n            style={{ backgroundColor: \"white\", width: 260 }}\n            autoComplete\n            includeInputInList\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sample ID\"\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={3}>\n          <CustomDateRangePicker\n            id=\"sifsearchdatepicker\"\n            // labelText=\"Date range\"\n            onChange={this.changeDateOutRange}\n            inputProps={{ value: this.state.dateOutRange }}\n            style={{ backgroundColor: \"white\", width: 260 }}\n            formControlProps={{\n              fullWidth: true,\n            }}\n          />\n        </GridItem>\n      </GridContainer>\n    )\n\n  }\n\n  _renderHeader = () => {\n    const { classes } = this.props\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Icon>C</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>SIFs Completed</p>\n              <h3 className={classes.cardTitle}>{this.state.completedCount} </h3>\n            </CardHeader>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Icon>P</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>SIFs Pending</p>\n              <h3 className={classes.cardTitle}>{this.state.pendingCount}</h3>\n            </CardHeader>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    )\n  }\n\n  _loadMore = () => {\n\n\n    this.setState({ skip: (parseInt(this.state.skip) + 10) }, () => {\n\n      const { selectedCustomer, selectedLocation, selectedWOLocation,\n        selectedSampleLocation, dateOutRange, skip } = this.state\n\n      let startDate = \"\";\n      if (dateOutRange[0]) startDate = moment(dateOutRange[0]).format(\"YYYY-MM-DD\");\n      let endDate = \"\";\n      if (dateOutRange[1]) endDate = moment(dateOutRange[1]).format(\"YYYY-MM-DD\");\n\n      let params = { skip };\n\n\n      if (this.state.selectedCustomer && this.state.selectedCustomer.id) params.customerid = (selectedCustomer && selectedCustomer.id) || \"\"\n      if (this.state.selectedLocation && this.state.selectedLocation.id) params.locationid = (selectedLocation && selectedLocation.id) || \"\"\n      if (selectedWOLocation) params.wolocation = selectedWOLocation || \"\"\n      if (selectedSampleLocation) params.sampleid = selectedSampleLocation || \"\"\n\n      if (startDate) params.dateoutstart = startDate\n      if (endDate) params.dateoutend = endDate\n      this.setState({ loading: true })\n      sampleService.searchSIFList(this.state.limit, params, _result => {\n        let result = {\n          sif: [...this.state.sifList, ..._result.sif]\n        }\n        this.processData(result);\n      });\n\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this._renderSearchFilters()}\n        {this._renderHeader()}\n        <GridItem xs={12} sm={12} md={3}>\n          {!this.state.loading\n            ? <Button onClick={this._loadMore} color=\"success\"> Load More </Button>\n            : null\n          }\n        </GridItem>\n        {this._renderGraph()}\n      </div>\n    );\n\n  }\n}\n\n\nexport default withStyles(useStyles)(TrendingViewPage);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {dataControllerService} from \"services/api.services\";\nimport config from 'config';\nconst useStyles = () => (styles)\n\nclass ReportedCompanies extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isCreate: false, isEdit: false,\n            message: \"\",\n            isDisabled: false, selectedid: '',\n            name: \" \", address: \" \", city: \" \", state: \" \", zipcode: \" \", phone1: \" \", phone2: \" \", logo: null,\n            companyList: [], isLoading: true,\n            // Pagination\n            page: 0, rowsPerPage: 10,\n        }\n    }\n\n    componentDidMount = () => {\n        this.loadCompanyList()\n    }\n\n    loadCompanyList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.reportCompanyList(companyList => {\n            if(companyList){\n                this.setState({ companyList: companyList })\n            }\n            this.setState({ isLoading: false })\n        })\n    }\n\n    _handleReset = () => {\n        this.setState({\n            isCreate: false, isEdit: false,\n            message: \" \",\n            isDisabled: false, selectedid: '',\n            name: \" \", address: \" \", city: \" \", state: \" \", zipcode: \" \", phone1: \"\", phone2: \"\", logo: '',\n        })\n    }\n\n    onCreate = () => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to create',\n            buttons: [\n                {\n                    label: 'Create',\n                    color: 'green',\n                    onClick: () => {\n                        dataControllerService.reportCompanyCreate(this.state, result => {\n                            if (result) {\n                                this._handleReset()\n                                this.loadCompanyList()\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel create')\n                }\n            ]\n        });\n    }\n\n    getCompany = id => {\n        dataControllerService.reportCompanyGetId(id, details => {\n            if (details) {\n                this.setState({\n                    isEdit: true,\n                    name: details.name,\n                    address: details.address,\n                    city: details.city,\n                    state: details.state,\n                    zipcode: details.zipcode,\n                    phone1: details.phone1,\n                    phone2: details.phone2,\n                    image: config.SERVER + details.logo,\n                    selectedid: details.id,\n                    logo: config.SERVER + details.logo,\n                })\n            }\n        })\n    }\n\n    onUpdate = () => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to create',\n            buttons: [\n                {\n                    label: 'Update',\n                    color: 'green',\n                    onClick: () => {\n                        dataControllerService.reportCompanyUpdate(this.state, () => {\n                            this.loadCompanyList()\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel create')\n                }\n            ]\n        });\n    }\n\n    onDelete = (id) => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete',\n            buttons: [\n                {\n                    label: 'Delete',\n                    color: 'green',\n                    onClick: () => {\n                        dataControllerService.reportCompanyDelete(id, () => {\n                            this.loadCompanyList()\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete')\n                }\n            ]\n        });\n\n    }\n\n    onChangeLogo = event => {\n        if (this.state.isEdit) {\n            dataControllerService.reportLogoUpload(event.target.files[0], this.state.selectedid, () => {\n\n            })\n        } else {\n            this.setState({ logo: event.target.files[0] })\n        }\n    }\n\n    _handleValidate = () => {\n\n    }\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    /*-------------------------- Render List ----------------------------*/\n\n    _renderList = () => {\n        const { classes } = this.props\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Button onClick={() => { this._handleReset(); this.setState({ isCreate: !this.state.isCreate }) }} color=\"info\">{this.state.isCreate ? \" Return \" : \"Create\"}</Button>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>Reported companies</h4>\n                        </CardHeader>\n                        <CardBody>\n                            {this.state.isLoading\n                                ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n                                : <div className={classes.tableResponsive}>\n                                    <Table className={classes.table}>\n                                        <TableHead className={classes.info}>\n                                            <TableRow className={classes.tableHeadRow}>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"name\"} > Name </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"phone\"} > Phone </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"option\"} > Options </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n\n                                            {this.state.companyList.length\n                                                ? this.state.companyList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                                    <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                                        <TableCell className={classes.tableCell} key={'name' + key}> {value.name} </TableCell>\n                                                        <TableCell className={classes.tableCell} key={'phone' + key}> {value.phone1 ? (value.phone1.toString().slice(0,3) +'-'+ value.phone1.toString().slice(3,6)+'-'+value.phone1.toString().slice(6,10)) : \" \" } </TableCell>\n                                                        <TableCell className={classes.tableCell} key={'option' + key}>\n                                                            <DeleteForeverIcon onClick={() => this.onDelete(value.id)} style={{ color: red[500] }} />\n                                                            <BorderColorIcon onClick={() => this.getCompany(value.id)} />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                                : <TableRow>No records available</TableRow>}\n                                        </TableBody>\n                                    </Table>\n                                    <TablePagination\n                                        component=\"div\"\n                                        count={this.state.companyList.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this._handleChangePage}\n                                        onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                                    />\n                                </div>}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer >\n        )\n    }\n\n    _renderForm = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Button onClick={() => { this._handleReset(); this.setState({ isCreate: !this.state.isCreate }) }} color=\"info\">{this.state.isCreate ? \" Return \" : \"Create\"}</Button>\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"primary\">\n                            <h4 className={classes.cardTitleWhite}>{this.state.isCreate ? \"Reported company\" : \"Create reported companies\"}</h4>\n                            <p className={classes.cardCategoryWhite}>{this.state.isCreate ? \" \" : \"Complete new reported companies form\"}</p>\n                        </CardHeader>\n                        <CardBody>\n                            <GridContainer>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ name: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company name\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"name\"\n                                        inputProps={{ type: 'text', value: this.state.name }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ address: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company address\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"address\"\n                                        inputProps={{ type: 'text', value: this.state.address }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ city: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company city\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"city\"\n                                        inputProps={{ type: 'text', value: this.state.city }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ state: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company state\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"state\"\n                                        inputProps={{ type: 'text', value: this.state.state }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ zipcode: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company zipcode\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"zipcode\"\n                                        inputProps={{ type: 'text', value: this.state.zipcode }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ phone1: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company phone 1\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"phone1\"\n                                        inputProps={{ type: 'text', value: this.state.phone1 }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => {\n                                            this.setState({ phone2: e.target.value })\n                                            this._handleValidate()\n                                        }}\n                                        labelText=\"Company phone 2\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"phone2\"\n                                        inputProps={{ type: 'text', value: this.state.phone2 }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={this.onChangeLogo}\n                                        labelText=\"Logo\"\n                                        disabled={this.state.isDisabled}\n                                        id=\"file\"\n                                        name=\"file\"\n                                        inputProps={{ type: 'file' }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                {(this.state.isEdit && this.state.logo) ?\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <img\n                                            style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n                                            src={this.state.logo}\n                                            alt={this.state.name}\n                                        />\n                                    </GridItem>\n                                    : null}\n                            </GridContainer>\n                        </CardBody>\n                        <CardFooter>\n                            <h5 style={{ color: 'red' }}>{this.state.message}</h5>\n                            {this.state.isCreate ? <Button disabled={this.state.isDisabled} onClick={() => this.onCreate()} color=\"success\">Create</Button> : null}\n                            {this.state.isEdit ? <Button disabled={this.state.isDisabled} onClick={() => this._handleReset()} color=\"success\">Reset</Button> : null}\n                            {this.state.isEdit ? <Button disabled={this.state.isDisabled} onClick={() => this.onUpdate()} color=\"warning\">Update</Button> : null}\n                            {this.state.isEdit ? <Button disabled={this.state.isDisabled} onClick={() => { this.onDelete(this.state.selectedid); this._handleReset() }} color=\"danger\">Delete</Button> : null}\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        )\n    }\n\n    render() {\n        return (\n            (this.state.isCreate || this.state.isEdit) ? this._renderForm() : this._renderList()\n        )\n    }\n}\n\nexport default withStyles(useStyles)(ReportedCompanies);","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { FormControl, InputLabel, Select, Input, Chip, MenuItem } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {dataControllerService} from \"services/api.services\";\n\nconst useStyles = () => (styles)\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass PackageView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // Get list on load\n            LabTestList: [], isLoading: true,\n            // Pagination\n            page: 0, rowsPerPage: 10,\n            // Lab test\n            selectedLabTest: {},\n            // Package\n            selectedLabTestList: [], packageName: \"\", packageError: \"\", isViewPackageDetails: false, selectedPackage: {}, packageList: [], isCreatePackage: false,\n        }\n    }\n\n    componentDidMount = () => {\n        this._onLoadData()\n    }\n\n    _onLoadData = () => {\n        this.getLabTestList();\n        this.getAllPackages()\n    }\n\n    _handleReset = () => {\n        this.setState({\n            // Lab test\n            selectedLabTest: {},\n            // Lab test package\n            selectedLabTestList: [], packageName: \"\", packageError: \"\", isViewPackageDetails: false, selectedPackage: {}, isCreatePackage: false,\n        })\n    }\n\n    /*------------------------ Laboratory test operations -------------------------------*/\n\n    getLabTestList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.getLabTestList(result => {\n            if (result) {\n                this.setState({ LabTestList: result })\n            }\n            this.setState({ isLoading: false })\n        })\n    }\n\n    /*---------------------------- Package operations ---------------------------------*/\n\n    _handleLabTestSelection = event => {\n        this.setState({ selectedLabTestList: event.target.value })\n    }\n\n    onCreatePackage = () => {\n        if (this.state.packageName && this.state.selectedLabTestList.length) {\n            var data = {\n                name: this.state.packageName,\n            }\n            var temp = [];\n            if (this.state.selectedLabTestList.length) {\n                this.state.selectedLabTestList.map(value => {\n                    return temp.push({\n                        testid: value.id,\n                        testname: value.name\n                    })\n                })\n            }\n            data.test = temp;\n\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to create this package',\n                buttons: [\n                    {\n                        label: 'Create',\n                        onClick: () => {\n                            dataControllerService.createPackage(data, result => {\n                                this._handleReset()\n                                this.getAllPackages()\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel create')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ packageError: \"Incomplete form\" })\n        }\n    }\n\n    getAllPackages = () => {\n        dataControllerService.getAllPackage(result => {\n            this.setState({\n                packageList: result\n            })\n        })\n    }\n\n    getPackageById = id => {\n        dataControllerService.getPackageById(id, result => {\n            if (result.test.length) {\n                var tempids = []\n                var temp = []\n                result.test.map(value => {\n                    return tempids.push(value.testid)\n                })\n                tempids.map(id => {\n                    this.state.LabTestList.map(value => {\n                        if (value.id === id) {\n                            return temp.push(value);\n                        }\n                        return false;\n                    })\n                    return true;\n                })\n                this.setState({\n                    isViewPackageDetails: true,\n                    selectedPackage: result,\n                    packageName: result.name,\n                    selectedLabTestList: temp\n                })\n            }\n        })\n    }\n\n    onUpdatePackage = () => {\n        if (this.state.packageName && this.state.selectedLabTestList.length) {\n            var data = {\n                id: this.state.selectedPackage.id,\n                name: this.state.packageName,\n            }\n            var temp = [];\n            if (this.state.selectedLabTestList.length) {\n                this.state.selectedLabTestList.map(value => {\n                    return temp.push({\n                        testid: value.id,\n                        testname: value.name\n                    })\n                })\n            }\n            data.test = temp;\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to update',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updatePackage(data, result => {\n                                this.getAllPackages()\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        }\n    }\n\n    onDeletePackage = id => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete',\n            buttons: [\n                {\n                    label: 'Delete',\n                    onClick: () => {\n                        dataControllerService.deletePackage(id, result => {\n                            this._handleReset()\n                            this.getAllPackages()\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete package')\n                }\n            ]\n        });\n    }\n\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    /*------------------------- Package Render -------------------------------*/\n\n    _renderPackageTab = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={12}>\n                    {<Button onClick={() => { this._handleReset(); this.setState({ isCreatePackage: !this.state.isCreatePackage }) }} color=\"info\">{this.state.isCreatePackage ? \"Return\" : \"Create\"}</Button>}\n                </GridItem>\n                {this.state.isCreatePackage || this.state.isViewPackageDetails\n                    ? <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                            <CardHeader color=\"primary\">\n                                <h4 className={classes.cardTitleWhite}>{this.state.isViewFuel ? \"Package details\" : \"Create Package\"}</h4>\n                                <p className={classes.cardCategoryWhite}>{this.state.isViewFuel ? \"\" : \"Complete new package\"}</p>\n                            </CardHeader>\n                            <CardBody>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <CustomInput\n                                        onChange={e => this.setState({ packageName: e.target.value, packageError: \"\" })}\n                                        labelText=\"Name\"\n                                        error={!this.state.packageName}\n                                        id=\"packageName\"\n                                        inputProps={{ type: \"text\", value: this.state.packageName }}\n                                        formControlProps={{\n                                            fullWidth: true,\n                                        }}\n                                    />\n                                </GridItem>\n                                <GridItem xs={12} sm={12} md={6}>\n                                    <FormControl className={classes.formControl}>\n                                        <InputLabel className={classes.InputLabelGrey} id=\"fuel-selection\">Fuel test selection</InputLabel>\n                                        <Select\n                                            labelId=\"fuel-selection\"\n                                            id=\"fuel-selection\"\n                                            multiple\n                                            error={!this.state.selectedLabTestList.length}\n                                            value={this.state.selectedLabTestList ? this.state.selectedLabTestList : []}\n                                            onChange={e => {\n                                                this._handleLabTestSelection(e)\n                                                this.setState({ packageError: \"\" })\n                                            }}\n                                            input={<Input id=\"select-fuel\" />}\n                                            renderValue={(selected) => (\n                                                <div className={classes.chips}>\n                                                    {selected.map(value => (\n                                                        <Chip key={value.id} label={value.name} className={classes.chip} />\n                                                    ))}\n                                                </div>\n                                            )}\n                                            MenuProps={MenuProps}\n                                        >\n                                            {this.state.LabTestList.map(value => (\n                                                <MenuItem key={value.id} value={value} >\n                                                    {value.name}\n                                                </MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </GridItem >\n                            </CardBody>\n                            <CardFooter>\n                                <h5 style={{ color: 'red' }}>{this.state.packageError}</h5>\n                                {!this.state.isViewPackageDetails ? <Button onClick={() => this.onCreatePackage()} color=\"success\">Create</Button> : null}\n                                {this.state.isViewPackageDetails ? <Button onClick={() => this.onUpdatePackage()} color=\"warning\">Update</Button> : null}\n                                {this.state.isViewPackageDetails ? <Button onClick={() => this.onDeletePackage(this.state.selectedPackage.id)} color=\"danger\">Delete</Button> : null}\n                                {this.state.isViewPackageDetails ? <Button onClick={() => this._handleReset()} color=\"success\">Reset</Button> : null}\n                            </CardFooter>\n                        </Card>\n                    </GridItem > : null}\n\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>Packages</h4>\n                        </CardHeader>\n                        <CardBody>\n                            {!this.state.isLoading\n                                ? <div className={classes.tableResponsive}>\n                                    <Table className={classes.table}>\n                                        <TableHead className={classes.info}>\n                                            <TableRow className={classes.tableHeadRow}>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'name'} > Name </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'testcount'} > Test count </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'options'} > Options </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.packageList.length \n                                            ? this.state.packageList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                                <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                                    <TableCell className={classes.tableCell} key={'name' + key}> {value.name} </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'test' + key}> {value.test.length} </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'options' + key}>\n                                                        <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeletePackage(value.id)} />\n                                                        <BorderColorIcon onClick={() => this.getPackageById(value.id)} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ): \"No packages found\"}\n                                        </TableBody>\n                                    </Table>\n                                    <TablePagination\n                                        component=\"div\"\n                                        count={this.state.packageList.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this._handleChangePage}\n                                        onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                                    />\n                                </div>\n                                : <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        )\n    }\n\n    render() {\n        return (\n            this._renderPackageTab()\n        );\n    }\n}\n\nexport default withStyles(useStyles)(PackageView);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {dataControllerService} from \"services/api.services\";\nconst useStyles = () => (styles)\n\nclass FuelKitView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // Get list on load\n            kitList: [],\n            // Fuel kit\n            fuelKitName: \"\", selectedFuelKit: {}, isViewFuelKit: false, fuelKitNameError: false, isCreateKit: false,\n            // Pagination\n            page: 0, rowsPerPage: 10, isLoading: true,\n        }\n    }\n\n    componentDidMount = () => {\n        this._onLoadData()\n    }\n\n    _onLoadData = () => {\n        this.getFuelKitList();\n    }\n\n    _handleReset = () => {\n        this.setState({\n            // Fuel kit\n            fuelKitName: \"\", selectedFuelKit: {}, isViewFuelKit: false, fuelKitNameError: false, isCreateKit: false,\n        })\n    }\n\n    /*------------------------- Kit operations ----------------------------*/\n    addFuelKit = () => {\n        if (this.state.fuelKitName) {\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to create ' + this.state.fuelKitName + \" as a new kit\",\n                buttons: [\n                    {\n                        label: 'Create',\n                        onClick: () => {\n                            dataControllerService.createFuelKit(this.state.fuelKitName, result => {\n                                if (result) {\n                                    this._handleReset()\n                                    this.getFuelKitList()\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel create')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ fuelKitNameError: true })\n        }\n    }\n\n    getFuelKitList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.getKitList(result => {\n            if (result) {\n                this.setState({ kitList: result })\n            }\n            this.setState({ isLoading: false })\n        })\n    }\n\n    getFuelKitById = id => {\n        dataControllerService.getKitById(id, result => {\n            this.setState({\n                selectedFuelKit: result,\n                fuelKitName: result.name,\n                isViewFuelKit: true,\n            })\n\n        })\n    }\n\n    onDeleteKit = id => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete',\n            buttons: [\n                {\n                    label: 'Delete',\n                    onClick: () => {\n                        dataControllerService.deletetKit(id, result => {\n                            this._handleReset()\n                            this.getFuelKitList()\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete')\n                }\n            ]\n        });\n    }\n\n    onUpdateKit = id => {\n        if (this.state.fuelKitName) {\n            const data = {\n                name: this.state.fuelKitName,\n                id: id,\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to Update ',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updateFuelKit(data, result => {\n                                if (result) {\n                                    this.getFuelKitList()\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ fuelKitNameError: true })\n        }\n    }\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    /*------------------- Render -------------------------*/\n\n    _renderKitTab = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer >\n                <GridItem xs={12} sm={12} md={12}>\n                    {<Button onClick={() => { this._handleReset(); this.setState({ isCreateKit: !this.state.isCreateKit }) }} color=\"info\">{this.state.isCreateKit ? \"Return\" : \"Create\"}</Button>}\n                </GridItem>\n                {this.state.isCreateKit || this.state.isViewFuelKit\n                    ? <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                            <CardHeader color=\"primary\">\n                                <h4 className={classes.cardTitleWhite}>{this.state.isViewFuelKit ? \"Kit details\" : \"Create Fuels Kit\"}</h4>\n                                <p className={classes.cardCategoryWhite}>{this.state.isViewFuelKit ? \"\" : \"Complete new fuels Kit\"}</p>\n                            </CardHeader>\n                            <CardBody>\n                                <GridContainer>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => {\n                                                this.setState({ fuelKitName: e.target.value })\n                                                if (e.target.value) { this.setState({ fuelKitNameError: false }) }\n                                                else { this.setState({ fuelKitNameError: false }) }\n                                            }}\n                                            labelText=\"Name\"\n                                            id=\"fuelKitName\"\n                                            inputProps={{ type: \"text\", value: this.state.fuelKitName }}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                </GridContainer>\n                            </CardBody>\n                            <CardFooter>\n                                <h5 style={{ color: 'red' }}>{this.state.fuelKitNameError ? \"Enter a kit name\" : \"\"}</h5>\n                                {!this.state.isViewFuelKit ? <Button onClick={() => this.addFuelKit()} color=\"success\">Create</Button> : null}\n                                {this.state.isViewFuelKit ? <Button onClick={() => this.onUpdateKit(this.state.selectedFuelKit.id)} color=\"warning\">Update</Button> : null}\n                                {this.state.isViewFuelKit ? <Button onClick={() => this.onDeleteKit(this.state.selectedFuelKit.id)} color=\"danger\">Delete</Button> : null}\n                                {this.state.isViewFuelKit ? <Button onClick={() => this._handleReset()} color=\"info\">Reset</Button> : null}\n                            </CardFooter>\n                        </Card>\n                    </GridItem> : null}\n\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>Fuel Kits</h4>\n                        </CardHeader>\n                        <CardBody>\n                            {!this.state.isLoading\n                                ? <div className={classes.tableResponsive}>\n                                    <Table className={classes.table}>\n                                        <TableHead className={classes.info}>\n                                            <TableRow className={classes.tableHeadRow}>\n\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'name'}  >\n                                                    Name\n                                                    </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'options'} >\n                                                    Options\n                                                    </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.kitList.length \n                                            ? this.state.kitList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                                <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                                    <TableCell className={classes.tableCell} key={'name' + key}>\n                                                        {value.name}\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'options' + key}>\n                                                        <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeleteKit(value.id)} />\n                                                        <BorderColorIcon onClick={() => this.getFuelKitById(value.id)} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ): \"No fuel kit records found\"}\n                                        </TableBody>\n                                    </Table>\n                                    <TablePagination\n                                        component=\"div\"\n                                        count={this.state.kitList.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this._handleChangePage}\n                                        onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                                    />\n                                </div>\n                                : <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        )\n    }\n\n    render() {\n        return (\n            this._renderKitTab()\n        );\n    }\n}\n\nexport default withStyles(useStyles)(FuelKitView);","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { dataControllerService } from \"services/api.services\";\n\nconst useStyles = () => (styles)\n\nclass FuelView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // Get list on load\n            fuelList: [],\n            // Fuel\n            fuelName: \"\", selectedFuel: {}, isViewFuel: false, fuelNameError: false, isCreateFuel: false,\n            // Pagination\n            page: 0, rowsPerPage: 10, isLoading: true,\n        }\n    }\n\n    componentDidMount = () => {\n        this.getFuelList();\n    }\n\n    _handleReset = () => {\n        this.setState({\n            // Fuel\n            fuelName: \"\", selectedFuel: {}, isViewFuel: false, fuelNameError: false, isCreateFuel: false,\n        })\n    }\n\n    /*------------------------ Fuel operations -----------------------------*/\n\n    addFuel = () => {\n        if (this.state.fuelName) {\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to create ' + this.state.fuelName + \" as a new fuel\",\n                buttons: [\n                    {\n                        label: 'Create',\n                        onClick: () => {\n                            dataControllerService.createFuel(({ fuelName: this.state.fuelName }), result => {\n                                if (result) {\n                                    this._handleReset()\n                                    this.getFuelList();\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel delete')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ fuelNameError: true })\n        }\n    }\n\n    getFuelList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.getFuelList(fuelList => {\n            if (fuelList)\n                this.setState({ fuelList })\n            this.setState({ isLoading: false })\n        })\n    }\n\n    getFuelById = id => {\n        dataControllerService.fuelById(id, result => {\n            if (result) {\n                this.setState({\n                    isViewFuel: true,\n                    selectedFuel: result,\n                    fuelName: result.name,\n                })\n            }\n        })\n    }\n\n    onDeleteFuel = id => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete',\n            buttons: [\n                {\n                    label: 'Delete',\n                    onClick: () => {\n                        dataControllerService.deleteFuel(id, result => {\n                            if (result) {\n                                this._handleReset();\n                                this.getFuelList();\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete')\n                }\n            ]\n        });\n    }\n\n    onUpdateFuel = id => {\n        if (this.state.fuelName) {\n            const data = {\n                name: this.state.fuelName,\n                id: id,\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to update',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updateFuel(data, result => {\n                                if (result) {\n                                    this.getFuelList();\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ fuelNameError: true })\n        }\n    }\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    /*------------------------------ Render -----------------------------------*/\n\n    _renderFuelTab = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer >\n                <GridItem xs={12} sm={12} md={12}>\n                    {<Button onClick={() => { this._handleReset(); this.setState({ isCreateFuel: !this.state.isCreateFuel }) }} color=\"info\">{this.state.isCreateFuel ? \"Return\" : \"Create\"}</Button>}\n                </GridItem>\n                {this.state.isCreateFuel || this.state.isViewFuel\n                    ? <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                            <CardHeader color=\"primary\">\n                                <h4 className={classes.cardTitleWhite}>{this.state.isViewFuel ? \"Fuel details\" : \"Create Fuels\"}</h4>\n                                <p className={classes.cardCategoryWhite}>{this.state.isViewFuel ? \"\" : \"Complete new fuels\"}</p>\n                            </CardHeader>\n                            <CardBody>\n                                <GridContainer>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => {\n                                                this.setState({ fuelName: e.target.value })\n                                                if (e.target.value) { this.setState({ fuelNameError: false }) }\n                                                else { this.setState({ fuelNameError: false }) }\n                                            }}\n                                            labelText=\"Name\"\n                                            id=\"fuelName\"\n                                            error={this.state.fuelNameError}\n                                            inputProps={{ type: \"text\", value: this.state.fuelName }}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                </GridContainer>\n                            </CardBody>\n                            <CardFooter>\n                                <h5 style={{ color: 'red' }}>{this.state.fuelNameError ? \"Enter a fuel name\" : \"\"}</h5>\n                                {!this.state.isViewFuel ? <Button onClick={() => this.addFuel()} color=\"success\">Create</Button> : null}\n                                {this.state.isViewFuel ? <Button onClick={() => this.onUpdateFuel(this.state.selectedFuel.id)} color=\"warning\">Update</Button> : null}\n                                {this.state.isViewFuel ? <Button onClick={() => this.onDeleteFuel(this.state.selectedFuel.id)} color=\"danger\">Delete</Button> : null}\n                                {this.state.isViewFuel ? <Button onClick={() => this._handleReset()} color=\"info\">Reset</Button> : null}\n                            </CardFooter>\n                        </Card>\n                    </GridItem> : null}\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>Fuels</h4>\n                        </CardHeader>\n                        <CardBody>\n                            {!this.state.isLoading\n                                ? <div className={classes.tableResponsive}>\n                                    <Table className={classes.table}>\n                                        <TableHead className={classes.info}>\n                                            <TableRow className={classes.tableHeadRow}>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'name'}  >\n                                                    Name\n                                                </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'options'}  >\n                                                    Options\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.fuelList\n                                                ? this.state.fuelList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                                    <TableRow hover key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                                        <TableCell className={classes.tableCell} key={'name' + key}>\n                                                            {value.name}\n                                                        </TableCell>\n                                                        <TableCell className={classes.tableCell} key={'options' + key}>\n                                                            <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeleteFuel(value.id)} />\n                                                            <BorderColorIcon onClick={() => this.getFuelById(value.id)} />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                ) : \" No fuel records found\"}\n                                        </TableBody>\n                                    </Table>\n                                    <TablePagination\n                                        component=\"div\"\n                                        count={this.state.fuelList.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this._handleChangePage}\n                                        onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                                    />\n                                </div>\n                                : <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer >\n        )\n    }\n\n    render() {\n        return (\n            this._renderFuelTab()\n        );\n    }\n}\n\nexport default withStyles(useStyles)(FuelView);","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { red } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { dataControllerService } from \"services/api.services\";\nimport initialState from './initialState';\n\nconst useStyles = () => (styles)\n\nconst tableConfig = {\n  tablePopulationControlValue: [\n    { title: \"Name\", keyPair: \"name\", },\n    { title: \"Method\", keyPair: \"method\", },\n    { title: \"Result type\", keyPair: \"resulttype\" },\n    { title: \"Limits\", keyPair: \"limits\", type: 'get-length' },\n    { title: \"Fuels\", keyPair: \"fuels\", type: 'get-length' },\n    { title: \"Options\", keyPair: \"action\" },\n  ]\n}\n\nclass LaboratoryTestView extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      page: initialState.page,\n      rowsPerPage: initialState.rowsPerPage,\n    }\n  }\n\n  onDeleteLabTest = id => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete ',\n      buttons: [\n        {\n          label: 'Delete',\n          onClick: () => dataControllerService.deleteLabTest(id, result => this.props.handleReset('delete'))\n        },\n        {\n          label: 'Cancel',\n          onClick: () => console.log('cancel delete')\n        }\n      ]\n    });\n  }\n\n  /*------------------------------ Pagination -----------------------------------*/\n\n  _handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  _handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: +event.target.value });\n    this.setState({ page: 0 });\n  };\n\n\n  render() {\n    const { classes, isLoading, LabTestList = [], getLabTestById } = this.props;\n    return (\n      <GridContainer >\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Laboratory tests</h4>\n            </CardHeader>\n            <CardBody>\n              {isLoading\n                ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n                : <div className={classes.tableResponsive}>\n                  <Table className={classes.table}>\n                    <TableHead className={classes.info}>\n                      <TableRow className={classes.tableHeadRow}>\n                        {tableConfig.tablePopulationControlValue.map(({ title }, tablePopulationControlValueIndex) => (\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={`${title.toLowerCase()}-${tablePopulationControlValueIndex}`}>{title}</TableCell>\n                        ))}\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {LabTestList.length\n                        ? LabTestList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                          <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                            {tableConfig.tablePopulationControlValue.map(({ title, keyPair, type }, tablePopulationControlValueIndex) => (\n                              <TableCell className={classes.tableCell} key={`${keyPair}-${title.toLowerCase()}-${tablePopulationControlValueIndex}`}>\n                                {(keyPair === 'action')\n                                  ? <>\n                                    <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeleteLabTest(value.id)} />\n                                    <BorderColorIcon onClick={() => getLabTestById(value)} />\n                                  </>\n                                  : (type === 'get-length')\n                                    ? (value[keyPair] && value[keyPair].length) ? value[keyPair].length : 0\n                                    : value[keyPair] || \"\"\n                                }\n                              </TableCell>\n                            )\n                            )}\n                          </TableRow>\n                        ) : \"No Laboraroty test record found\"}\n                    </TableBody>\n                  </Table>\n                  <TablePagination\n                    component=\"div\"\n                    count={LabTestList.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    onChangePage={this._handleChangePage}\n                    onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                  />\n                </div>}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer >\n    );\n  }\n}\n\nexport default withStyles(useStyles)(LaboratoryTestView);","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { FormControl, InputLabel, Select, Input, Chip, MenuItem } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { dataControllerService } from \"services/api.services\";\nimport CustomMultiEmailInput from \"components/CustomInput/CustomInput\";\nimport LaboratoryTestViewConstants from './LaboratoryTestViewConstants';\nimport initialState from './initialState';\nimport DisplayTableData from './DisplayTableData';\n\nconst useStyles = () => (styles)\nconst { MenuProps, limitType } = LaboratoryTestViewConstants\n\nclass LaboratoryTestView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = initialState\n    }\n\n    componentDidMount = () => {\n        this._onLoadData()\n        document.addEventListener(\"keydown\", this._handlePredefinedValues);\n    }\n\n    _onLoadData = () => {\n        dataControllerService.getFuelList(result => {\n            if (result) {\n                this.setState({ fuelList: result })\n            }\n        })\n        this.getLabTestList();\n        this.getLabTestResultType();\n    }\n\n    _handleReset = () => {\n        this.setState({\n            // Lab test\n            labTestName: \"\", labTestMethod: \"\", labTestDLT: \"\", isViewLabTest: false, labTestNameError: false, selectedResultType: [], selectedFuelList: [], selectedLabTest: {}, isCreateLabTest: false,\n            // Lab test limit \n            selectedLabTestLimit: [], selectedLabTestLimitFuel: [], labTextLimitText: \"\", labTestLimitValue: \"\", labTestLimitAdditionError: \"\", selectedLabTestResponseLimit: [], selectedLimitIndex: \"\", isLimitEdit: false,\n            labTestLimitMinComment: \"\", labTestLimitMaxComment: \"\",\n            // Lab test package\n            selectedLabTestList: [], packageName: \"\", packageError: \"\", isViewPackageDetails: false, selectedPackage: {}, isCreatePackage: false,\n            //lab test result\n            selectedResultValue: [{ id: \"user defined\", name: \"user defined\" }], LabTestResultValue: [{ id: \"user defined\", name: \"user defined\" }, { id: \"predefined\", name: \"predefined\" }], resultValues: [], showPredefinedValues: false, resultValue: \"\"\n        })\n    }\n    /*------------------------ Laboratory test operations -------------------------------*/\n\n    getLabTestResultType = () => {\n        dataControllerService.getLabTestResultType(result => {\n            this.setState({ LabTestResultType: result })\n        })\n    }\n\n    _handleResultSelection = event => {\n        this.setState({\n            selectedResultType: [event.target.value]\n        })\n    }\n\n    _handleResultValueSelection = event => {\n\n        this.setState({\n            selectedResultValue: [event.target.value]\n        }, () => {\n            if (this.state.selectedResultValue[0].name === \"predefined\") {\n                this.setState({ showPredefinedValues: true })\n            } else {\n                this.setState({ showPredefinedValues: false }, () => {\n                    this.setState({ resultValues: [] })\n                })\n            }\n\n        })\n    }\n\n    _handlePredefinedValues = (event) => {\n        if (['Enter', 'Tab', ','].includes(event.key)) {\n            event.preventDefault();\n            const value = this.state.resultValue.trim();\n            if (value) {\n                this.setState({\n                    resultValues: [...this.state.resultValues, value],\n                    resultValue: \"\"\n                });\n            }\n        }\n    }\n\n    _handleResultValue = (event) => {\n        this.setState({\n            resultValue: event.target.value\n        });\n    }\n\n    _handleDeleteResultValue = (toBeRemoved) => {\n        this.setState({\n            resultValues: this.state.resultValues.filter(value => value !== toBeRemoved)\n        });\n    }\n\n    _handleFuelSelection = event => {\n        this.setState({\n            selectedFuelList: event.target.value\n        })\n    }\n\n    _handleLimitSelection = event => {\n        this.setState({\n            selectedLabTestLimit: [event.target.value]\n        })\n    }\n\n    _handleLimitFuelSelection = event => {\n        this.setState({\n            selectedLabTestLimitFuel: event.target.value\n        })\n    }\n\n    onCreateLabTest = () => {\n        if (this.state.labTestName) {\n            let data = {\n                name: this.state.labTestName,\n                method: this.state.labTestMethod,\n                dlt: this.state.labTestDLT,\n                resulttype: this.state.selectedResultType.length ? this.state.selectedResultType[0].id : \" \",\n                dataAvailable: this.state.selectedResultValue[0].name === \"user defined\" ? false : true,\n                dataValue: this.state.resultValues\n            }\n            if (this.state.selectedFuelList.length) {\n                var temp = [];\n                this.state.selectedFuelList.map(value => {\n                    return temp.push(value.id);\n                })\n                data.fuels = temp;\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to create ' + this.state.labTestName + \" as new laboratory test?\",\n                buttons: [\n                    {\n                        label: 'Create',\n                        onClick: () => {\n                            dataControllerService.createLabTest(data, result => {\n                                if (result.data) {\n                                    const res = result.data;\n                                    this._handleReset()\n                                    this.getLabTestList()\n                                    if (res.id) {\n                                        this.getLabTestById(res.id);\n                                    }\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel create')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ labTestNameError: true })\n        }\n\n    }\n\n    getLabTestList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.getLabTestList(result => {\n            if (result) {\n                this.setState({ LabTestList: result })\n            }\n            this.setState({ isLoading: false })\n        })\n    }\n\n    getLabTestById = id => {\n        this._handleReset();\n        dataControllerService.getLabTestById(id, result => {\n            if (result.resulttype) {\n                this.state.LabTestResultType.map(value => {\n                    if (value.id === result.resulttype) {\n                        return this.setState({ selectedResultType: [value] })\n                    }\n                    return false;\n                })\n            }\n            let selectedFuelList = [];\n            if (result.fuels && result.fuels.length) {\n                result.fuels.map(resultfuelid => {\n                    this.state.fuelList.map(fuel => {\n                        console.log('Fuel validate', fuel._id, 'against', resultfuelid)\n                        if (fuel.id === resultfuelid) {\n                            console.log('Fuel match')\n                            return selectedFuelList.push(fuel)\n                        }\n                        return false;\n                    })\n                    return false;\n                })\n            }\n            console.log(selectedFuelList, 'selectedFuelList')\n            this.setState({\n                selectedLabTest: result,\n                isViewLabTest: true,\n                labTestName: result.name,\n                labTestMethod: result.method,\n                labTestDLT: result.dlt,\n                selectedLabTestResponseLimit: result.limits,\n                selectedFuelList,\n                selectedResultValue: result.dataAvailable ? [{ id: \"predefined\", name: \"predefined\" }] : [{ id: \"user defined\", name: \"user defined\" }],\n                resultValues: result.dataValue,\n                showPredefinedValues: result.dataAvailable ? true : false\n            })\n\n\n        })\n    }\n\n    onUpdateLabTest = () => {\n        if (this.state.labTestName) {\n            let data = {\n                id: this.state.selectedLabTest.id,\n                name: this.state.labTestName,\n                method: this.state.labTestMethod,\n                dlt: this.state.labTestDLT,\n                resulttype: this.state.selectedResultType.length ? this.state.selectedResultType[0].id : \" \",\n                dataAvailable: this.state.selectedResultValue[0].name === \"user defined\" ? false : true,\n                dataValue: this.state.resultValues\n            }\n            if (this.state.selectedFuelList.length) {\n                var temp = [];\n                this.state.selectedFuelList.map(value => {\n                    return temp.push(value._id);\n                })\n                data.fuels = temp;\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to update ',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updateLabTest(data, result => {\n                                this._handleReset()\n                                this.getLabTestById(data.id)\n                                this.getLabTestList()\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ labTestNameError: true })\n        }\n    }\n\n    onCreateLimitLabTest = () => {\n        if (this.state.labTestName && this.state.labTextLimitText && this.state.labTestLimitValue && this.state.selectedLabTestLimitFuel.length && this.state.selectedLabTestLimit.length) {\n            let data = {\n                id: this.state.selectedLabTest.id\n            }\n            var limit = {};\n            var temp = [];\n            if (this.state.selectedLabTestLimitFuel.length) {\n                this.state.selectedLabTestLimitFuel.map(value => {\n                    return temp.push(value.id)\n                })\n                limit.fuels = temp;\n            }\n            limit.limittext = this.state.labTextLimitText;\n            limit.maxcomment = this.state.labTestLimitMaxComment;\n            limit.mincomment = this.state.labTestLimitMinComment;\n            if (this.state.selectedLabTestLimit.length) {\n                limit.limitype = this.state.selectedLabTestLimit[0].id\n            }\n            limit.limit = this.state.labTestLimitValue\n            temp = []\n            const responseLimits = this.state.selectedLabTest.limits\n            if (responseLimits.length) {\n                responseLimits.map(value => {\n                    return temp.push(value);\n                })\n            }\n            temp.push(limit);\n\n            data.limits = temp;\n\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to add limit ',\n                buttons: [\n                    {\n                        label: 'Add limit',\n                        onClick: () => {\n                            dataControllerService.updateLabTest(data, result => {\n                                this._handleReset()\n                                this.getLabTestById(data.id)\n                                this.getLabTestList()\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel add limit')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ labTestLimitAdditionError: \"Please fill all fields to create limit\" })\n        }\n    }\n\n    onDeleteLabTestLimit = index => {\n        let data = {\n            id: this.state.selectedLabTest.id\n        }\n        let newLimit = [];\n        this.state.selectedLabTestResponseLimit.map((value, key) => {\n            if (key !== index) {\n                return newLimit.push(value)\n            }\n            return false;\n        })\n        data.limits = newLimit\n\n        confirmAlert({\n            title: 'Delete',\n            message: 'Are you sure you want to delete ',\n            buttons: [\n                {\n                    label: 'Delete',\n                    onClick: () => {\n                        dataControllerService.updateLabTest(data, result => {\n                            this._handleReset()\n                            this.getLabTestById(data.id)\n                            this.getLabTestList()\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete')\n                }\n            ]\n        });\n    }\n\n    onUpdateLabTestLimitSelection = index => {\n        if (this.state.selectedLabTestResponseLimit.length) {\n            const selectedLimit = this.state.selectedLabTestResponseLimit[index]\n            var selectedFuel = [];\n            selectedLimit.fuels.map(fuelid => {\n                this.state.selectedFuelList.map(fuel => {\n                    if (fuel.id === fuelid) {\n                        return selectedFuel.push(fuel);\n                    }\n                    return false;\n                })\n                return true;\n            })\n            var limit = [];\n            limitType.map(value => {\n                if (value.id === selectedLimit.limitype) {\n                    return limit.push(value)\n                }\n                return false;\n            })\n            this.setState({\n                labTestLimitMinComment: selectedLimit.mincomment ? selectedLimit.mincomment : \"\",\n                labTestLimitMaxComment: selectedLimit.maxcomment ? selectedLimit.maxcomment : \"\",\n                labTextLimitText: selectedLimit.limittext ? selectedLimit.limittext : \"\",\n                labTestLimitValue: selectedLimit.limit ? selectedLimit.limit : \"\",\n                selectedLabTestLimitFuel: selectedFuel,\n                selectedLabTestLimit: limit,\n                selectedLimitIndex: index,\n                isLimitEdit: true,\n            })\n        }\n    }\n\n    onUpdateLabTestLimit = () => {\n        if (this.state.labTextLimitText && this.state.labTestLimitValue && this.state.selectedLabTestLimitFuel.length && this.state.selectedLabTestLimit.length) {\n            let data = {\n                id: this.state.selectedLabTest.id\n            }\n            var limit = {};\n            var temp = [];\n            if (this.state.selectedLabTestLimitFuel.length) {\n                this.state.selectedLabTestLimitFuel.map(value => {\n                    return temp.push(value.id)\n                })\n                limit.fuels = temp;\n            }\n            limit.limittext = this.state.labTextLimitText;\n            limit.maxcomment = this.state.labTestLimitMaxComment;\n            limit.mincomment = this.state.labTestLimitMinComment;\n            if (this.state.selectedLabTestLimit.length) {\n                limit.limitype = this.state.selectedLabTestLimit[0].id\n            }\n            limit.limit = this.state.labTestLimitValue\n            temp = []\n            const responseLimits = this.state.selectedLabTest.limits\n            if (responseLimits.length) {\n                responseLimits.map((value, key) => {\n                    if (key !== this.state.selectedLimitIndex) {\n                        return temp.push(value);\n                    }\n                    return false;\n                })\n            }\n            temp.push(limit);\n\n            data.limits = temp;\n\n            let deleteData = {\n                id: this.state.selectedLabTest.id\n            }\n            let newLimit = [];\n            this.state.selectedLabTestResponseLimit.map((value, key) => {\n                if (key !== this.state.selectedLimitIndex) {\n                    return newLimit.push(value)\n                }\n                return false;\n            })\n            deleteData.limits = newLimit\n\n            confirmAlert({\n                title: 'Update',\n                message: 'Are you sure you want to update',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updateLabTest(deleteData, result => {\n                                dataControllerService.updateLabTest(data, result => {\n                                    this._handleReset()\n                                    this.getLabTestById(data.id)\n                                    this.getLabTestList()\n                                })\n                            })\n\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ labTestLimitAdditionError: \"Please fill all fields to update limit\" })\n        }\n    }\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    _renderLabTestLimit = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel className={classes.InputLabelGrey} id=\"result-type-selection\">Fuels for limit</InputLabel>\n                        <Select\n                            labelId=\"result-type-selection\"\n                            id=\"result-type-selection\"\n                            multiple\n                            value={this.state.selectedLabTestLimitFuel ? this.state.selectedLabTestLimitFuel : []}\n                            onChange={e => {\n                                this._handleLimitFuelSelection(e)\n                                this.setState({ labTestLimitAdditionError: \"\" })\n                            }}\n                            input={<Input id=\"select-chip\" />}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                    {selected.map(value => (\n                                        <Chip key={value.id} label={value.name} className={classes.chip} />\n                                    ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                        >\n                            {this.state.selectedFuelList.map(value => (\n                                <MenuItem key={value.id} value={value} >\n                                    {value.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </GridItem >\n                <GridItem xs={12} sm={12} md={6}>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel className={classes.InputLabelGrey} id=\"result-type-selection\">Limit type</InputLabel>\n                        <Select\n                            labelId=\"result-type-selection\"\n                            id=\"result-type-selection\"\n                            single\n                            value={this.state.selectedLabTestLimit ? this.state.selectedLabTestLimit : []}\n                            onChange={e => {\n                                this._handleLimitSelection(e)\n                                this.setState({ labTestLimitAdditionError: \"\" })\n                            }}\n                            input={<Input id=\"select-chip\" />}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                    {selected.map(value => (\n                                        <Chip key={value.id} label={value.name} className={classes.chip} />\n                                    ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                        >\n                            {limitType.map(value => (\n                                <MenuItem key={value.id} value={value} >\n                                    {value.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </GridItem >\n                <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                        onChange={e => this.setState({ labTextLimitText: e.target.value, labTestLimitAdditionError: \"\" })}\n                        labelText=\"Limit text\"\n                        id=\"labTextLimitText\"\n                        inputProps={{ type: \"text\", value: this.state.labTextLimitText }}\n                        formControlProps={{\n                            fullWidth: true,\n                        }}\n                    />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                        onChange={e => { this.setState({ labTestLimitValue: e.target.value, labTestLimitAdditionError: \"\" }) }}\n                        labelText=\"Limit\"\n                        id=\"labTestLimitValue\"\n                        inputProps={{ type: \"text\", value: this.state.labTestLimitValue }}\n                        formControlProps={{\n                            fullWidth: true,\n                        }}\n                    />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                        onChange={e => this.setState({ labTestLimitMinComment: e.target.value })}\n                        labelText=\"Min Recommendation\"\n                        id=\"labTestLimitMinComment\"\n                        inputProps={{ type: \"text\", value: this.state.labTestLimitMinComment }}\n                        formControlProps={{\n                            fullWidth: true,\n                        }}\n                    />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                    <CustomInput\n                        onChange={e => this.setState({ labTestLimitMaxComment: e.target.value })}\n                        labelText=\"Max Recommendation\"\n                        id=\"labTestLimitMaxComment\"\n                        inputProps={{ type: \"text\", value: this.state.labTestLimitMaxComment }}\n                        formControlProps={{\n                            fullWidth: true,\n                        }}\n                    />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                    <h5 style={{ color: 'red' }}>{this.state.labTestLimitAdditionError}</h5>\n                    {this.state.isViewLabTest && !this.state.isLimitEdit ? <Button onClick={() => this.onCreateLimitLabTest()} color=\"success\">Add Limit</Button> : null}\n                    {this.state.isViewLabTest && this.state.isLimitEdit ? <Button onClick={() => this.onUpdateLabTestLimit()} color=\"warning\">Update</Button> : null}\n                    {this.state.isViewLabTest && this.state.isLimitEdit ? <Button onClick={() => this.setState({\n                        labTextLimitText: \"\",\n                        labTestLimitValue: \"\",\n                        selectedLabTestLimitFuel: [],\n                        selectedLabTestLimit: [],\n                        selectedLimitIndex: \"\",\n                        labTestLimitMinComment: \"\",\n                        labTestLimitMaxComment: \"\",\n                        isLimitEdit: false,\n                    })} color=\"success\">Reset</Button> : null}\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                    <div className={classes.tableResponsive}>\n                        <Table className={classes.table}>\n                            <TableHead className={classes.info}>\n                                <TableRow className={classes.tableHeadRow}>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'limittext'} > Limit text </TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'limittype'} > Limit type </TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'limit'} > Limit </TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'fueladded'} > Fuels added </TableCell>\n                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'options'} > Options </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.selectedLabTestResponseLimit.length\n                                    ? this.state.selectedLabTestResponseLimit.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                        <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                            <TableCell className={classes.tableCell} key={'limittext' + key}> {value.limittext} </TableCell>\n                                            <TableCell className={classes.tableCell} key={'limittype' + key}> {value.limitype} </TableCell>\n                                            <TableCell className={classes.tableCell} key={'limit' + key}> {value.limit} </TableCell>\n                                            <TableCell className={classes.tableCell} key={'fuels' + key}> {value.fuels.length ? value.fuels.length : 0} </TableCell>\n                                            <TableCell className={classes.tableCell} key={'options' + key}>\n                                                <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeleteLabTestLimit(key)} />\n                                                <BorderColorIcon onClick={() => this.onUpdateLabTestLimitSelection(key)} />\n                                            </TableCell>\n                                        </TableRow>\n                                    ) : \"No laboratory test record found\"}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                            component=\"div\"\n                            count={this.state.selectedLabTestResponseLimit.length}\n                            rowsPerPage={this.state.rowsPerPage}\n                            page={this.state.page}\n                            onChangePage={this._handleChangePage}\n                            onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                        />\n                    </div>\n                </GridItem>\n            </GridContainer>\n        )\n    }\n\n    handleTableResetData = (type) => {\n        if (type === 'delete') {\n            this.getLabTestList();\n        }\n    }\n\n    _renderLabTestTab = () => {\n        const { classes } = this.props;\n        return (\n            <>\n                <GridContainer >\n                    <GridItem xs={12} sm={12} md={12}>\n                        {<Button onClick={() => { this._handleReset(); this.setState({ isCreateLabTest: !this.state.isCreateLabTest }) }} color=\"info\">{this.state.isCreateLabTest ? \"Return\" : \"Create\"}</Button>}\n                    </GridItem>\n                    {this.state.isCreateLabTest || this.state.isViewLabTest\n                        ? <GridItem xs={12} sm={12} md={12}>\n                            <Card>\n                                <CardHeader color=\"primary\">\n                                    <h4 className={classes.cardTitleWhite}>{this.state.isViewLabTest ? \"Laboratory test details\" : \"Create Laboratory Test\"}</h4>\n                                    <p className={classes.cardCategoryWhite}>{this.state.isViewLabTest ? \"\" : \"Complete new laboratory test form\"}</p>\n                                </CardHeader>\n                                <CardBody>\n                                    <GridContainer>\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <CustomInput\n                                                onChange={e => {\n                                                    this.setState({ labTestName: e.target.value })\n                                                    if (e.target.value) { this.setState({ labTestNameError: false }) }\n                                                    else { this.setState({ labTestNameError: false }) }\n                                                }}\n                                                labelText=\"Name\"\n                                                id=\"labTestName\"\n                                                error={this.state.labTestNameError}\n                                                inputProps={{ type: \"text\", value: this.state.labTestName }}\n                                                formControlProps={{\n                                                    fullWidth: true,\n                                                }}\n                                            />\n                                        </GridItem>\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <CustomInput\n                                                onChange={e => this.setState({ labTestMethod: e.target.value })}\n                                                labelText=\"Method\"\n                                                id=\"labTestMethod\"\n                                                inputProps={{ type: \"text\", value: this.state.labTestMethod }}\n                                                formControlProps={{\n                                                    fullWidth: true,\n                                                }}\n                                            />\n                                        </GridItem>\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <CustomInput\n                                                onChange={e => this.setState({ labTestDLT: e.target.value })}\n                                                labelText=\"Default Limit Test ( Set default if test will have no limits )\"\n                                                id=\"labTestDLT\"\n                                                inputProps={{ type: \"text\", value: this.state.labTestDLT }}\n                                                formControlProps={{\n                                                    fullWidth: true,\n                                                }}\n                                            />\n                                        </GridItem>\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel className={classes.InputLabelGrey} id=\"result-type-selection\">Result type</InputLabel>\n                                                <Select\n                                                    labelId=\"result-type-selection\"\n                                                    id=\"result-type-selection\"\n                                                    single\n                                                    value={this.state.selectedResultType ? this.state.selectedResultType : []}\n                                                    onChange={this._handleResultSelection}\n                                                    input={<Input id=\"select-chip\" />}\n                                                    renderValue={(selected) => (\n                                                        <div className={classes.chips}>\n                                                            {selected.map(value => (\n                                                                <Chip key={value.id} label={value.name} className={classes.chip} />\n                                                            ))}\n                                                        </div>\n                                                    )}\n                                                    MenuProps={MenuProps}\n                                                >\n                                                    {this.state.LabTestResultType.map(value => (\n                                                        <MenuItem key={value.id} value={value} >\n                                                            {value.name}\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </GridItem >\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel className={classes.InputLabelGrey} id=\"fuel-selection\">Fuel selection</InputLabel>\n                                                <Select\n                                                    labelId=\"fuel-selection\"\n                                                    id=\"fuel-selection\"\n                                                    multiple\n                                                    value={this.state.selectedFuelList ? this.state.selectedFuelList : []}\n                                                    onChange={this._handleFuelSelection}\n                                                    input={<Input id=\"select-fuel\" />}\n                                                    renderValue={(selected) => (\n                                                        <div className={classes.chips}>\n                                                            {selected.map(value => (\n                                                                <Chip key={value._id} label={value.name} className={classes.chip} />\n                                                            ))}\n                                                        </div>\n                                                    )}\n                                                    MenuProps={MenuProps}\n                                                >\n                                                    {this.state.fuelList.map(value => (\n                                                        <MenuItem key={value.id} value={value} >\n                                                            {value.name}\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </GridItem >\n                                        <GridItem xs={12} sm={12} md={6}>\n                                            <FormControl className={classes.formControl}>\n                                                <InputLabel className={classes.InputLabelGrey} id=\"result-value-selection\">Result value</InputLabel>\n                                                <Select\n                                                    labelId=\"result-value-selection\"\n                                                    id=\"result-value-selection\"\n                                                    single\n                                                    value={this.state.selectedResultValue ? this.state.selectedResultValue : []}\n                                                    onChange={this._handleResultValueSelection}\n                                                    input={<Input id=\"select-chip\" />}\n                                                    renderValue={(selected) => (\n                                                        <div className={classes.chips}>\n                                                            {selected.map(value => (\n                                                                <Chip key={value.id} label={value.name} className={classes.chip} />\n                                                            ))}\n                                                        </div>\n                                                    )}\n                                                    MenuProps={MenuProps}\n                                                >\n                                                    {this.state.LabTestResultValue.map(value => (\n                                                        <MenuItem key={value.id} value={value} >\n                                                            {value.name}\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </GridItem >\n                                        {this.state.showPredefinedValues ?\n                                            <GridItem xs={12} sm={12} md={6}>\n                                                <CustomMultiEmailInput\n                                                    labelText=\"Predefined values\"\n                                                    id=\"resultValuesChip\"\n                                                    inputProps={{ type: \"text\", value: this.state.resultValue }}\n                                                    onChange={this._handleResultValue}\n                                                    tabIndex=\"0\"\n                                                    onKeyDown={this._handlePredefinedValues}\n                                                    formControlProps={{\n                                                        fullWidth: true,\n                                                    }}\n                                                />\n                                                {/* {this.state.resultValues.map((item, key) => ( <div className={classes.chips} key={item}>   <Chip onDelete={() => this._handleDeleteResultValue(item)} key={key}  label={item} className={classes.chip}  /></div> ))} */}\n                                                <div className={classes.chips}>\n                                                    {this.state.resultValues.map((email, index) => (\n                                                        <Chip label={email} className={classes.chip} onDelete={() => this._handleDeleteResultValue(email)} />\n                                                    ))}\n                                                </div>\n                                            </GridItem>\n                                            :\n                                            <GridItem style={{ display: \"none\" }}></GridItem>\n                                        }\n                                    </GridContainer>\n                                </CardBody>\n                                <CardFooter>\n                                    <GridContainer>\n                                        <GridItem xs={12} sm={12} md={12}>\n                                            <h5 style={{ color: 'red' }}>{this.state.labTestNameError ? \"Enter a Laboratory test name\" : \"\"}</h5>\n                                            {!this.state.isViewLabTest ? <Button onClick={() => this.onCreateLabTest()} color=\"success\">Create</Button> : null}\n                                            {this.state.isViewLabTest ? <Button onClick={() => this.onUpdateLabTest()} color=\"warning\">Update</Button> : null}\n                                        </GridItem>\n                                    </GridContainer>\n                                </CardFooter>\n                            </Card>\n                            <Card>\n                                <CardBody>\n                                    {this.state.isViewLabTest ? this._renderLabTestLimit() : null}\n                                </CardBody>\n                                <CardFooter>\n                                    <GridContainer>\n                                        <GridItem xs={12} sm={12} md={12}>\n                                            {this.state.isViewLabTest ? <Button onClick={() => this._handleReset()} color=\"info\">Reset</Button> : null}\n                                        </GridItem>\n                                    </GridContainer>\n                                </CardFooter>\n                            </Card>\n                        </GridItem> : null}\n                </GridContainer >\n                {!this.state.isCreateLabTest || !this.state.isViewLabTest\n                    ? <DisplayTableData\n                        isLoading={this.state.isLoading}\n                        LabTestList={this.state.LabTestList}\n                        getLabTestById={(value) => this.getLabTestById(value.id)}\n                        handleReset={type => this.handleTableResetData(type)}\n                    />\n                    : null}\n            </>\n        )\n    }\n\n    render() {\n        return (\n            this._renderLabTestTab()\n        );\n    }\n}\n\nexport default withStyles(useStyles)(LaboratoryTestView);","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { red } from \"@material-ui/core/colors\";\nimport Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {dataControllerService} from \"services/api.services\";\n\nconst useStyles = () => (styles)\n\nclass ShippingMethod extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // Get list on load\n            ShippingList: [],\n            // Fuel\n           name: \"\",cost:'',duration:'', selectedMethod: {}, isViewMethod: false, nameError: false,costError:false,durationError:false, isCreateMethod: false,\n            // Pagination\n            page: 0, rowsPerPage: 10, isLoading: true,\n        }\n    }\n\n    componentDidMount = () => {\n        this._onLoadData()\n    }\n\n    _onLoadData = () => {\n        this.getShippingMethodList();\n    }\n\n    _handleReset = () => {\n        this.setState({\n            // Fuel\n            name: \"\",cost:'',duration:'', selectedMethod: {}, isViewMethod: false, nameError: false,costError:false,durationError:false, isCreateMethod: false,\n        })\n    }\n\n    /*------------------------ Fuel operations -----------------------------*/\n\n    createShippingMethod = () => {\n        if (this.state.name) {\n            const data={\n                name: this.state.name,\n                cost:parseInt(this.state.cost),\n                duration:parseInt(this.state.duration),\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to create ' + this.state.name + \" as a new Shipping Method\",\n                buttons: [\n                    {\n                        label: 'Create',\n                        onClick: () => {\n                            dataControllerService.createShippingMethod(data, result => {\n                                if (result) {\n                                    this._handleReset()\n                                    this.getShippingMethodList();\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel delete')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ nameError: true,costError:true,durationError:true })\n        }\n    }\n\n    getShippingMethodList = () => {\n        this.setState({ isLoading: true })\n        dataControllerService.getShippingMethodList(result => {\n            if(result){\n                this.setState({ ShippingList: result.data })\n            }\n            this.setState({ isLoading: false })\n        })\n    }\n\n    getShippingMethodById = id => {\n        dataControllerService.getShippingMethodById(id, result => {\n            if (result) {\n                this.setState({\n                    isViewMethod: true,\n                    selectedMethod: result,\n                    name: result.name,\n                    cost:result.cost,\n                    duration:result.duration\n                })\n            }\n        })\n    }\n\n    onDeleteMethod = id => {\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete',\n            buttons: [\n                {\n                    label: 'Delete',\n                    onClick: () => {\n                        dataControllerService.deleteShippingMethod(id, result => {\n                            if (result) {\n                                this._handleReset();\n                                this.getShippingMethodList();\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel delete')\n                }\n            ]\n        });\n    }\n\n    updateShippingMehtodById = id => {\n        if (this.state.name) {\n            const data = {\n                name: this.state.name,\n                cost:parseInt(this.state.cost),\n                duration:parseInt(this.state.duration),\n                id:id\n            }\n            confirmAlert({\n                title: 'Confirm',\n                message: 'Are you sure you want to update',\n                buttons: [\n                    {\n                        label: 'Update',\n                        onClick: () => {\n                            dataControllerService.updateShippingMehtodById(id,data, result => {\n                                if (result) {\n                                    this.getShippingMethodList();\n                                }\n                            })\n                        }\n                    },\n                    {\n                        label: 'Cancel',\n                        onClick: () => console.log('cancel update')\n                    }\n                ]\n            });\n        } else {\n            this.setState({ nameError: true })\n        }\n    }\n\n    /*------------------------------ Pagination -----------------------------------*/\n\n    _handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    _handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: +event.target.value });\n        this.setState({ page: 0 });\n    };\n\n    /*------------------------------ Render -----------------------------------*/\n\n    _renderShippingMethodTab = () => {\n        const { classes } = this.props;\n        return (\n            <GridContainer >\n                <GridItem xs={12} sm={12} md={12}>\n                    {<Button onClick={() => { this._handleReset(); this.setState({ isCreateMethod: !this.state.isCreateMethod }) }} color=\"info\">{this.state.isCreateMethod ? \"Return\" : \"Create\"}</Button>}\n                </GridItem>\n                {this.state.isCreateMethod || this.state.isViewMethod\n                    ? <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                            <CardHeader color=\"primary\">\n                                <h4 className={classes.cardTitleWhite}>{this.state.isViewMethod ? \"Shippimg Method details\" : \"Create Shippimg Methods\"}</h4>\n                                <p className={classes.cardCategoryWhite}>{this.state.isViewMethod ? \"\" : \"Complete new shipping methods\"}</p>\n                            </CardHeader>\n                            <CardBody>\n                                <GridContainer>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => {\n                                                this.setState({ name: e.target.value })\n                                                if (e.target.value) { this.setState({ nameError: false }) }\n                                                else { this.setState({ nameError: false }) }\n                                            }}\n                                            labelText=\"Name\"\n                                            id=\"name\"\n                                            error={this.state.nameError}\n                                            inputProps={{ type: \"text\", value: this.state.name }}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => {\n                                                this.setState({ cost: e.target.value })\n                                                if (e.target.value) { this.setState({ costError: false }) }\n                                                else { this.setState({ costError: false }) }\n                                            }}\n                                            labelText=\"Cost\"\n                                            id=\"cost\"\n                                            error={this.state.costError}\n                                            inputProps={{ type: \"test\", value: this.state.cost }}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => {\n                                                this.setState({ duration: e.target.value })\n                                                if (e.target.value) { this.setState({ durationError: false }) }\n                                                else { this.setState({ durationError: false }) }\n                                            }}\n                                            labelText=\"Duration\"\n                                            id=\"duration\"\n                                            error={this.state.durationError}\n                                            inputProps={{ type: \"test\", value: this.state.duration }}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                </GridContainer>\n                            </CardBody>\n                            <CardFooter>\n                                <h5 style={{ color: 'red' }}>{this.state.nameError ? \"Enter a fuel name\" : \"\"}</h5>\n                                {!this.state.isViewMethod ? <Button onClick={() => this.createShippingMethod()} color=\"success\">Create</Button> : null}\n                                {this.state.isViewMethod ? <Button onClick={() => this.updateShippingMehtodById(this.state.selectedMethod.id)} color=\"warning\">Update</Button> : null}\n                                {this.state.isViewMethod ? <Button onClick={() => this.onDeleteMethod(this.state.selectedMethod.id)} color=\"danger\">Delete</Button> : null}\n                                {this.state.isViewMethod ? <Button onClick={() => this._handleReset()} color=\"info\">Reset</Button> : null}\n                            </CardFooter>\n                        </Card>\n                    </GridItem> : null}\n                <GridItem xs={12} sm={12} md={12}>\n                    <Card>\n                        <CardHeader color=\"info\">\n                            <h4 className={classes.cardTitleWhite}>Shipping Methods</h4>\n                        </CardHeader>\n                        <CardBody>\n                            {!this.state.isLoading\n                                ? <div className={classes.tableResponsive}>\n                                    <Table className={classes.table}>\n                                        <TableHead className={classes.info}>\n                                            <TableRow className={classes.tableHeadRow}>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'name'}  >\n                                                    Name\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'cost'}  >\n                                                    Cost\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'duration'}  >\n                                                   Duration\n                                                    </TableCell>\n                                                <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={'options'}  >\n                                                    Options\n                                                    </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.ShippingList\n                                            ? this.state.ShippingList.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((value, key) =>\n                                                <TableRow hover key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                                                    <TableCell className={classes.tableCell} key={'name' + key}>\n                                                        {value.name}\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'cost' + key}>\n                                                        {value.cost}\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'duration' + key}>\n                                                        {value.duration}\n                                                    </TableCell>\n                                                    <TableCell className={classes.tableCell} key={'options' + key}>\n                                                        <DeleteForeverIcon style={{ color: red[500] }} onClick={() => this.onDeleteMethod(value.id)} />\n                                                        <BorderColorIcon onClick={() => this.getShippingMethodById(value.id)} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ): \" No fuel records found\"}\n                                        </TableBody>\n                                    </Table>\n                                    <TablePagination\n                                        component=\"div\"\n                                        count={this.state.ShippingList.length}\n                                        rowsPerPage={this.state.rowsPerPage}\n                                        page={this.state.page}\n                                        onChangePage={this._handleChangePage}\n                                        onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                                    />\n                                </div>\n                                : <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />}\n                        </CardBody>\n                    </Card>\n                </GridItem>\n            </GridContainer >\n        )\n    }\n\n    render() {\n        return (\n            this._renderShippingMethodTab()\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ShippingMethod);","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\n\nimport ReportedCompanies from './ReportedCompaniesView';\nimport Package from './PackageView';\nimport FuelKit from './FuelKitView';\nimport Fuel from './FuelView';\nimport LaboratoryTest from './LaboratoryTestView/index';\nimport ShippingMethod from './ShippingMethodView';\nconst useStyles = () => (styles)\n\nclass ControllerViewPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // tab view states\n            onShowing: '',\n            renderstate: null\n        }\n    }\n\n    UNSAFE_componentWillMount = () => {\n        return this.onChangeTab()\n    }\n\n    onChangeTab = event => {\n        var index = null\n\n        if (event) {\n            index = event.target.id\n        }\n\n        switch (index) {\n            case 'fuel': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <Fuel />\n                });\n                break;\n            }\n            case 'kit': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <FuelKit />\n                });\n                break;\n            }\n            case 'labtest': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <LaboratoryTest />\n                });\n                break;\n            }\n            case 'package': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <Package />\n                });\n                break;\n            }\n            case 'shippingMethod': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <ShippingMethod />\n                });\n                break;\n            }\n            case 'reportcomp': {\n                this.setState({\n                    onShowing: index,\n                    renderstate: <ReportedCompanies />\n                });\n                break;\n            }\n            default: {\n                this.setState({\n                    onShowing: 'fuel',\n                    renderstate: <Fuel />\n                });\n                break;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <GridContainer>\n                    <GridItem xs={12} sm={12} md={12}>\n                        <Card>\n                            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'fuel') ? \" nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} id=\"fuel\" data-toggle=\"tab\" href=\"#fuel_manuplation\" onClick={this.onChangeTab} role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Fuel</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'labtest') ? \" nav-link active\" : \" nav-link\"} style={{ fontSize: 24 }} onClick={this.onChangeTab} id=\"labtest\" data-toggle=\"tab\" href=\"#lab_test_manuplation\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Laboratory test</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'kit') ? \"nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} onClick={this.onChangeTab} id=\"kit\" data-toggle=\"tab\" href=\"#kit_manuplation\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Kit</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'shippingMethod') ? \"nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} onClick={this.onChangeTab} id=\"shippingMethod\" data-toggle=\"tab\" href=\"#shippingMethod_manuplation\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Shipping Method</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'package') ? \"nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} onClick={this.onChangeTab} id=\"package\" data-toggle=\"tab\" href=\"#package_manuplation\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\">Packages</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className={(this.state.onShowing === 'reportcomp') ? \"nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} onClick={this.onChangeTab} id=\"reportcomp\" data-toggle=\"tab\" href=\"#Reporting_companies\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\">Reporting companies</a>\n                                </li>\n                            </ul>\n                        </Card>\n                    </GridItem>\n                </GridContainer >\n                {this.state.renderstate}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(ControllerViewPage);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n// import Loader from 'react-loader-spinner';\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport {userService} from \"services/api.services\";\n\nconst useStyles = () => (styles)\n\nclass PersonViewPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: \"\",\n            newPassword: '',\n            newPasswordConfirm: '',\n            isDisabled: false,\n            isLoading: true,\n        }\n    }\n\n    componentDidMount = () => {\n        this._getProfile()\n    }\n\n    _getProfile = () => {\n        this.setState({\n            isLoading: true,\n        })\n        userService.getTokenUser(result => {\n            this.setState({\n                name: result.fname + \" \" + result.surname,\n                isLoading: false,\n            })\n        })\n    }\n\n    changePassword = () => {\n        this.setState({ isDisabled: true })\n        userService.changePassword(this.state.newPassword, () => {\n            this.setState({\n                newPassword: '',\n                newPasswordConfirm: '',\n                isDisabled: false,\n            })\n        })\n        this.setState({\n            isDisabled: false,\n        })\n\n    }\n\n\n    render() {\n        return (\n            <GridContainer>\n                <GridItem xs={12} sm={12} md={8}>\n                    <Card>\n                        <form>\n                            <CardBody>\n                                <GridContainer>\n                                    <GridItem xs={12} sm={12} md={12}>\n                                        <h5>{\"Hi, \" + this.state.name}</h5>\n                                    </GridItem>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => this.setState({ newPassword: e.target.value })}\n                                            labelText=\"New Password\"\n                                            id=\"new-password\"\n                                            disabled={this.state.isDisabled}\n                                            inputProps={{ type: \"test\", value: this.state.emnewPasswordail }}\n                                            error={this.state.newPasswordError}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                    <GridItem xs={12} sm={12} md={6}>\n                                        <CustomInput\n                                            onChange={e => this.setState({ newPasswordConfirm: e.target.value })}\n                                            labelText=\"Confirm Password\"\n                                            id=\"new-password-confirm\"\n                                            disabled={this.state.isDisabled}\n                                            inputProps={{ type: \"text\", value: this.state.newPasswordConfirm }}\n                                            error={this.state.newPassword !== this.state.newPasswordConfirm}\n                                            formControlProps={{\n                                                fullWidth: true,\n                                            }}\n                                        />\n                                    </GridItem>\n                                </GridContainer>\n                            </CardBody>\n                        </form>\n                        <CardFooter>\n                            <Button disabled={!this.state.newPassword || this.state.newPassword !== this.state.newPasswordConfirm || this.state.isDisabled} onClick={() => this.changePassword()} color=\"primary\">Update</Button>\n                        </CardFooter>\n                    </Card>\n                </GridItem>\n            </GridContainer>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(PersonViewPage);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Icon } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport moment from \"moment-timezone\";\nimport Loader from \"react-loader-spinner\";\nimport Button from \"components/CustomButtons/Button.js\";\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CardIcon from \"components/Card/CardIcon\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { sampleService } from \"services/api.services\";\nimport CustomInput from \"components/CustomInput/CustomInput\";\n\nconst useStyles = () => styles;\n\nclass ReportsViewPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // On Load list\n      sifList: [],\n      isLoading: true,\n      sifPendingCount: 0,\n      sifCompletedCount: 0,\n      // Pagination\n      page: 0,\n      rowsPerPage: 10,\n      // Mailing\n      multiLabIDSelected: [],\n      mailEmail: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    this.getSIFList();\n  };\n\n  getSIFList = () => {\n    this.setState({ isLoading: true });\n\n    var params = {\n      limit: \"\"\n    };\n    if (this.state.isPendingSIFView) {\n      params.filter = \"pending\";\n    }\n    if (this.state.isCompletedSIFView) {\n      params.filter = \"completed\";\n    }\n\n    sampleService.getSIFList(params, (result) => {\n      if (result) {\n        const count = result.count;\n        this.setState({\n          sifList: result.sif || [],\n          sifPendingCount: count.pending || 0,\n          sifCompletedCount: count.completed || 0,\n        });\n      }\n      this.setState({ isLoading: false });\n    });\n  };\n\n  getpdf = (labid) => {\n    sampleService.downloadpdf(labid, () => { });\n  };\n\n  mailpdf = (labid) => {\n    sampleService.sendMail({ labid: labid }, (result) => { });\n  };\n\n  /*------------------------- Handlers ------------------------- */\n  _handleReset = () => {\n    this.setState({\n      page: 0,\n      rowsPerPage: 10,\n      // mailing\n      multiLabIDSelected: [],\n      mailEmail: \"\",\n    });\n  };\n\n  /*------------------------------ Pagination -----------------------------------*/\n\n  _handleChangePage = (event, newPage) => {\n    this.setState({ page: newPage });\n  };\n\n  _handleChangeRowsPerPage = (event) => {\n    this.setState({ rowsPerPage: +event.target.value });\n    this.setState({ page: 0 });\n  };\n\n  /*-------------------- SIF -----------------------*/\n\n  _handleSearchFilter = (event) => {\n    sampleService.searchSIFListSingleParam(event.target.value, (result) => {\n      this.setState({\n        sifList: result,\n      });\n    });\n  };\n\n  /* -------------------- Multi mail handler ---------------------------- */\n\n  _handleMultiSelect = (event) => {\n    var temp = this.state.multiLabIDSelected;\n    if (event.target.checked) {\n      if (!temp.includes(event.target.id)) {\n        temp.push(event.target.id);\n      }\n    } else {\n      if (temp.includes(event.target.id)) {\n        temp = temp.filter((e) => e !== event.target.id);\n      }\n    }\n    document.getElementById(\"select-all\").checked = false;\n    this.setState({ multiLabIDSelected: temp });\n  };\n\n  _handleSelectAll = (event) => {\n    if (this.state.sifList && this.state.sifList.length > 0) {\n      if (event.target.checked) {\n        var temp = [];\n        this.state.sifList\n          .slice(\n            this.state.page * this.state.rowsPerPage,\n            this.state.page * this.state.rowsPerPage + this.state.rowsPerPage\n          )\n          .map((value, key) => {\n            document.getElementById(value.labid).checked = true;\n            return temp.push(value.labid);\n          });\n        this.setState({ multiLabIDSelected: temp });\n      }\n    } else {\n      document.getElementById(\"select-all\").checked = false;\n    }\n  };\n\n  // API\n  _handleMultiSIFsend = () => {\n    if (\n      this.state.multiLabIDSelected &&\n      this.state.multiLabIDSelected.length &&\n      this.state.mailEmail\n    ) {\n      sampleService.mailMultiPersonalSIF(\n        this.state.multiLabIDSelected,\n        [this.state.mailEmail],\n        (result) => {\n          if (result) {\n            var temp = [];\n            this.state.sifList\n              .slice(\n                this.state.page * this.state.rowsPerPage,\n                this.state.page * this.state.rowsPerPage +\n                this.state.rowsPerPage\n              )\n              .map((value, key) => {\n                document.getElementById(value.labid).checked = false;\n                return temp.push(value.labid);\n              });\n            document.getElementById(\"select-all\").checked = false;\n            this.setState({\n              multiLabIDSelected: [],\n              mailEmail: \"\",\n            });\n          }\n        }\n      );\n    }\n  };\n\n  /*----------------------------------- Render ---------------------------*/\n\n  _renderMailOption = () => {\n    return (\n      <div>\n        <GridItem xs={12} sm={12} md={4}>\n          <CustomInput\n            labelText={\"Enter Email Address\"}\n            onChange={(event) => {\n              this.setState({ mailEmail: event.target.value });\n            }}\n            inputProps={{ type: \"text\" }}\n            formControlProps={{\n              fullWidth: true,\n            }}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Button onClick={this._handleMultiSIFsend} color=\"info\">\n            {\" \"}\n            Email{\" \"}\n          </Button>\n        </GridItem>\n      </div>\n    );\n  };\n\n  _renderSIFTable = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Reports</h4>\n            </CardHeader>\n            <CardBody>\n              {this.state.multiLabIDSelected.length\n                ? this._renderMailOption()\n                : null}\n              {this.state.isLoading ? (\n                <Loader\n                  type=\"ThreeDots\"\n                  color=\"#a5d1e6\"\n                  height={50}\n                  width={50}\n                />\n              ) : (\n                <div className={classes.tableResponsive}>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      labelText={\"Search\"}\n                      id={\"search\"}\n                      onChange={this._handleSearchFilter}\n                      inputProps={{ type: \"text\" }}\n                      formControlProps={{\n                        fullWidth: true,\n                      }}\n                    />\n                  </GridItem>\n                  <Table className={classes.table}>\n                    <TableHead className={classes.info}>\n                      <TableRow className={classes.tableHeadRow}>\n                        <TableCell className={classes.tableCell} key={\"check\"}>\n                          <input\n                            id=\"select-all\"\n                            name=\"select-all\"\n                            type=\"checkbox\"\n                            onChange={this._handleSelectAll}\n                          />\n                        </TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"pdf\"} >PDF</TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"labid\"}>Lab ID</TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"labid\"}>Sample ID</TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"customer\"}>Location</TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"} >Status</TableCell>\n                        <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"company\"}>Released</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {this.state.sifList.length ? (\n                        this.state.sifList\n                          .slice(\n                            this.state.page * this.state.rowsPerPage,\n                            this.state.page * this.state.rowsPerPage +\n                            this.state.rowsPerPage\n                          )\n                          .map((value, key) => (\n                            <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow}>\n                              <TableCell className={`${classes.tableCell} ${classes.tableHeadCell}`} key={\"check\" + key}>\n                                <input id={value.labid} type=\"checkbox\" onChange={this._handleMultiSelect} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={key}>\n                                <PictureAsPdfIcon onClick={() => this.getpdf(value.labid)} />\n                              </TableCell>\n                              <TableCell className={classes.tableCell} key={\"labid\" + key}>{value.labid}</TableCell>\n                              <TableCell className={classes.tableCell} key={\"labid\" + key}>{value.sampleid} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"work-order-location\" + key} > {value.customer} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"status\" + key} >{value.status} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"company\" + key} >  {value.dateout ? moment(value.dateout).format(\"ll\") : \"\"} </TableCell>\n                            </TableRow>\n                          ))\n                      ) : (\n                        <TableRow>No records available</TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                  <TablePagination\n                    component=\"div\"\n                    count={this.state.sifList.length}\n                    rowsPerPage={this.state.rowsPerPage}\n                    page={this.state.page}\n                    onChangePage={this._handleChangePage}\n                    onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                  />\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  _renderHeader = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Icon>P</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Pending test</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.sifPendingCount}{\" \"}\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <div className={classes.stats}>\n                <a\n                  href=\"#filter_pending\"\n                  onClick={() => {\n                    this.setState(\n                      {\n                        isPendingSIFView: !this.state.isPendingSIFView,\n                        isCompletedSIFView: false,\n                      },\n                      () => {\n                        this.getSIFList();\n                      }\n                    );\n                  }}\n                >\n                  {\" \"}\n                  {this.state.sifPendingCount\n                    ? this.state.isPendingSIFView\n                      ? \"Show full\"\n                      : \"View\"\n                    : \"No results\"}{\" \"}\n                </a>\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Icon>C</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Completed test</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.sifCompletedCount}\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <a\n                href=\"#filter_completed\"\n                onClick={() => {\n                  this.setState(\n                    {\n                      isPendingSIFView: false,\n                      isCompletedSIFView: !this.state.isCompletedSIFView,\n                    },\n                    () => {\n                      this.getSIFList();\n                    }\n                  );\n                }}\n              >\n                {\" \"}\n                {this.state.sifCompletedCount\n                  ? this.state.isCompletedSIFView\n                    ? \"Show full\"\n                    : \"View\"\n                  : \"No results\"}{\" \"}\n              </a>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this._renderHeader()}\n        {this._renderSIFTable()}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ReportsViewPage);\n","import React from \"react\";\nimport moment from \"moment-timezone\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { MenuItem, InputLabel, FormControl, Select, Chip, Icon, Input, TextField } from \"@material-ui/core\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from \"react-loader-spinner\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Button from \"components/CustomButtons/Button.js\"\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CardIcon from \"components/Card/CardIcon\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { red } from \"@material-ui/core/colors\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport CustomInput, { CustomMultiEmailInput, } from \"components/CustomInput/CustomInput\";\nimport { userService, sampleService, dataControllerService, } from \"services/api.services\";\nimport Autocomplete from 'components/Autocomplete/Autocomplete';\nimport { confirmAlert } from \"react-confirm-alert\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport constants from \"constants/index\";\n\nconst useStyles = () => (styles)\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst INITIAL_STATE = {\n  attention: '', bid_number: '', bcontact: '', location: '',\n  isCreateOrder: false, onShowOrderTab: true, isEditOrder: false,\n  selectedManager: [], selectedShippingMethod: [],\n  // MULTI EMAIL\n  emailCollection: [], value: \"\", emailError: null,\n  // KIT\n  selectedKit: [], selectedKitID: \"\",\n  selectedShippingMethodId: \"\",\n  selectedManagerId: \"\",\n  order_id: '', defaultLocation: '',\n  isLocation: false,\n  //premnet Address  \n  address: '', city: '', state: '', country: '', zipcode: '', address_check: false, ErrorMessage: '',\n  //Shipping Address\n  shipping_name: '', shipping_address: '', shipping_city: '', shipping_state: '', shipping_country: '', shipping_zipcode: '', shipping_cost: '',\n  tracking_id: '', selectedShippingService: [], selectedShippingServiceId: '', quantity: '',\n  isShippingTrackable: false, shipping_account: '', comment: '',\n  return_lable_check: false, return_label_quantity: '', return_label_cost: '', purchase_order: '', charge_card: false,\n  pendingOrderList: [], completeOrderList: [], isCompletedOrderView: false, isPendingOrderView: false, orderStatus: '', created_by: '', shipping_created_at: \"\",\n  selectedPacking: [constants.PRE_DEFINED_VALUES.PACKING[0]],\n}\nclass OrderKitsViewPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ...INITIAL_STATE,\n      // On Load list\n      locationList: [], orderList: [], kitList: [], managerList: [], ShippingList: [], shippingServiceList: [],\n      isLoading: true, orderCompletedCount: 0, orderPendingCount: 0,\n      // Pagination\n      page: 0, rowsPerPage: 10,\n      packingList: [],\n    }\n  }\n  componentDidMount = () => {\n    this._onLoad()\n  }\n  _onLoad = () => {\n    this._getOrderCountList()\n    this._getOrderList();\n    this._getLocationList();\n    this._getShippingMethodList();\n    this._getFuelKitList();\n    this._getManagerList();\n    this._getShippingSeviceList();\n    this._getPackaging()\n  }\n\n  _getPackaging = () => this.setState({ packingList: constants.PRE_DEFINED_VALUES.PACKING })\n\n  _getOrderCountList = () => {\n    sampleService.getOrderCountList((result) => {\n      if (result) {\n        const count = result.data;\n        try {\n          this.setState({\n            orderPendingCount: count.orders_pending || this.state.orderPendingCount,\n            orderCompletedCount: count.orders_completed || this.state.orderCompletedCount,\n          });\n        } catch (err) {\n          console.log(err)\n        }\n      }\n      this.setState({ isLoading: false });\n    });\n  };\n  /*------------------------- Handlers ------------------------- */\n  _handleReset = () => {\n    this.setState({\n      //Order \n      attention: '', bid_number: '', bcontact: '',\n      isCreateOrder: true, location: '', onShowOrderTab: true,\n      selectedManager: [], selectedShippingMethod: [], selectedKit: [], emailCollection: [], value: \"\", emailError: null, selectedKitID: \"\",\n      selectedShippingMethodId: \"\", selectedManagerId: \"\", order_id: '', defaultLocation: '',\n      isEditOrder: false, isLocation: false,\n      //premnet Address  \n      address: '', city: '', state: '', country: '', zipcode: '', address_check: false, ErrorMessage: '',\n      //Shipping Address\n      shipping_name: '', shipping_address: '', shipping_city: '', shipping_state: '', shipping_country: '', shipping_zipcode: '', shipping_cost: '',\n      tracking_id: '', selectedShippingService: [], selectedShippingServiceId: '', quantity: '',\n      isShippingTrackable: false, shipping_account: '', comment: '',\n      return_lable_check: false, return_label_quantity: '', return_label_cost: '', purchase_order: '', charge_card: false,\n      pendingOrderList: [], completeOrderList: [], isCompletedOrderView: false, isPendingOrderView: false, orderStatus: '', created_by: '', shipping_created_at: \"\",\n      selectedPacking: [constants.PRE_DEFINED_VALUES.PACKING[0]],\n    })\n  }\n  _getOrderList = () => {\n    this.setState({ isSIFLoading: true });\n    var params = {};\n    if (this.state.isPendingOrderView) { params.sortStatus = \"pending\"; }\n    if (this.state.isCompletedOrderView) { params.sortStatus = \"shipped\"; }\n    sampleService.getOrderList(params, (result) => {\n      if (result) {\n        try {\n          this.setState({\n            orderStatus: params.sortStatus,\n            orderList: result.data || [],\n          });\n        } catch (err) {\n          console.log(err)\n        }\n      }\n      this.setState({ isLoading: false });\n    });\n  };\n  _getManagerList = () => {\n    userService.getUsersList('manager', false, result => { if (result) this.setState({ managerList: result, }) })\n  }\n  _getShippingMethodList = () => {\n    dataControllerService.getShippingMethodList(result => {\n      if (result) this.setState({ ShippingList: result.data, })\n    })\n  }\n  _getFuelKitList = () => {\n    dataControllerService.getKitList(result => { if (result) this.setState({ kitList: result, }) })\n  }\n  _getLocationList = () => {\n    userService.getAllLocation((locationList) => {\n      if (locationList && locationList.data && locationList.data.length) this.setState({ locationList: locationList.data || [], });\n    });\n\n  }\n  _getShippingSeviceList = () => {\n    sampleService.getShippingSeviceList((result) => { let list = [{ name: \"Select One\" }]; this.setState({ shippingServiceList: list.concat(result.data || []) }); });\n  }\n  _handleLocationSelection = (location) => {\n    if (location) {\n      var temp = { address: '', city: \"\", state: \"\", country: \"\", };\n      if (\n        location.address !== \"undefined\" && location.address !== null && location.address !== \"\"\n      ) {\n        temp.address = location.address + \", \" || \" \";\n      }\n      if (\n        location.city !== \"undefined\" && location.city !== null && location.city !== \"\"\n      ) {\n        temp.city = location.city + \", \" || \" \";\n      }\n      if (\n        location.state !== \"undefined\" && location.state !== null && location.state !== \"\"\n      ) {\n        temp.state = location.state + \", \" || \" \";\n      }\n      if (\n        location.country !== \"undefined\" && location.country !== null && location.country !== \"\"\n      ) {\n        temp.country = location.country + \", \" || \" \";\n      }\n      var tempEmail = [];\n      if (location.email && location.email.length > 0) {\n        location.email.map((email) => {\n          if (\n            email !== undefined && email !== \"undefined\" && email !== null &&\n            email !== \"\"\n          ) {\n            return tempEmail.push(email);\n          }\n          return false;\n        });\n      }\n      if (\n        location.primaryemail !== undefined && location.primaryemail !== \"undefined\" && location.primaryemail !== null && location.primaryemail !== \"\"\n      ) {\n        tempEmail.push(location.primaryemail);\n      }\n      this.setState({\n        ErrorMessage: '',\n        address_check: false,\n        location: location._id,\n        address: location.address,\n        city: location.city,\n        state: location.state,\n        country: location.country,\n        zipcode: location.zipcode,\n        phone: location.phone,\n        bcontact: location.phone.toString().slice(0, 3) + '-' + location.phone.toString().slice(3, 6) + '-' + location.phone.toString().slice(6, 10),\n        emailCollection: tempEmail || [],\n        isLocation: true,\n        defaultLocation: location.name,\n      });\n    }\n  };\n  _handleKitSelection = (event) => {\n    this.setState({ ErrorMessage: '', selectedKit: [event.target.value], selectedKitID: event.target.value.id, })\n  }\n  _handleShippingMethodSelection = (event) => {\n    this.setState({ ErrorMessage: '', selectedShippingMethod: [event.target.value], selectedShippingMethodId: event.target.value.id })\n  }\n  _handleManagerSelection = (event) => {\n    this.setState({ selectedManager: [event.target.value], selectedManagerId: event.target.value.id })\n  }\n  _handleSelectShippingAddress = () => {\n    if (this.state.address_check === false) {\n      this.setState({\n        ErrorMessage: '', address_check: true, shipping_name: this.state.defaultLocation,\n        shipping_address: this.state.address, shipping_city: this.state.city, shipping_state: this.state.state, shipping_country: this.state.country, shipping_zipcode: this.state.zipcode,\n      })\n    }\n    else if (this.state.address_check === true) {\n      this.setState({\n        ErrorMessage: '',\n        address_check: false,\n      })\n    }\n\n  }\n  _handlePackingSelection = event => {\n    this.setState({\n      selectedPacking: event.target.value ? [event.target.value] : [constants.PRE_DEFINED_VALUES.PACKING[0]]\n    })\n  }\n  _handleShippingSeviceSelection = (event) => {\n    if (event.target.value.trackable === true) {\n      this.setState({ isShippingTrackable: true, tracking_id: '' })\n    }\n    else if (event.target.value.trackable === false) {\n      this.setState({ isShippingTrackable: false, tracking_id: '' })\n    }\n    this.setState({ selectedShippingService: [event.target.value], selectedShippingServiceId: event.target.value.id, ErrorMessage: '' })\n  }\n  _handleSelectReturnLabel = () => {\n    if (this.state.return_lable_check === true) {\n      this.setState({ return_lable_check: false })\n    }\n    else if (this.state.return_lable_check === false) {\n      this.setState({ return_lable_check: true })\n    }\n  }\n  _handleSearchFilter = (event) => {\n    this.setState({ isLoading: true });\n    sampleService.searchOrder(event.target.value, (result) => {\n      if (result) {\n        this.setState({ orderList: result.data, page: 0, });\n      }\n    });\n    this.setState({ isLoading: false })\n  };\n  _handleSelectChargeCard = () => {\n    if (this.state.charge_card === true) { this.setState({ charge_card: false }) }\n    else if (this.state.charge_card === false) {\n      this.setState({ charge_card: true })\n    }\n  }\n  _handleTrackingURL = (value) => {\n    const URL = value.shipping_service_url\n    const pay = value.shipping_service_payload\n    const key = value.shipping_service_key\n    const payload = pay.substring(1, pay.length - 1)\n    const Dummypay = payload.replace(/\\s/g, \"\")\n    let dummyurl = \"\"\n    // if( Dummypay === \"\"){\n    //   dummyurl = URL +\"?action=track&&\"+key+ \"=\" +value.tracking_id\n    // }\n    // else if(Dummypay !== \"\"){\n    //   dummyurl = URL +\"?action=track&&\" +Dummypay + \"&&\" +key+ \"=\" +value.tracking_id\n    // } \n    if (pay === \"{}\") {\n      dummyurl = URL + \"?\" + key + \"=\" + value.tracking_id\n    }\n    else if (pay !== {}) {\n      dummyurl = URL + \"?\" + Dummypay + \"&&\" + key + \"=\" + value.tracking_id\n    }\n    // console.log(dummyurl)\n    // return \n    if (value.shipping_service_url) {\n      window.open(dummyurl)\n    }\n  }\n  /*----------------- Multiple email entry handle ------------------*/\n  handleKeyDown = (evt) => {\n    if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n      evt.preventDefault();\n      var value = this.state.value.trim();\n      if (value && this._handleEmailIsValid(value)) {\n        this.setState({\n          emailCollection: [...this.state.emailCollection, this.state.value], value: \"\",\n        });\n      }\n    }\n  };\n  _handleEmailAddChange = (evt) => {\n    this.setState({\n      value: evt.target.value,\n      emailError: null,\n    });\n  };\n  _handleEmailRemoveChange = (item) => {\n    this.setState({\n      emailCollection: this.state.emailCollection.filter((i) => i !== item),\n    });\n  };\n  _handleEmailPasteChange = (evt) => {\n    evt.preventDefault();\n    var paste = evt.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !this._handleEmailIsInList(email));\n      this.setState({ emailCollection: [...this.state.emailCollection, ...toBeAdded], });\n    }\n  };\n  _handleEmailIsValid(email) {\n    let emailError = null;\n    if (this._handleEmailIsInList(email)) { emailError = `${email} has already been added.`; }\n    if (!this._handleEmailIsIsEmail(email)) { emailError = `${email} is not a valid email address.`; }\n    if (emailError) { this.setState({ emailError }); return false; }\n    return true;\n  }\n  _handleEmailIsInList(email) {\n    return this.state.emailCollection.includes(email);\n  }\n  _handleEmailIsIsEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n  NumberFormatCustom = (props) => {\n    const { inputRef, onChange, ...other } = props;\n    return (\n      <NumberFormat\n        {...other}\n        getInputRef={inputRef}\n        onValueChange={(values) => {\n          onChange({\n            target: {\n              name: props.name,\n              value: values.value,\n            },\n          });\n        }}\n        isNumericString\n        prefix=\"$\"\n        decimalScale={2}\n        fixedDecimalScale={true}\n\n      />\n    );\n  }\n  /*------------------------------ Pagination -----------------------------------*/\n  _handleChangePage = (event, newPage) => { this.setState({ page: newPage }); };\n  _handleChangeRowsPerPage = (event) => { this.setState({ rowsPerPage: parseInt(+event.target.value) }); this.setState({ page: 0 }); };\n  /**************************************ORDER***************************************/\n  _onCreateOrderKit = () => {\n    let formdata = {\n      location: this.state.location || null,\n      shipping_method: this.state.selectedShippingMethodId || null,\n      shipping_address: this.state.shipping_address,\n      shipping_city: this.state.shipping_city,\n      shipping_state: this.state.shipping_state,\n      shipping_country: this.state.shipping_country,\n      shipping_zipcode: this.state.shipping_zipcode,\n      email: this.state.emailCollection,\n      attention: this.state.attention,\n      phone: this.state.bcontact || \" \",\n      bid_number: this.state.bid_number,\n      kit: this.state.selectedKitID || null,\n      manager: this.state.selectedManagerId || null,\n      shipping_service: this.state.selectedShippingServiceId || null,\n      quantity: this.state.quantity,\n      shipping_account: this.state.shipping_account,\n      comment: this.state.comment,\n      return_label_quantity: this.state.return_label_quantity || null,\n      return_label_cost: this.state.return_label_cost || null,\n      purchase_order: this.state.purchase_order,\n      charge_card: this.state.charge_card,\n      shipping_name: this.state.shipping_name,\n      shipping_cost: this.state.shipping_cost || null,\n      isShippingTrackable: this.state.isShippingTrackable,\n      tracking_id: this.state.tracking_id,\n      packing: \"\",\n    };\n    if (this.state.selectedPacking[0] != this.state.packingList[0])\n      formdata.packing = this.state.selectedPacking[0]\n\n    sampleService.createOrder(formdata, (result) => {\n      if (result) {\n        this._handleReset();\n        this._getOrderCountList();\n        this._getOrderList();\n      }\n    });\n  }\n  getOrderbyID = (id) => {\n    this._handleReset();\n    let selectedPacking = [constants.PRE_DEFINED_VALUES.PACKING[0]];\n    let address_check = this.state.address_check;\n    let return_lable_check = this.state.return_lable_check;\n    sampleService.getOrderById(id, (result) => {\n      if (result) {\n        this.state.locationList.map((e) => {\n          if (result.location_name === e.name || result.location === e.id) {\n            this.setState({ defaultLocation: e.name, isLocation: true, address: e.address, city: e.city, state: e.state, country: e.country, zipcode: e.zipcode, phone: e.phone })\n          }\n          if (e.address === result.shipping_address && e.city === result.shipping_city && e.state === result.shipping_state && e.country === result.shipping_country && e.zipcode == result.shipping_zipcode) {\n            address_check = true\n          }\n          return false\n        })\n        this.state.kitList.map((e) => { if (result.kit === e.id) { this.state.selectedKit = [e] } return false })\n\n        if (result.return_label_quantity !== null || result.return_label_cost !== null)\n          return_lable_check = true\n\n        if (result.manager !== null)\n          this.state.managerList.map((e) => { if (result.manager === e.id) { this.state.selectedManager = [e] } return false })\n\n        if (result.shipping_service !== null) {\n          this.state.shippingServiceList.map((e) => {\n            if (result.shipping_service === e.id) { this.state.selectedShippingService = [e] }\n            if (e.trackable === true) { this.setState({ isShippingTrackable: e.trackable }) }\n            return false\n          })\n        }\n        if (result.shipping_method !== null) {\n          this.state.ShippingList.map((e) => { if (result.shipping_method === e.id) { this.state.selectedShippingMethod = [e] } return false })\n        }\n        if (this.state.address === result.shipping_address && this.state.city === result.shipping_city && this.state.state === result.shipping_state && this.state.country === result.shipping_country && this.state.zipcode == result.shipping_zipcode)\n          address_check = true\n\n        if (result.packing) selectedPacking = [result.packing]\n\n        this.setState({\n          isEditOrder: true,\n          attention: result.attention,\n          bid_number: result.bid_number,\n          charge_card: result.charge_card,\n          comment: result.comment,\n          created_by: result.created_by_fname && result.created_by_surname ? result.created_by_fname + \" \" + result.created_by_surname : null,\n          emailCollection: result.email,\n          selectedKitID: result.kit,\n          location: result.location,\n          selectedManagerId: result.manager,\n          order_id: result.order_id,\n          bcontact: result.phone,\n          purchase_order: result.purchase_order,\n          quantity: result.quantity,\n          return_label_cost: result.return_label_cost,\n          return_label_quantity: result.return_label_quantity,\n          selectedShippingMethodId: result.shipping_method,\n          selectedShippingServiceId: result.shipping_service,\n          shipping_name: result.shipping_name,\n          shipping_account: result.shipping_account,\n          shipping_address: result.shipping_address,\n          shipping_city: result.shipping_city,\n          shipping_country: result.shipping_country,\n          shipping_state: result.shipping_state,\n          shipping_zipcode: result.shipping_zipcode,\n          tracking_id: result.tracking_id,\n          shipping_created_at: result.shipping_created_at ? moment(result.shipping_created_at).tz('America/Los_Angeles').format(\"MMM DD, YYYY\") : \"\",\n          address_check,\n          return_lable_check,\n          selectedPacking,\n        });\n\n        if (result.shipping_cost !== null && result.shipping_cost.$numberDecimal) {\n          this.setState({ shipping_cost: result.shipping_cost.$numberDecimal })\n        }\n        else if (result.shipping_cost !== null) {\n          this.setState({ shipping_cost: result.shipping_cost })\n        }\n      }\n    });\n  };\n  updateOrderById = () => {\n    let formdata = {\n      location: this.state.location || null,\n      shipping_method: this.state.selectedShippingMethodId || null,\n      shipping_address: this.state.shipping_address,\n      shipping_city: this.state.shipping_city,\n      shipping_state: this.state.shipping_state,\n      shipping_country: this.state.shipping_country,\n      shipping_zipcode: this.state.shipping_zipcode,\n      email: this.state.emailCollection,\n      attention: this.state.attention,\n      phone: this.state.bcontact || \" \",\n      bid_number: this.state.bid_number,\n      kit: this.state.selectedKitID,\n      manager: this.state.selectedManagerId || null,\n      tracking_id: this.state.tracking_id,\n      shipping_service: this.state.selectedShippingServiceId || null,\n      quantity: this.state.quantity,\n      shipping_account: this.state.shipping_account,\n      comment: this.state.comment,\n      return_label_quantity: this.state.return_label_quantity || null,\n      return_label_cost: this.state.return_label_cost || null,\n      purchase_order: this.state.purchase_order,\n      charge_card: this.state.charge_card,\n      shipping_name: this.state.shipping_name,\n      shipping_cost: this.state.shipping_cost || null,\n      isShippingTrackable: this.state.isShippingTrackable,\n      packing: \"\",\n    }\n    if (this.state.selectedPacking[0] != this.state.packingList[0])\n      formdata.packing = this.state.selectedPacking[0]\n\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to update',\n      buttons: [\n        {\n          label: 'Update',\n          onClick: () => {\n            sampleService.updateOrderById(this.state.order_id, formdata, result => {\n              if (result) {\n                this.setState({ tracking_id: result.tracking_id })\n                this._getOrderCountList();\n                this._getOrderList();\n              }\n            })\n          }\n        },\n        {\n          label: 'Cancel',\n          onClick: () => console.log('cancel update')\n        }\n      ]\n    });\n  }\n  deleteOrder = (id) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete\",\n      buttons: [{ label: \"Delete\", onClick: () => { sampleService.deleteOrder(id, (result) => { if (result) { this._getOrderList(); this._getOrderCountList(); } }); }, },\n      { label: \"Cancel\", onClick: () => console.log(\"cancel delete\"), },\n      ],\n    });\n  };\n  /*----------------------------------- Render ---------------------------*/\n  _renderHeader = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"info\" stats icon>\n              <CardIcon color=\"info\">\n                <Icon>P</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Pending Orders</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.orderPendingCount}\n              </h3>\n            </CardHeader>\n            {this.state.isLoading ? null : <CardFooter stats>\n              <a href=\"#filter_pending\"\n                onClick={(e) => {\n                  this.setState(\n                    {\n                      isPendingOrderView: !this.state.isPendingOrderView, isCompletedOrderView: false,\n                    },\n                    () => {\n                      this._getOrderList()\n                    }\n                  );\n                }}\n              >\n                {this.state.orderPendingCount ? this.state.isPendingOrderView ? \"Show full\" : \"View\" : \"No results\"}\n              </a>\n            </CardFooter>}\n\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"success\" stats icon>\n              <CardIcon color=\"success\">\n                <Icon>C</Icon>\n              </CardIcon>\n              <p className={classes.cardCategory}>Completed Orders</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.orderCompletedCount}\n              </h3>\n            </CardHeader>\n            {this.state.isLoading ? null : <CardFooter stats>\n              <a href=\"#filter_completed\" onClick={(e) => {\n                this.setState(\n                  {\n                    isPendingOrderView: false,\n                    isCompletedOrderView: !this.state.isCompletedOrderView\n\n                  },\n                  () => {\n                    this._getOrderList()\n                  }\n                );\n              }}\n              >\n                {this.state.orderCompletedCount ? this.state.isCompletedOrderView ? \"Show full\" : \"View\" : \"No results\"} </a>\n            </CardFooter>}\n\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n              <li className=\"nav-item\">\n                <a className={this.state.onShowOrderTab ? \" nav-link active\" : \"nav-link\"} style={{ fontSize: 24 }} id=\"home-tab\" data-toggle=\"tab\" href=\"#Order\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\" >\n                  Order Kit\n                </a>\n              </li>\n            </ul>\n          </Card>\n        </GridItem>\n        <GridItem xs={6} sm={6} md={6}>  <Button onClick={() => { this._handleReset(); this.setState({ isCreateOrder: !this.state.isCreateOrder }); }} color=\"info\" > {this.state.isCreateOrder ? \" Return \" : \"Create Order\"} </Button> </GridItem>\n      </GridContainer>\n    );\n  };\n  _renderOrderForm = () => {\n    const { classes } = this.props;\n    const location_value = { name: this.state.defaultLocation };\n    return (\n      <Card>\n        <CardHeader color=\"primary\">    <h4 className={classes.cardTitleWhite}>      {this.state.isEditOrder ? `Edit Order ${this.state.order_id}` : \"Create Order Kit Form\"}  </h4>\n          <p className={classes.cardCategoryWhite}> Complete order form </p>\n        </CardHeader>\n        <CardBody>\n          <GridContainer>\n            {!this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete id=\"location-type-selection\"\n                    onChange={(event, newValue) => this._handleLocationSelection(newValue)}\n                    options={this.state.locationList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (<TextField  {...params} label=\"Location\" variant=\"outlined\" />)}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) => this._handleLocationSelection(newValue)}\n                    value={location_value}\n                    options={this.state.locationList}\n                    getOptionLabel={option => option.name}\n                    disablePortal\n                    includeInputInList\n                    autoComplete\n                    renderInput={(params) => (<TextField   {...params} label=\"Location\" variant=\"outlined\" />)}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            <br />\n            <GridItem xs={12} sm={12} md={12}><br />  Present Address   </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <CustomInput\n                labelText=\"Address\"\n                onChange={e => { this.setState({ address: e.target.value }); }}\n                id=\"address\"\n                inputProps={{ type: \"text\", value: this.state.address, disabled: true }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"City\"\n                onChange={e => { this.setState({ city: e.target.value }); }}\n                id=\"city\"\n                inputProps={{ type: \"text\", value: this.state.city, disabled: true }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"State\"\n                onChange={e => { this.setState({ state: e.target.value }); }}\n                id=\"state\"\n                inputProps={{ type: \"text\", value: this.state.state, disabled: true }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Country\"\n                onChange={e => { this.setState({ country: e.target.value }); }}\n                id=\"country\"\n                inputProps={{ type: \"text\", value: this.state.country, disabled: true }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Zip Code\"\n                onChange={e => { this.setState({ zipcode: e.target.value }); }}\n                id=\"zipcode\"\n                inputProps={{ type: \"text\", value: this.state.zipcode, disabled: true }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <br />\n              <FormControlLabel control={<Checkbox\n                defaultChecked\n                color=\"default\"\n                checked={this.state.address_check}\n                onChange={this._handleSelectShippingAddress}\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n              />} label=\" Click here if the shipping address same as present address\" />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={12}><br />  Shipping Address  </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <CustomInput\n                labelText=\"Location Name\"\n                onChange={e => { this.setState({ shipping_name: e.target.value }); }}\n                id=\"shipping_name\"\n                inputProps={{ type: \"text\", value: this.state.shipping_name }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <CustomInput\n                labelText=\"Shipping Address\"\n                onChange={e => { this.setState({ shipping_address: e.target.value }); }}\n                id=\"shipping_address\"\n                inputProps={{ type: \"text\", value: this.state.shipping_address }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Shipping City\"\n                onChange={e => { this.setState({ shipping_city: e.target.value }); }}\n                id=\"shipping_city\"\n                inputProps={{ type: \"text\", value: this.state.shipping_city }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Shipping State\"\n                onChange={e => { this.setState({ shipping_state: e.target.value }); }}\n                id=\"shipping_state\"\n                inputProps={{ type: \"text\", value: this.state.shipping_state }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Shipping Country\"\n                onChange={e => { this.setState({ shipping_country: e.target.value }); }}\n                id=\"shipping_country\"\n                inputProps={{ type: \"text\", value: this.state.shipping_country }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Shipping Zipcode\"\n                onChange={e => { this.setState({ shipping_zipcode: e.target.value }); }}\n                id=\"shipping_zipcode\"\n                inputProps={{ type: \"text\", value: this.state.shipping_zipcode }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Billing Contact\"\n                onChange={e => { this.setState({ bcontact: e.target.value }); }}\n                id=\"bcontact\"\n                inputProps={{ type: \"text\", value: this.state.bcontact }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomMultiEmailInput\n                id=\"email\"\n                disabled={true}\n                inputProps={{ type: \"text\", value: this.state.value }}\n                labelText=\"Billing Email\"\n                onKeyDown={this.handleKeyDown}\n                onChange={this._handleEmailAddChange}\n                onPaste={this._handleEmailPasteChange}\n                formControlProps={{ fullWidth: true, }}\n              />\n              {this.state.emailError !== null ? <span style={{ color: 'red' }}>{this.state.emailError}</span> : null}\n              {this.state.emailCollection.map((item, key) => (<div className={classes.chips} key={item}>   <Chip onClick={() => this._handleEmailRemoveChange(item)} key={key} label={item + \"  X\"} className={classes.chip} /></div>))}\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"BId Number\"\n                onChange={e => { this.setState({ bid_number: e.target.value }); }}\n                id=\"bid_number\"\n                inputProps={{ type: \"text\", value: this.state.bid_number }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Purchase order\"\n                onChange={e => { this.setState({ purchase_order: e.target.value }); }}\n                id=\"purchase_order\"\n                inputProps={{ type: \"text\", value: this.state.purchase_order }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <br />\n              <FormControl fullWidth >\n                <TextField\n                  label=\"Total Cost\"\n                  value={this.state.shipping_cost}\n                  onChange={e => { this.setState({ shipping_cost: e.target.value }); }}\n                  name=\"shipping_cost\"\n                  id=\"formatted-numberformat-input\"\n                  InputProps={{\n                    inputComponent: this.NumberFormatCustom,\n                  }}\n                />\n              </FormControl>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}></GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <br />\n              <FormControlLabel control={<Checkbox\n                defaultChecked\n                color=\"default\"\n                checked={this.state.charge_card}\n                onChange={this._handleSelectChargeCard}\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n              />} label=\"Charge Card on File\" />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <br />\n              <FormControlLabel control={<Checkbox\n                defaultChecked\n                color=\"default\"\n                checked={this.state.return_lable_check}\n                onChange={this._handleSelectReturnLabel}\n                inputProps={{ 'aria-label': 'checkbox with default color' }}\n              />} label=\" Return Label\" />\n            </GridItem>\n            {this.state.return_lable_check ?\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                  labelText=\"Quantity\"\n                  onChange={e => { this.setState({ return_label_quantity: e.target.value }); }}\n                  id=\"return_label_quantity\"\n                  inputProps={{ type: \"text\", value: this.state.return_label_quantity }}\n                  formControlProps={{ fullWidth: true, }}\n                />\n              </GridItem>\n              : null}\n            {this.state.return_lable_check ?\n              <GridItem xs={12} sm={12} md={6}>\n                <br />\n                <FormControl fullWidth >\n                  <TextField\n                    label=\"Cost\"\n                    value={this.state.return_label_cost}\n                    onChange={e => { this.setState({ return_label_cost: e.target.value }); }}\n                    name=\"return_label_cost\"\n                    id=\"formatted-numberformat-input\"\n                    InputProps={{\n                      inputComponent: this.NumberFormatCustom,\n                    }}\n                  />\n                </FormControl>\n              </GridItem>\n              : null}\n\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id={\"manager-selection\"}>Manager</InputLabel>\n                <Select\n                  labelId={\"manager-selection\"} id={\"manager-selection\"} name={\"manager-selection\"} single\n                  value={this.state.selectedManager ? this.state.selectedManager : null}\n                  onChange={this._handleManagerSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}>    {selected.map((value) => (<Chip key={value.id} label={value.fname} className={classes.chip} />))}    </div>)}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.managerList.map((name) => (<MenuItem key={name.id} value={name} >  {name.fname}  </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem >\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id={\"shipping-selection\"}>Shipping Method</InputLabel>\n                <Select labelId={\"shipping-selection\"} id={\"shipping-selection\"} name={\"shipping-selection\"} single\n                  value={this.state.selectedShippingMethod}\n                  onChange={this._handleShippingMethodSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}> {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))}  </div>\n                  )}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.ShippingList.map((name) => (<MenuItem key={name.id} value={name} >    {name.name} </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem >\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id={\"kit-selection\"}>Kit</InputLabel>\n                <Select\n                  labelId={\"kit-selection\"} id={\"kit-selection\"} name={\"kit-selection\"} single\n                  value={this.state.selectedKit}\n                  onChange={this._handleKitSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}>  {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))}  </div>)}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.kitList.map((name) => (<MenuItem key={name.id} value={name} >   {name.name}  </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem >\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Quantity\"\n                onChange={e => { this.setState({ quantity: e.target.value }); }}\n                id=\"quantity\"\n                inputProps={{ type: \"number\", value: this.state.quantity }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id={\"packing-selection\"}>Packing</InputLabel>\n                <Select labelId={\"packing-selection\"} id={\"packing-selection\"} name={\"packing-selection\"} single\n                  value={this.state.selectedPacking}\n                  onChange={this._handlePackingSelection}\n                  input={<Input id=\"select-packing-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}>  {selected.map((value, index) => (<Chip key={index} label={value} className={classes.chip} />))}  </div>)}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.packingList.map((name, index) => (<MenuItem key={`packing-${index}`} value={name} >{name}</MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem >\n            <GridItem xs={12} sm={12} md={6}>\n              <FormControl className={classes.formControl}>\n                <InputLabel className={classes.InputLabelGrey} id={\"shipping-selection\"}>Shipping Service</InputLabel>\n                <Select labelId={\"shipping-selection\"} id={\"shipping-selection\"} name={\"shipping-selection\"} single\n                  value={this.state.selectedShippingService}\n                  onChange={this._handleShippingSeviceSelection}\n                  input={<Input id=\"select-multiple-chip\" />}\n                  renderValue={(selected) => (<div className={classes.chips}>  {selected.map((value) => (<Chip key={value.id} label={value.name} className={classes.chip} />))}  </div>)}\n                  MenuProps={MenuProps}\n                >\n                  {this.state.shippingServiceList.map((name) => (<MenuItem key={name.id} value={name} >  {name.name} </MenuItem>))}\n                </Select>\n              </FormControl>\n            </GridItem >\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Tracking ID\"\n                onChange={e => { this.setState({ tracking_id: e.target.value }); }}\n                id=\"tracking_id\"\n                inputProps={{ type: \"text\", value: this.state.tracking_id }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Shipping Account\"\n                onChange={e => { this.setState({ shipping_account: e.target.value }); }}\n                id=\"shipping_account\"\n                inputProps={{ type: \"text\", value: this.state.shipping_account }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText=\"Attention\"\n                onChange={e => { this.setState({ attention: e.target.value }); }}\n                id=\"attention\"\n                inputProps={{ type: \"text\", value: this.state.attention }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={12}>\n              <CustomInput\n                labelText=\"Comment\"\n                onChange={e => { this.setState({ comment: e.target.value }); }}\n                id=\"comment\"\n                inputProps={{ type: \"text\", value: this.state.comment }}\n                formControlProps={{ fullWidth: true, }}\n              />\n            </GridItem>\n          </GridContainer>\n          {this.state.isEditOrder === true\n            ? this.state.created_by === null\n              ? null\n              : (<>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}><p style={{ paddingTop: 15 }}><b>Shipped At : </b>{this.state.shipping_created_at}</p></GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={6}><p style={{ paddingTop: 15 }}><b>Created By : </b>{this.state.created_by}</p></GridItem>\n                </GridContainer>\n              </>)\n            : null}\n        </CardBody>\n        <CardFooter>\n          {this.state.ErrorMessage ? <h5 style={{ color: 'red' }}>{this.state.ErrorMessage}</h5> : null}\n          <Button onClick={this._handleReset} color=\"danger\">Reset</Button>\n          {!this.state.isEditOrder ? (<Button onClick={this._onCreateOrderKit} color=\"success\"> Create Order </Button>) : null}\n          {this.state.isEditOrder ? (<Button onClick={this.updateOrderById} color=\"warning\"> Update Order </Button>) : null}\n        </CardFooter>\n      </Card>\n    )\n  }\n  _renderOrderKitTable = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>\n                {this.state.orderStatus === \"pending\" ? \"Pending  Order Kit\" : this.state.orderStatus === \"shipped\" ? \"Shipped Order Kit\" : \"Available  Order Kit\"}\n              </h4>\n            </CardHeader>\n            <CardBody>\n\n              {this.state.isLoading ? (\n                <GridItem xs={12} sm={12} md={4}>  <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />  </GridItem>\n              ) : (\n                <div>\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={4}>\n                      <CustomInput labelText={\"Search\"} id={\"search\"} onChange={this._handleSearchFilter} inputProps={{ type: \"text\" }} formControlProps={{ fullWidth: true, }} />\n                    </GridItem>\n                  </GridContainer>\n                  <div className={classes.tableResponsive}>\n\n                    <Table className={classes.table}>\n                      <TableHead className={classes.info}>\n                        <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"orderId\"}>Order ID </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"shipping_address\"} width=\"130\"  >  Location Name </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"kitName\"} > Kit </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"quantity\"} >Quantity </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"shipping_service_name\"} width=\"140\"> Shipping Service </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"tracking_id\"} > Tracking Id </TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"} >Status</TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"created-on\"} >Created on</TableCell>\n                          <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"option\"} > Options </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {this.state.orderList.length ? (this.state.orderList\n                          .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                          .map((value, key) => (\n                            <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                              <TableCell className={classes.tableCell} key={\"orderId\" + key}> {value.order_id} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"shipping_address\" + key} >{value.location_name} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"kitName\" + key} >  {value.kit_name} </TableCell>\n                              <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"quantity\"} >{value.quantity || null} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"shipping_service_name\" + key}  > {value.shipping_service_name || null}  </TableCell>\n                              <TableCell className={classes.tableCell} key={\"tracking_id\" + key} ><Link className={classes.urlLink} onClick={() => this._handleTrackingURL(value)} > <b>  {value.tracking_id || null}</b> </Link ></TableCell>\n                              <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"status\"} > {value.shipping_service_name ? \"Shipped\" : \"Pending\"} </TableCell>\n                              <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"created-at-\" + key} > {value.createdAt ? moment(value.createdAt).tz('America/Los_Angeles').format(\"MMM DD, YYYY\") : \"\"} </TableCell>\n                              <TableCell className={classes.tableCell} key={\"option\" + key}>\n                                <DeleteForeverIcon onClick={() => this.deleteOrder(value.order_id)} style={{ color: red[500] }} />\n                                <BorderColorIcon onClick={() => this.getOrderbyID(value.order_id)} />\n                              </TableCell>\n                            </TableRow>\n                          ))\n                        ) : (\n                          <TableRow>No records available</TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                    <TablePagination component=\"div\" count={this.state.orderList.length} rowsPerPage={this.state.rowsPerPage} page={this.state.page} onChangePage={this._handleChangePage} onChangeRowsPerPage={this._handleChangeRowsPerPage} />\n                  </div>\n                </div>)}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n  render() {\n    return (\n      <div>\n        {this._renderHeader()}\n        {this.state.isCreateOrder ? this._renderOrderForm() : null}\n        {this.state.onShowOrderTab ? this._renderOrderKitTable() : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(OrderKitsViewPage);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Button from \"components/CustomButtons/Button.js\"\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport { MenuItem, InputLabel, FormControl, Select, Chip, Input,TextField } from \"@material-ui/core\";\nimport CustomInput from \"components/CustomInput/CustomInput\";\nimport Autocomplete from 'components/Autocomplete/Autocomplete';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Loader from \"react-loader-spinner\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { red } from \"@material-ui/core/colors\";\nimport { userService,sampleService ,dataControllerService} from \"services/api.services\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport moment from \"moment\";\nconst useStyles = () => (styles)\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\nclass CheckoutListViewPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            checklist:[],\n            isCreateCheckoutlist:false,isEditCheckoutList:false,tank_id:'',sample_id:'',locationList:[],location:null,\n            isLoading:true,checkoutList:[],checkout_id:'',\n            selected_checklists:[],updated_by:'',on_date:'',\n            isLocation:false,defaultLocation:'',inspector_name:'',comment:'',checkoutTestList:[],test_values:[],selectedTest_value:'',test:null,\n            isTestSelected:false,defaultselectedTest:'',selectSingleTestValue:'',\n            // Pagination\n            page: 0, rowsPerPage: 10,\n            }\n            dataControllerService.getAdminChecklist((checklist)=>{\n              if(checklist){\n                checklist.map((ele, i) => {\n                  ele.sub_categorys.map((sub_cat)=>{\n                    this.state[sub_cat._id] = false\n                    return false\n                  })\n                  return false\n              })\n              }\n        })\n            \n    }\n    componentDidMount = () => {\n      this._onLoad()\n        userService.getAllLocation((locationList) => { if (locationList && locationList.data && locationList.data.length) this.setState({ locationList: locationList.data || [], }); });\n      }\n      _onLoad=()=>{\n        this._getCheckoutList();\n        dataControllerService.getAdminChecklist((checklist)=>{if (checklist) this.setState({ checklist: checklist || [], });})\n        this._getCheckoutTestList()\n    \n      }\n  /******************************Handler********************** */  \n  _handleReset=()=>{\n      this.setState({ isCreateCheckoutlist:true,isEditCheckoutList:false,tank_id:'',sample_id:'',location:null,isOrderLoading:false, \n      page: 0, rowsPerPage: 10,checkout_id:'',selected_checklists:[],updated_by:'',on_date:'',isLocation:false,defaultLocation:\"\",inspector_name:'',\n      comment:'',test_values:[],selectedTest_value:'',test:null,defaultselectedTest:'',selectSingleTestValue:''\n    })\n    this.state.checklist.map((ele, i) => {\n      ele.sub_categorys.map((sub_cat)=>{\n        this.state[sub_cat._id] = false\n        return false\n      })\n      return false\n  })\n  this._getCheckoutList();\n  }\n  _handleLocationSelection=(location)=>{\n    if(location){\n    this.setState({location:location.id,defaultLocation:location.name})\n    }\n  }\n  _getCheckoutList=()=>{\n    sampleService.getCheckoutList(result => { if (result) { \n     this.setState({ checkoutList: result.data})\n     this.setState({ isLoading: false })\n      }\n\n    })\n   }\n   _getCheckoutTestList=()=>{\n    sampleService.getCheckoutTestList(result => { if (result) { \n     this.setState({ checkoutTestList: result.data})\n     this.setState({ isLoading: false })\n      }\n\n    })\n    \n  }\n  _handleCheckListService(name, values) {\n    if(this.state[name]===false){\n    this.setState({ [name]: true})\n    this.state.selected_checklists.push(name)\n    }\n    else if(this.state[name] === true){\n      let dataList = this.state.selected_checklists.filter((id) => id !== name);\n      // this.state.selected_checklists.pop(name)\n      this.setState({selected_checklists:dataList,[name]: false})\n    }\n}\n_handleTestSelection=(test)=>{\n  if(test !== null){\n    this.setState({selectedTest_value:''})\n  if(test.values && test.values.length === 1){\n    this.setState({selectedTest_value:test.values[0],test_values:test.values,test:test.id,defaultselectedTest:test.name})\n  }\n  else if(test.values && test.values.length !== 1){\n    this.setState({test_values:test.values,test:test.id,defaultselectedTest:test.name})\n  }\n  }\n  else{\n    return false\n  }\n  return false\n}\n_handleTestValueSelection=(event)=>{\n  this.setState({selectedTest_value:event.target.value})\n\n}\n  /********************************Api integration**************************************** */\n  _onCreateCheckout=()=>{\n    if(this.state){\n      let formdata = {\n        location: this.state.location ||null,\n            sample_id:this.state.sample_id,\n            tracking_id:this.state.tank_id,\n            selected_checklists:this.state.selected_checklists || [],\n            inspector_name:this.state.inspector_name,\n            comment:this.state.comment,\n            test:this.state.test,\n            test_value:this.state.selectedTest_value\n      };\n      sampleService.createCheckout(formdata, (result) => {\n        if(result){\n          this._handleReset();\n          this._getCheckoutList();\n        }\n      });\n    }\n  }\n  _getCheckoutbyID = (id) => {\n    this._handleReset();\n    sampleService.getCheckoutById(id, (result) => {\n      if (result) {\n        this.state.locationList.map((ele)=>{\n          if(result.location_name === ele.name){\n            this.setState({location:ele._id})\n          }\n          return false\n        })\n        this.state.checkoutTestList.map((ele)=>{\n          if(result.test===ele.id){\n            this.setState({defaultselectedTest:ele.name,isTestSelected:true,test_values:ele.values})\n          }\n          return false\n        })\n        this.setState({\n            checkout_id:result._id,\n            defaultLocation: result.location_name,\n            sample_id:result.sample_id,\n            tank_id:result.tank_id,\n            updated_by:result.updated_by_fname + \" \" + result.updated_by_surname,\n            selected_checklists:result.selected_checklists,\n            on_date:result.updated_at,\n            isEditCheckoutList:true,\n            isLocation:true,\n            inspector_name:result.inspector_name,\n            comment:result.comment,\n            test:result.test,\n            selectedTest_value:result.test_value,\n        });\n      }\n      this.state.selected_checklists.map((ele)=>{\n          this.setState({ [ele]: true})\n          return false\n        })\n    });\n  };\n  _updateCheckoutListById = () => {\n    if(this.state.checkout_id){\n        const formdata = {\n            location: this.state.location || null ,\n            sample_id:this.state.sample_id,\n            tracking_id:this.state.tank_id,\n            selected_checklists:this.state.selected_checklists || [],\n            inspector_name:this.state.inspector_name,\n            comment:this.state.comment,\n            test:this.state.test,\n            test_value:this.state.selectedTest_value\n        }\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to update',\n            buttons: [\n                {\n                    label: 'Update',\n                    onClick: () => {\n                        sampleService.updateCheckoutById(this.state.checkout_id,formdata, result => {\n                            if (result) {\n                                this.setState({on_date:result.updated_at})\n                                this._getCheckoutList();\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel update')\n                }\n            ]\n        });\n    } \n  }\n  _deleteCheckout = (id) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete\",\n      buttons: [{ label: \"Delete\", onClick: () => { sampleService.deleteCheckout(id, (result) => { if (result) { this._getCheckoutList(); } }); }, },\n      { label: \"Cancel\", onClick: () => console.log(\"cancel delete\"), },\n      ],\n    });\n  };\n  _handleSearchFilter = (event) => {  this.setState({ isLoading: true });\n  sampleService.searchCheckout(event.target.value, (result) => {\n    if (result) { this.setState({checkoutList: result.data, isLoading: false,  page: 0,     });  }\n  });\n};\n    /*------------------------------ Pagination -----------------------------------*/\n    _handleChangePage = (event, newPage) => { this.setState({ page: newPage }); };\n    _handleChangeRowsPerPage = (event) => { this.setState({ rowsPerPage: parseInt(+event.target.value) }); this.setState({ page: 0 }); };\n  /*----------------------------------- Render ---------------------------*/\n  _renderHeader = () => {\n    return (\n      <GridContainer>\n        <GridItem xs={6} sm={6} md={6}><Button onClick={() => {\n           this._handleReset(); this.setState({ isCreateCheckoutlist: !this.state.isCreateCheckoutlist }); }} \n           color=\"info\" > {this.state.isCreateCheckoutlist ? \" Return \" : \"Create Check List\"} </Button>\n            </GridItem>\n      </GridContainer>\n    );\n  };\n  _getCheckOutServices() {\n    const { classes } = this.props;\n    const data = this.state.checklist.slice(0);\n    const checkout_service_Item = data.map((ele) => (        \n      <GridContainer>\n        {ele.sub_categorys.length ?<GridItem xs={12} sm={12} md={12}><h5 style={{ paddingTop: 15 }}><b>{ele.name}</b></h5></GridItem> :null}\n          <GridItem xs={12} sm={12} md={12}>\n          <List className={classes.root}>\n            {ele.sub_categorys.map((sub_cat) => (\n                <ListItem key={\"value\"} role={undefined} dense button >\n                <ListItemIcon>\n                  <Checkbox\n                          defaultChecked\n                          color=\"default\"\n                          checked={this.state[sub_cat._id]}\n                          onChange={(values) => this._handleCheckListService(sub_cat._id, values)}\n                          inputProps={{ 'aria-label': 'checkbox with default color' }}\n                  />\n                </ListItemIcon>\n                <ListItemText id={\"labelId\"} primary={sub_cat.name} />\n                </ListItem>\n              ))}\n          </List>\n              </GridItem>    \n      </GridContainer>\n    ))\n    return checkout_service_Item;\n  }\n  \n  _renderCheckoutListForm = () => {\n    const { classes } = this.props;\n    const location_value = { name: this.state.defaultLocation };\n    const selectedTestonUpdate= { name: this.state.defaultselectedTest };\n     return (\n          <Card>\n              <CardHeader color=\"primary\">  \n               <h4 className={classes.cardTitleWhite}>{this.state.isEditCheckoutList?  `Check List Details `:\"Create Check List Form\"}  </h4>\n                <p className={classes.cardCategoryWhite}>{this.state.isEditCheckoutList?  ` Update Check List form`:\" Complete Check List form\"}  </p>\n              </CardHeader>\n            <CardBody>\n            <GridContainer>\n            {!this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete  id=\"location-type-selection\"\n                    onChange={(event, newValue) =>  this._handleLocationSelection(newValue) }\n                    options={this.state.locationList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (   <TextField  {...params}  label=\"Location\"  variant=\"outlined\" />   )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>   this._handleLocationSelection(newValue)   }\n                    value={location_value}\n                    options={this.state.locationList}\n                    getOptionLabel={option => option.name}\n                    disablePortal\n                    includeInputInList\n                    autoComplete\n                    renderInput={(params) => ( <TextField   {...params}  label=\"Location\" variant=\"outlined\"  />        )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Inspector Name\"\n                onChange={e => {this.setState({ inspector_name: e.target.value });    }}\n                id=\"inspector_name\"\n                inputProps={{ type: \"text\", value: this.state.inspector_name }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Sample ID\"\n                onChange={e => {this.setState({ sample_id: e.target.value });    }}\n                id=\"sample_id\"\n                inputProps={{ type: \"text\", value: this.state.sample_id }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Tank ID\"\n                onChange={e => {this.setState({ tank_id: e.target.value });  }}\n                id=\"tank_id\"\n                inputProps={{ type: \"text\", value: this.state.tank_id }}\n                formControlProps={{  fullWidth: true,  }}\n            />\n            </GridItem>\n            \n            </GridContainer>\n            {this._getCheckOutServices()}\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={12} >\n              <h5 style={{ paddingTop: 15 }}><b>On-Field Tests </b></h5>\n              </GridItem>\n              <GridItem xs={12} sm={12} md={6}>\n              \n                {!this.state.isTestSelected? <FormControl className={classes.formControl}>\n                  <Autocomplete  id=\"location-type-selection\"\n                    onChange={(event, newValue) =>  this._handleTestSelection(newValue) }\n                    options={this.state.checkoutTestList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (   <TextField  {...params}  label=\"On-Field Tests\"  variant=\"outlined\" />   )}\n                  />\n                </FormControl> :null}\n                {this.state.isTestSelected ? <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>  this._handleTestSelection(newValue) }\n                    value={selectedTestonUpdate}\n                    options={this.state.checkoutTestList}\n                    getOptionLabel={option => option.name}\n                    disablePortal\n                    includeInputInList\n                    autoComplete\n                    renderInput={(params) => ( <TextField   {...params}  label=\"On-Field Tests\" variant=\"outlined\"  />        )}\n                  />\n                </FormControl> :null}\n               \n              </GridItem>\n              \n                {this.state.test_values.length === 1 ?\n                <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Test Value\"\n                onChange={e => {this.setState({ selectedTest_value: e.target.value });  }}\n                id=\"selectedTest_value\"\n                inputProps={{ type: \"text\", value: this.state.selectedTest_value }}\n                formControlProps={{  fullWidth: true,  }}\n            /> </GridItem>:\n            <GridItem xs={12} sm={12} md={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel className={classes.InputLabelGrey} id={\"TestValue-selection\"}>Test Values</InputLabel>\n                                <Select\n                                     labelId={\"TestValue-selection\"} id={\"TestValue-selection\"} name={\"TestValue-selection\"} single\n                                    value={this.state.selectedTest_value}\n                                    onChange={this._handleTestValueSelection}\n                                    input={<Input id=\"select-multiple-chip\" />}\n                                    renderValue={(selected) => (   \n                                        <Chip key={selected} label={selected} className={classes.chip} />  \n                                         )}\n                                    MenuProps={MenuProps}\n                                >\n                                    {this.state.test_values.map((name,index) => (   <MenuItem key={index} value={name} >   {name}  </MenuItem>   ))}\n                                </Select>\n                            </FormControl>\n                </GridItem>\n                }\n            <br/>\n            <GridItem xs={12} sm={12} md={12}>\n            <FormControl className={classes.formControl}>\n            {/* <form className={classes.MultilineTest} noValidate autoComplete=\"off\"> */}\n            <TextField\n                label=\"Comment\"\n                multiline\n                rowsMax={3}\n                value={this.state.comment}\n                onChange={e => {this.setState({ comment: e.target.value });  }}\n              />  \n          {/* </form> */}\n          </FormControl>\n        </GridItem>\n        </GridContainer>\n            {this.state.isEditCheckoutList === true ?<GridContainer>\n              <GridItem xs={12} sm={12} md={6}><p style={{ paddingTop: 15 }}><b>Updated By : </b>{this.state.updated_by}</p></GridItem>\n              <GridItem xs={12} sm={12} md={6}><p style={{ paddingTop: 15 }}><b>Date : </b>{moment(this.state.on_date).format(\"MMM DD, YYYY\")}</p></GridItem>\n            </GridContainer>:null}\n            </CardBody>\n\n            <CardFooter>\n              <Button onClick={this._handleReset} color=\"danger\">Reset</Button>\n              {!this.state.isEditCheckoutList  ? (<Button onClick={this._onCreateCheckout} color=\"success\"> Create Check List </Button>) : null}\n              {this.state.isEditCheckoutList ? (<Button onClick={this._updateCheckoutListById} color=\"success\"> Update Check List </Button>) : null}\n            </CardFooter>\n          </Card>\n      )\n  }\n  _renderCheckoutListTable=()=>{\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\"> <h4 className={classes.cardTitleWhite}> Check List </h4> </CardHeader>\n            <CardBody>\n              <GridItem xs={12} sm={12} md={4}>\n                <CustomInput labelText={\"Search\"} id={\"search\"} onChange={this._handleSearchFilter} inputProps={{ type: \"text\" }}  formControlProps={{ fullWidth: true,  }} />\n              </GridItem>\n              {this.state.isLoading ? (\n                <GridItem xs={12} sm={12} md={4}>  <Loader type=\"ThreeDots\" color=\"#a5d1e6\"  height={50}  width={50}/>  </GridItem>\n              ) : (\n                  <div className={classes.tableResponsive}>\n                     <Table className={classes.table}>\n                        <TableHead className={classes.info}>\n                          <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"location\"}   >  Location Name  </TableCell>\n                          \n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"update_by\"}   >  Updated By  </TableCell>\n                          \n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"date_in\"}   >  Date </TableCell>\n                          \n                          <TableCell  className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"inspector_name\"} > Inspector Name</TableCell>\n                          <TableCell  className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"tank_id\"} >Tank Id</TableCell>\n                            <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"sampile_id\"} > Sample Id </TableCell>\n                            <TableCell  className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"option\"} > Options </TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {this.state.checkoutList.length ? ( this.state.checkoutList\n                          .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage +this.state.rowsPerPage )\n                              .map((value, key) => (\n                                <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                                  <TableCell   className={classes.tableCell} key={\"location\" + key} >{value.location_name} </TableCell>\n                                  \n                                  <TableCell   className={classes.tableCell} key={\"update_by\" + key} >{value.updated_by_fname +\" \"+ value.updated_by_surname} </TableCell>\n                                  \n                                  <TableCell   className={classes.tableCell} key={\"date_in\" + key} > {moment(value.updated_at).format(\"MMM DD, YYYY\",)} </TableCell>\n                                  <TableCell className={classes.tableCell}key={\"inspector_name\" + key} > {value.inspector_name || null} </TableCell>\n                                  <TableCell className={classes.tableCell}key={\"tank_id\" + key} > {value.tank_id} </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"sampile_id\" + key} >  {value.sample_id} </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"option\" + key}>\n                                    <DeleteForeverIcon onClick={() => this._deleteCheckout(value._id)} style={{ color: red[500] }} />\n                                    <BorderColorIcon onClick={() => this._getCheckoutbyID(value._id)}/>\n                                  </TableCell>\n                                </TableRow>\n                              ))\n                          ) : (\n                              <TableRow>No records available</TableRow>\n                            )}\n                        </TableBody>\n                      </Table>\n                    <TablePagination component=\"div\" count={this.state.checkoutList.length} rowsPerPage={this.state.rowsPerPage} page={this.state.page} onChangePage={this._handleChangePage} onChangeRowsPerPage={this._handleChangeRowsPerPage} />\n                  </div>\n                )}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n\n  }\nrender() {\n    return (\n      <div>\n        {this._renderHeader()}\n        {this.state.isCreateCheckoutlist ? this._renderCheckoutListForm() : null}\n        {this._renderCheckoutListTable()}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(CheckoutListViewPage);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CustomInput,{ CustomMultiEmailInput, } from \"components/CustomInput/CustomInput\";\nimport { userService,sampleService} from \"services/api.services\";\nimport Autocomplete from 'components/Autocomplete/Autocomplete';\nimport { FormControl,TextField,Chip } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Loader from \"react-loader-spinner\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { red } from \"@material-ui/core/colors\";\nimport moment from \"moment\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport auth from \"services/auth\"\nconst useStyles = () => (styles)\nconst date = new Date().toLocaleString();\nconst emailRegex = /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g\n\nclass Environmental_lab_reports extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      role:auth.authRole(),\n      Env_labreportList:[],isLoading:true,\n        isCreateSIF:false,locationList:[],location:'',lab_id:'',coc_number:'',project_no:'',reportDate:moment(date).format('YYYY-MM-DD'),\n        //multiple Email\n        emailCollection: [], value: \"\", emailError: null,\n        file_name:'',record_id:'',onEditLabRecord:false,reportPDF:null,defaultLocation:'',isLocation:false,po_number:'',report_path:'',\n        // Pagination\n        page: 0, rowsPerPage: 10,\n     \n    }\n  }\n  componentDidMount = () => {\n    userService.getAllLocation((locationList) => { if (locationList && locationList.data && locationList.data.length) this.setState({ locationList: locationList.data || [], }); });\n    this._onLoad()\n  }\n\n  _onLoad = () => {\n    // this.state.role=auth.authRole()\n    this._getAllEnv_labreport()\n  }\n\n  /***********************************Handle********************************************** */\n  _handleReset=()=>{\n      this.setState({location:'',lab_id:'',coc_number:'',project_no:'',reportDate:moment(date).format('YYYY-MM-DD'),\n    //multiple Email\n    emailCollection: [], value: \"\", emailError: null, file_name:'',record_id:'',onEditLabRecord:false,reportPDF:null,defaultLocation:'',isLocation:true,po_number:'',report_path:''})\n  }\n  _handleLocationSelection=(location)=>{\n    if(location){ \n      var tempEmail = [];\n      if (location.email && location.email.length > 0) {\n        location.email.map((email) => {\n          if (\n            email !== undefined && email !== \"undefined\" && email !== null &&\n            email !== \"\"\n          ) {\n            return tempEmail.push(email);\n          }\n          return false;\n        });\n      }\n      if (\n        location.primaryemail !== undefined && location.primaryemail !== \"undefined\" && location.primaryemail !== null && location.primaryemail !== \"\"\n      ) {\n        tempEmail.push(location.primaryemail);\n      }\n    this.setState({location:location.id,emailCollection: tempEmail || [],defaultLocation:location.name})\n    }\n  }\n  _handleReportDate = (event) => {\n    this.setState({ reportDate: event.target.value });\n  };\n  /*------------------------------ Pagination -----------------------------------*/\n  _handleChangePage = (event, newPage) => { this.setState({ page: newPage }); };\n  _handleChangeRowsPerPage = (event) => { this.setState({ rowsPerPage: parseInt(+event.target.value) }); this.setState({ page: 0 }); };\n /*----------------- Multiple email entry handle ------------------*/\n handleKeyDown = (evt) => {\n    if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n      evt.preventDefault();\n      var value = this.state.value.trim();\n      if (value && this._handleEmailIsValid(value)) {\n        this.setState({\n          emailCollection: [...this.state.emailCollection, this.state.value], value: \"\",\n        });\n      }\n    }\n  };\n  _handleEmailAddChange = (evt) => {\n    this.setState({\n      value: evt.target.value,\n      emailError: null,\n    });\n  };\n  _handleEmailRemoveChange = (item) => {\n    this.setState({\n      emailCollection: this.state.emailCollection.filter((i) => i !== item),\n    });\n  };\n  _handleEmailPasteChange = (evt) => {\n    evt.preventDefault();\n    var paste = evt.clipboardData.getData(\"text\");\n    var emails = paste.match(emailRegex);\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !this._handleEmailIsInList(email));\n      this.setState({ emailCollection: [...this.state.emailCollection, ...toBeAdded], });\n    }\n  };\n  _handleEmailIsValid(email) {\n    let emailError = null;\n    if (this._handleEmailIsInList(email)) { emailError = `${email} has already been added.`; }\n    if (!this._handleEmailIsIsEmail(email)) { emailError = `${email} is not a valid email address.`; }\n    if (emailError) { this.setState({ emailError }); return false; }\n    return true;\n  }\n  _handleEmailIsInList(email) {\n    return this.state.emailCollection.includes(email);\n  }\n  _handleEmailIsIsEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n  _uploadPDF=(event)=>{\n    this.dofileUpload.click()\n    \n  }\n  handleFile=(event)=>{\n    event.preventDefault();\n    this.setState({reportPDF:event.target.files[0],file_name:event.target.files[0].name,report_path:''})\n    event.target.value = null\n    }\n  \n  /**********************************Api integration******************************************** */\n  _getAllEnv_labreport=()=>{\n    // this.setState({isLoading:true})\n    sampleService.getAllEnv_labreport(result => { if (result) { \n     this.setState({ Env_labreportList: result.data})\n     this.setState({ isLoading: false })\n      }\n    })\n   }\n  createEnv_labreport=()=>{\n    let formdata = {\n    reportPDF:this.state.reportPDF,\n    location:this.state.location ||null,\n    lab_id:this.state.lab_id,\n    emailCollection:this.state.emailCollection,\n    project_no:this.state.project_no,\n    coc_number:this.state.coc_number,\n    reportDate:this.state.reportDate,\n    po:this.state.po_number\n  }\n    if(this.state){\n      sampleService.createEnv_labreport(formdata, (result) => {\n        if(result){\n          // console.log(result)\n          this.setState({onEditLabRecord:true,record_id:result._id,report_path:result.report_path,file_name:''})\n          // this._handleReset();\n          this._getAllEnv_labreport();\n        }\n      });\n    }\n  }\n  _getEnv_labreportById = (id) => {\n    this._handleReset();\n    sampleService.getEnv_labreportById(id, (result) => {\n      if (result) {\n        console.log(result)\n        this.state.locationList.map((ele)=>{\n          if(result.location_name === ele.name && result.location === ele.id){\n              var tempEmail = [];\n              if (ele.email && ele.email.length > 0) {\n                ele.email.map((email) => {\n                  if (\n                    email !== undefined && email !== \"undefined\" && email !== null &&\n                    email !== \"\"\n                  ) {\n                    return tempEmail.push(email);\n                  }\n                  return false;\n                });\n              }\n              if (\n                ele.primaryemail !== undefined && ele.primaryemail !== \"undefined\" && ele.primaryemail !== null && ele.primaryemail !== \"\"\n              ) {\n                tempEmail.push(ele.primaryemail);\n              }\n            this.setState({location:ele.id,emailCollection: tempEmail || [],isLocation:true})\n          }\n          return false\n        })\n        this.setState({\n          onEditLabRecord:true,\n          isCreateSIF:true,\n          lab_id:result.labid,\n          defaultLocation:result.location_name,\n          coc_number:result.coc || '',\n          project_no:result.project_number ||'',\n          reportDate:result.reported_at === null? moment(date).format('YYYY-MM-DD'):moment(result.reported_at).format(\"YYYY-MM-DD\"),\n          record_id:result._id,\n          po_number:result.po|| '',\n          report_path:result.report_path || ''\n        });\n      }\n    });\n  };\n  _updateEnv_labreport = () => {\n    let formdata = {\n      reportPDF:this.state.reportPDF,\n      location:this.state.location ||null,\n      lab_id:this.state.lab_id,\n      emailCollection:this.state.emailCollection,\n      project_no:this.state.project_no,\n      coc_number:this.state.coc_number,\n      reportDate:this.state.reportDate,\n      po:this.state.po_number\n    }\n    if(this.state){\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to update',\n            buttons: [\n                {\n                    label: 'Update',\n                    onClick: () => {\n                        sampleService.updateEnv_labreport(this.state.record_id,formdata, result => {\n                            if (result) {\n                                this._getAllEnv_labreport();\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel update')\n                }\n            ]\n        });\n    } \n  }\n  _deleteEnv_labreport = (id) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete\",\n      buttons: [{ label: \"Delete\", onClick: () => { sampleService.deleteEnv_labreport(id, (result) => { if (result) { this._getAllEnv_labreport(); } }); }, },\n      { label: \"Cancel\", onClick: () => console.log(\"cancel delete\"), },\n      ],\n    });\n  };\n  getpdf = (report_path) => {\n    sampleService.downloadReportpdf(report_path, (result) => { });\n  };\n  _handleSearchFilter = (event) => {  this.setState({ isLoading: true });\n  sampleService.searchEnvLabReport(event.target.value, (result) => {\n    if (result) { this.setState({Env_labreportList: result.data, isLoading: false,  page: 0,     });  }\n  });\n};\n_sendMail = () => {\n  confirmAlert({\n    title: \"Send\",\n    message: \"Are you sure you want to send this report\",\n    buttons: [\n      {\n        label: \"Send\",\n        onClick: () => {\n          sampleService.sendMailtoClient(this.state.lab_id, (result) => { });\n        },\n      },\n      {\n        label: \"Cancel\",\n        onClick: () => console.log(\"cancel send report\"),\n      },\n    ],\n  });\n};\n  /*******************************Render****************************************** */\n  _renderHeader = () => {\n    return (\n      <GridContainer>\n         <GridItem xs={6} sm={6} md={6}><Button onClick={() => {\n           this._handleReset(); this.setState({ isCreateSIF: !this.state.isCreateSIF }); }} \n           color=\"info\" > {this.state.isCreateSIF ? \" Return \" : \"Create SIF\"} </Button>\n            </GridItem> \n      </GridContainer>\n    );\n  };\n  _renderForm = () => {\n    const { classes } = this.props;\n    const location_value = { name: this.state.defaultLocation };\n     return (\n          <Card>\n              <CardHeader color=\"primary\">  \n              <h4 className={classes.cardTitleWhite}>{this.state.onEditLabRecord===true ?  `Edit FOI Lab Environmental of ${this.state.lab_id}`:`FOI Lab Environmental Form`}</h4>\n              <p className={classes.cardCategoryWhite}> Complete FOI Lab Environmental Form  </p>\n              </CardHeader>\n            <CardBody>\n            <GridContainer>\n            {!this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete  id=\"location-type-selection\"\n                    onChange={(event, newValue) =>  this._handleLocationSelection(newValue) }\n                    options={this.state.locationList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (   <TextField  {...params}  label=\"Location\"  variant=\"outlined\" />   )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>   this._handleLocationSelection(newValue)   }\n                    value={location_value}\n                    options={this.state.locationList}\n                    getOptionLabel={option => option.name}\n                    disablePortal\n                    includeInputInList\n                    autoComplete\n                    renderInput={(params) => ( <TextField   {...params}  label=\"Location\" variant=\"outlined\"  />        )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Lab ID\"\n                onChange={e => {this.setState({ lab_id: e.target.value });    }}\n                id=\"lab_id\"\n                inputProps={{ type: \"text\", value: this.state.lab_id }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"C O C Number\"\n                onChange={e => {this.setState({ coc_number: e.target.value });    }}\n                id=\"coc_number\"\n                inputProps={{ type: \"text\", value: this.state.coc_number }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Project Number\"\n                onChange={e => {this.setState({ project_no: e.target.value });    }}\n                id=\"project_no\"\n                inputProps={{ type: \"text\", value: this.state.project_no }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"PO Number\"\n                onChange={e => {this.setState({ po_number: e.target.value });    }}\n                id=\"po_number\"\n                inputProps={{ type: \"text\", value: this.state.po_number }}\n                formControlProps={{   fullWidth: true,   }}\n                /> \n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText={\"Report Date\"}\n                id=\"Reportdate\"\n                onChange={this._handleReportDate}\n                labelProps={{ shrink: true }}\n                inputProps={{ type: \"date\", value: this.state.reportDate }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n           \n            <GridItem xs={12} sm={12} md={6}>\n                            <CustomMultiEmailInput\n                                id=\"email\"\n                              disabled={true}\n                              inputProps={{ type: \"text\", value: this.state.value }}\n                              labelText=\"Additional Email\"\n                              onKeyDown={this.handleKeyDown}\n                              onChange={this._handleEmailAddChange}\n                              onPaste={this._handleEmailPasteChange}\n                              formControlProps={{    fullWidth: true,  }}\n                            />\n                             {this.state.emailError !== null ? <span style={{color:'red'}}>{this.state.emailError}</span> :null}\n                            {this.state.emailCollection.map((item, key) => (<div className={classes.chips} key={item}>   <Chip onClick={() => this._handleEmailRemoveChange(item)} key={key} label={item + \"  X\"} className={classes.chip} /></div>))}\n                          </GridItem>   \n              </GridContainer>\n              \n            </CardBody>\n            <CardFooter>\n              <div className={classes.FileNameAlignment}>\n              {this.state.report_path !== \"\"? <Button className={classes.SIFbutton} onClick={() => this.getpdf(this.state.report_path)} color=\"info\" > <PictureAsPdfIcon  /> </Button>  :null}\n              <Button className={classes.SIFbutton} onClick={this._uploadPDF} color=\"info\" >  Upload PDF </Button> \n             <span style={{paddingLeft:'10px'}}>{this.state.file_name}</span>\n              </div>\n          <input type=\"file\" className={classes.hidden}\n            multiple={false}\n            accept=\".pdf\"\n            onChange={event => this.handleFile(event)}\n            ref={e=>this.dofileUpload = e}\n          />\n            <div className={classes.CardFooterAlignment} >\n            <Button className={classes.SIFbutton} onClick={this._handleReset} color=\"danger\"> Reset </Button>\n            {this.state.onEditLabRecord===true ?   <Button className={classes.SIFbutton} onClick={this._sendMail} color=\"success\"> Submit to Client </Button> :null}\n            {this.state.onEditLabRecord===false ?<Button className={classes.SIFbutton} onClick={this.createEnv_labreport} color=\"success\"> Create  </Button> :null}\n              {this.state.onEditLabRecord===true ? <Button className={classes.SIFbutton} onClick={this._updateEnv_labreport} color=\"warning\"> Update </Button>:null}\n             </div>\n            </CardFooter>\n          </Card>\n      )\n  }\n  _renderTable=()=>{\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\"> <h4 className={classes.cardTitleWhite}>FOI Lab Environmental List </h4> </CardHeader>\n            <CardBody>\n              <GridItem xs={12} sm={12} md={4}>\n                <CustomInput labelText={\"Search\"} id={\"search\"} onChange={this._handleSearchFilter} inputProps={{ type: \"text\" }}  formControlProps={{ fullWidth: true,  }} />\n              </GridItem>\n              {this.state.isLoading ? (\n                <GridItem xs={12} sm={12} md={4}>  <Loader type=\"ThreeDots\" color=\"#a5d1e6\"  height={50}  width={50}/>  </GridItem>\n              ) : (\n                  <div className={classes.tableResponsive}>\n                     <Table className={classes.table}>\n                        <TableHead className={classes.info}>\n                          <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"pdf\"} > PDF  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"location\"}   >  Location  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"Lab_id\"}   >  Lab ID  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"coc\"}   >  COC Number  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"po\"}   > PO Number  </TableCell>\n                        <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"report_date\"}   >  Reported Date  </TableCell>\n                          \n        {this.state.role !== 'customer' ?  <TableCell  className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"option\"} > Options </TableCell>\n                        :null}    </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {this.state.Env_labreportList.length ? ( this.state.Env_labreportList\n                          .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage +this.state.rowsPerPage )\n                              .map((value, key) => (\n                                <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                                  <TableCell  className={classes.tableCell} key={key}> <PictureAsPdfIcon  onClick={() => this.getpdf(value.report_path)} /> </TableCell>\n                                  <TableCell   className={classes.tableCell} key={\"location\" + key} >{value.location_name} </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"Lab_id\" + key }   >  {value.labid}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"coc\" + key }   >  {value.coc || null}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"po\" + key }   >  {value.po || null}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"report_date\" + key }   > {value.reported_at === null ? null :moment(value.reported_at).format(\"MMM DD, YYYY\") }</TableCell>\n                                  {this.state.role !== 'customer' ?   <TableCell className={classes.tableCell} key={\"option\" + key}>\n                                    <DeleteForeverIcon onClick={() => this._deleteEnv_labreport(value._id)} style={{ color: red[500] }} />\n                                    <BorderColorIcon onClick={() => this._getEnv_labreportById(value._id)}/>\n                                  </TableCell> :null}\n                               \n                                </TableRow>\n                              ))\n                          ) : (\n                              <TableRow>No records available</TableRow>\n                            )}\n                        </TableBody>\n                      </Table>\n                    <TablePagination component=\"div\" count={this.state.Env_labreportList.length} rowsPerPage={this.state.rowsPerPage} page={this.state.page} onChangePage={this._handleChangePage} onChangeRowsPerPage={this._handleChangeRowsPerPage} />\n                  </div>\n                )}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    )\n  }\nrender() {\n    return (\n      <div>\n         {this.state.role !== 'customer' ?this._renderHeader() :null}\n        {this.state.isCreateSIF ? this._renderForm() : null}\n        {this._renderTable()}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Environmental_lab_reports);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Loader from \"react-loader-spinner\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\nimport { red } from \"@material-ui/core/colors\";\nimport moment from \"moment\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport CustomInput,{ CustomMultiEmailInput, } from \"components/CustomInput/CustomInput\";\nimport { userService,sampleService} from \"services/api.services\";\nimport Autocomplete from 'components/Autocomplete/Autocomplete';\nimport { FormControl,TextField,Chip } from \"@material-ui/core\";\n\nimport auth from \"services/auth\"\n\nconst useStyles = () => (styles)\nconst date = new Date().toLocaleString();\nexport const SECTION_NAME = `GC-FTIR-OIL`\n\nclass GC_FTIR_OIL_Report extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      role:auth.authRole(),\n      Env_labreportList:[],isLoading:true,\n        isCreateSIF:false,locationList:[],location:'',lab_id:'',sample_id:'',wo:'',reportDate:moment(date).format('YYYY-MM-DD'),\n        //multiple Email\n        emailCollection: [], value: \"\", emailError: null,\n        file_name:'',record_id:'',onEditLabRecord:false,reportPDF:null,defaultLocation:'',isLocation:false,po_number:'',report_path:'',\n        // Pagination\n        page: 0, rowsPerPage: 10,\n     \n    }\n  }\n  componentDidMount = () => {\n    userService.getAllLocation((locationList) => { if (locationList && locationList.data && locationList.data.length) this.setState({ locationList: locationList.data || [], }); });\n    this._onLoad()\n  }\n\n  _onLoad = () => {\n    // this.state.role=auth.authRole()\n    this._getAllEnv_labreport()\n  }\n\n  /***********************************Handle********************************************** */\n  _handleReset=()=>{\n      this.setState({location:'',lab_id:'',sample_id:'',wo:'',reportDate:moment(date).format('YYYY-MM-DD'),\n    //multiple Email\n    emailCollection: [], value: \"\", emailError: null, file_name:'',record_id:'',onEditLabRecord:false,reportPDF:null,defaultLocation:'',isLocation:true,po_number:'',report_path:''})\n  }\n  _handleLocationSelection=(location)=>{\n    if(location){ \n      var tempEmail = [];\n      if (location.email && location.email.length > 0) {\n        location.email.map((email) => {\n          if (\n            email !== undefined && email !== \"undefined\" && email !== null &&\n            email !== \"\"\n          ) {\n            return tempEmail.push(email);\n          }\n          return false;\n        });\n      }\n      if (\n        location.primaryemail !== undefined && location.primaryemail !== \"undefined\" && location.primaryemail !== null && location.primaryemail !== \"\"\n      ) {\n        tempEmail.push(location.primaryemail);\n      }\n    this.setState({location:location.id,emailCollection: tempEmail || [],defaultLocation:location.name})\n    }\n  }\n  _handleReportDate = (event) => {\n    this.setState({ reportDate: event.target.value });\n  };\n  /*------------------------------ Pagination -----------------------------------*/\n  _handleChangePage = (event, newPage) => { this.setState({ page: newPage }); };\n  _handleChangeRowsPerPage = (event) => { this.setState({ rowsPerPage: parseInt(+event.target.value) }); this.setState({ page: 0 }); };\n /*----------------- Multiple email entry handle ------------------*/\n handleKeyDown = (evt) => {\n    if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n      evt.preventDefault();\n      var value = this.state.value.trim();\n      if (value && this._handleEmailIsValid(value)) {\n        this.setState({\n          emailCollection: [...this.state.emailCollection, this.state.value], value: \"\",\n        });\n      }\n    }\n  };\n  _handleEmailAddChange = (evt) => {\n    this.setState({\n      value: evt.target.value,\n      emailError: null,\n    });\n  };\n  _handleEmailRemoveChange = (item) => {\n    this.setState({\n      emailCollection: this.state.emailCollection.filter((i) => i !== item),\n    });\n  };\n  _handleEmailPasteChange = (evt) => {\n    evt.preventDefault();\n    var paste = evt.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !this._handleEmailIsInList(email));\n      this.setState({ emailCollection: [...this.state.emailCollection, ...toBeAdded], });\n    }\n  };\n  _handleEmailIsValid(email) {\n    let emailError = null;\n    if (this._handleEmailIsInList(email)) { emailError = `${email} has already been added.`; }\n    if (!this._handleEmailIsIsEmail(email)) { emailError = `${email} is not a valid email address.`; }\n    if (emailError) { this.setState({ emailError }); return false; }\n    return true;\n  }\n  _handleEmailIsInList(email) {\n    return this.state.emailCollection.includes(email);\n  }\n  _handleEmailIsIsEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n  _uploadPDF=(event)=>{\n    this.dofileUpload.click()\n    \n  }\n  handleFile=(event)=>{\n    event.preventDefault();\n    this.setState({reportPDF:event.target.files[0],file_name:event.target.files[0].name,report_path:''})\n    event.target.value = null\n    }\n  \n  /**********************************Api integration******************************************** */\n  _getAllEnv_labreport=()=>{\n    // this.setState({isLoading:true})\n    sampleService.GC_FTIR_OIL_Report_GetAll(result => { if (result) { \n     this.setState({ Env_labreportList: result.data})\n     this.setState({ isLoading: false })\n      }\n    })\n   }\n  GC_FTIR_OIL_Report_Create=()=>{\n    let formdata = {\n    reportPDF:this.state.reportPDF,\n    location:this.state.location ||null,\n    lab_id:this.state.lab_id,\n    emailCollection:this.state.emailCollection,\n    wo:this.state.wo,\n    sample_id:this.state.sample_id,\n    reportDate:this.state.reportDate,\n    po:this.state.po_number\n  }\n    if(this.state){\n      sampleService.GC_FTIR_OIL_Report_Create(formdata, (result) => {\n        if(result){\n          // console.log(result)\n          this.setState({onEditLabRecord:true,record_id:result._id,report_path:result.report_path,file_name:''})\n          // this._handleReset();\n          this._getAllEnv_labreport();\n        }\n      });\n    }\n  }\n  _getEnv_labreportById = (id) => {\n    this._handleReset();\n    sampleService.GC_FTIR_OIL_Report_GetByID(id, (result) => {\n      if (result) {\n        console.log(result)\n        this.state.locationList.map((ele)=>{\n          if(result.location_name === ele.name && result.location === ele.id){\n              var tempEmail = [];\n              if (ele.email && ele.email.length > 0) {\n                ele.email.map((email) => {\n                  if (\n                    email !== undefined && email !== \"undefined\" && email !== null &&\n                    email !== \"\"\n                  ) {\n                    return tempEmail.push(email);\n                  }\n                  return false;\n                });\n              }\n              if (\n                ele.primaryemail !== undefined && ele.primaryemail !== \"undefined\" && ele.primaryemail !== null && ele.primaryemail !== \"\"\n              ) {\n                tempEmail.push(ele.primaryemail);\n              }\n            this.setState({location:ele.id,emailCollection: tempEmail || [],isLocation:true})\n          }\n          return false\n        })\n        this.setState({\n          onEditLabRecord:true,\n          isCreateSIF:true,\n          lab_id:result.labid,\n          defaultLocation:result.location_name,\n          sample_id:result.sample_id || '',\n          wo:result.wo ||'',\n          reportDate:result.reported_at === null? moment(date).format('YYYY-MM-DD'):moment(result.reported_at).format(\"YYYY-MM-DD\"),\n          record_id:result._id,\n          po_number:result.po|| '',\n          report_path:result.report_path || ''\n        });\n      }\n    });\n  };\n  _updateEnv_labreport = () => {\n    let formdata = {\n      reportPDF:this.state.reportPDF,\n      location:this.state.location ||null,\n      lab_id:this.state.lab_id,\n      emailCollection:this.state.emailCollection,\n      wo:this.state.wo,\n      sample_id:this.state.sample_id,\n      reportDate:this.state.reportDate,\n      po:this.state.po_number\n    }\n    if(this.state){\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to update',\n            buttons: [\n                {\n                    label: 'Update',\n                    onClick: () => {\n                        sampleService.GC_FTIR_OIL_Report_Update(this.state.record_id,formdata, result => {\n                            if (result) {\n                                this._getAllEnv_labreport();\n                            }\n                        })\n                    }\n                },\n                {\n                    label: 'Cancel',\n                    onClick: () => console.log('cancel update')\n                }\n            ]\n        });\n    } \n  }\n  _deleteEnv_labreport = (id) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete\",\n      buttons: [{ label: \"Delete\", onClick: () => { sampleService.GC_FTIR_OIL_Report_Delete(id, (result) => { if (result) { this._getAllEnv_labreport(); } }); }, },\n      { label: \"Cancel\", onClick: () => console.log(\"cancel delete\"), },\n      ],\n    });\n  };\n  getpdf = (report_path) => {\n    sampleService.GC_FTIR_OIL_Report_Download_PDF(report_path, (result) => { });\n  };\n  _handleSearchFilter = (event) => {  this.setState({ isLoading: true });\n  sampleService.GC_FTIR_OIL_Report_Search(event.target.value, (result) => {\n    if (result) { this.setState({Env_labreportList: result.data, isLoading: false,  page: 0,     });  }\n  });\n};\n_sendMail = () => {\n  confirmAlert({\n    title: \"Send\",\n    message: \"Are you sure you want to send this report\",\n    buttons: [\n      {\n        label: \"Send\",\n        onClick: () => {\n          sampleService.GC_FTIR_OIL_Report_MailClient(this.state.lab_id, (result) => { });\n        },\n      },\n      {\n        label: \"Cancel\",\n        onClick: () => console.log(\"cancel send report\"),\n      },\n    ],\n  });\n};\n  /*******************************Render****************************************** */\n  _renderHeader = () => {\n    return (\n      <GridContainer>\n         <GridItem xs={6} sm={6} md={6}><Button onClick={() => {\n           this._handleReset(); this.setState({ isCreateSIF: !this.state.isCreateSIF }); }} \n           color=\"info\" > {this.state.isCreateSIF ? \" Return \" : \"Create SIF\"} </Button>\n            </GridItem> \n      </GridContainer>\n    );\n  };\n  _renderForm = () => {\n    const { classes } = this.props;\n    const location_value = { name: this.state.defaultLocation };\n     return (\n          <Card>\n              <CardHeader color=\"primary\">  \n              <h4 className={classes.cardTitleWhite}>{this.state.onEditLabRecord===true ?  `Edit ${SECTION_NAME} Report of ${this.state.lab_id}`:`${SECTION_NAME} Report Form`}</h4>\n              <p className={classes.cardCategoryWhite}> Complete {SECTION_NAME} Form  </p>\n              </CardHeader>\n            <CardBody>\n            <GridContainer>\n            {!this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete  id=\"location-type-selection\"\n                    onChange={(event, newValue) =>  this._handleLocationSelection(newValue) }\n                    options={this.state.locationList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ backgroundColor: \"white\" }}\n                    autoComplete\n                    includeInputInList\n                    renderInput={(params) => (   <TextField  {...params}  label=\"Location\"  variant=\"outlined\" />   )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n            {this.state.isLocation ? (\n              <GridItem xs={12} sm={12} md={12}>\n                <FormControl className={classes.formControl}>\n                  <Autocomplete\n                    id=\"location-type-selection\"\n                    onChange={(event, newValue) =>   this._handleLocationSelection(newValue)   }\n                    value={location_value}\n                    options={this.state.locationList}\n                    getOptionLabel={option => option.name}\n                    disablePortal\n                    includeInputInList\n                    autoComplete\n                    renderInput={(params) => ( <TextField   {...params}  label=\"Location\" variant=\"outlined\"  />        )}\n                  />\n                </FormControl>\n              </GridItem>\n            ) : null}\n              <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Lab ID\"\n                onChange={e => {this.setState({ lab_id: e.target.value });    }}\n                id=\"lab_id\"\n                inputProps={{ type: \"text\", value: this.state.lab_id }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Sample ID\"\n                onChange={e => {this.setState({ sample_id: e.target.value });    }}\n                id=\"sample_id\"\n                inputProps={{ type: \"text\", value: this.state.sample_id }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"Work Order ID\"\n                onChange={e => {this.setState({ wo: e.target.value });    }}\n                id=\"wo\"\n                inputProps={{ type: \"text\", value: this.state.wo }}\n                formControlProps={{   fullWidth: true,   }}\n                />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n                <CustomInput\n                labelText=\"PO Number\"\n                onChange={e => {this.setState({ po_number: e.target.value });    }}\n                id=\"po_number\"\n                inputProps={{ type: \"text\", value: this.state.po_number }}\n                formControlProps={{   fullWidth: true,   }}\n                /> \n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                labelText={\"Report Date\"}\n                id=\"Reportdate\"\n                onChange={this._handleReportDate}\n                labelProps={{ shrink: true }}\n                inputProps={{ type: \"date\", value: this.state.reportDate }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n           \n            <GridItem xs={12} sm={12} md={6}>\n                            <CustomMultiEmailInput\n                                id=\"email\"\n                              disabled={true}\n                              inputProps={{ type: \"text\", value: this.state.value }}\n                              labelText=\"Additional Email\"\n                              onKeyDown={this.handleKeyDown}\n                              onChange={this._handleEmailAddChange}\n                              onPaste={this._handleEmailPasteChange}\n                              formControlProps={{    fullWidth: true,  }}\n                            />\n                             {this.state.emailError !== null ? <span style={{color:'red'}}>{this.state.emailError}</span> :null}\n                            {this.state.emailCollection.map((item, key) => (<div className={classes.chips} key={item}>   <Chip onClick={() => this._handleEmailRemoveChange(item)} key={key} label={item + \"  X\"} className={classes.chip} /></div>))}\n                          </GridItem>   \n              </GridContainer>\n              \n            </CardBody>\n            <CardFooter>\n              <div className={classes.FileNameAlignment}>\n              {this.state.report_path !== \"\"? <Button className={classes.SIFbutton} onClick={() => this.getpdf(this.state.report_path)} color=\"info\" > <PictureAsPdfIcon  /> </Button>  :null}\n              <Button className={classes.SIFbutton} onClick={this._uploadPDF} color=\"info\" >  Upload PDF </Button> \n             <span style={{paddingLeft:'10px'}}>{this.state.file_name}</span>\n              </div>\n          <input type=\"file\" className={classes.hidden}\n            multiple={false}\n            accept=\".pdf\"\n            onChange={event => this.handleFile(event)}\n            ref={e=>this.dofileUpload = e}\n          />\n            <div className={classes.CardFooterAlignment} >\n            <Button className={classes.SIFbutton} onClick={this._handleReset} color=\"danger\"> Reset </Button>\n            {this.state.onEditLabRecord===true ?   <Button className={classes.SIFbutton} onClick={this._sendMail} color=\"success\"> Submit to Client </Button> :null}\n            {this.state.onEditLabRecord===false ?<Button className={classes.SIFbutton} onClick={this.GC_FTIR_OIL_Report_Create} color=\"success\"> Create  </Button> :null}\n              {this.state.onEditLabRecord===true ? <Button className={classes.SIFbutton} onClick={this._updateEnv_labreport} color=\"warning\"> Update </Button>:null}\n             </div>\n            </CardFooter>\n          </Card>\n      )\n  }\n  _renderTable=()=>{\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\"> <h4 className={classes.cardTitleWhite}>{SECTION_NAME} List </h4> </CardHeader>\n            <CardBody>\n              <GridItem xs={12} sm={12} md={4}>\n                <CustomInput labelText={\"Search\"} id={\"search\"} onChange={this._handleSearchFilter} inputProps={{ type: \"text\" }}  formControlProps={{ fullWidth: true,  }} />\n              </GridItem>\n              {this.state.isLoading ? (\n                <GridItem xs={12} sm={12} md={4}>  <Loader type=\"ThreeDots\" color=\"#a5d1e6\"  height={50}  width={50}/>  </GridItem>\n              ) : (\n                  <div className={classes.tableResponsive}>\n                     <Table className={classes.table}>\n                        <TableHead className={classes.info}>\n                          <TableRow className={classes.tableHeadRow}>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"pdf\"} > PDF  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"location\"}   >  Location  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"Lab_id\"}   >  Lab ID  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"sample_id\"}   >  Sample ID  </TableCell>\n                          <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"po\"}   > PO Number  </TableCell>\n                        <TableCell className={ classes.tableCell + \" \" + classes.tableHeadCell} key={\"report_date\"}   >  Reported Date  </TableCell>\n                          \n        {this.state.role !== 'customer' ?  <TableCell  className={ classes.tableCell + \" \" + classes.tableHeadCell } key={\"option\"} > Options </TableCell>\n                        :null}    </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {this.state.Env_labreportList.length ? ( this.state.Env_labreportList\n                          .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage +this.state.rowsPerPage )\n                              .map((value, key) => (\n                                <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                                  <TableCell  className={classes.tableCell} key={key}> <PictureAsPdfIcon  onClick={() => this.getpdf(value.report_path)} /> </TableCell>\n                                  <TableCell   className={classes.tableCell} key={\"location\" + key} >{value.location_name} </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"Lab_id\" + key }   >  {value.labid}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"sample_id\" + key }   >  {value.sample_id || null}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"po\" + key }   >  {value.po || null}  </TableCell>\n                                  <TableCell className={classes.tableCell} key={\"report_date\" + key }   > {value.reported_at === null ? null :moment(value.reported_at).format(\"MMM DD, YYYY\") }</TableCell>\n                                  {this.state.role !== 'customer' ?   <TableCell className={classes.tableCell} key={\"option\" + key}>\n                                    <DeleteForeverIcon onClick={() => this._deleteEnv_labreport(value._id)} style={{ color: red[500] }} />\n                                    <BorderColorIcon onClick={() => this._getEnv_labreportById(value._id)}/>\n                                  </TableCell> :null}\n                               \n                                </TableRow>\n                              ))\n                          ) : (\n                              <TableRow>No records available</TableRow>\n                            )}\n                        </TableBody>\n                      </Table>\n                    <TablePagination component=\"div\" count={this.state.Env_labreportList.length} rowsPerPage={this.state.rowsPerPage} page={this.state.page} onChangePage={this._handleChangePage} onChangeRowsPerPage={this._handleChangeRowsPerPage} />\n                  </div>\n                )}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    )\n  }\nrender() {\n    return (\n      <div>\n         {this.state.role !== 'customer' ?this._renderHeader() :null}\n        {this.state.isCreateSIF ? this._renderForm() : null}\n        {this._renderTable()}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(GC_FTIR_OIL_Report);\n","import { Card } from '@material-ui/core'\nimport GridContainer from 'components/Grid/GridContainer'\nimport GridItem from 'components/Grid/GridItem'\nimport React from 'react'\n\nfunction SwitchableTab({\n  selectedIndex = 0,\n  tabValues = [],\n}) {\n  return (\n    <GridContainer>\n      <GridItem xs={12} sm={12} md={12}>\n        <Card>\n          <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n            {tabValues.map(({ title, id, href, onClick }, index) => {\n              if (!id) {\n                id = `${title.replace(/\\s/g, '-')}-${index}`\n              }\n              return (\n                <li className=\"nav-item\">\n                  <a data-toggle=\"tab\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\"\n                    style={{ fontSize: 24 }}\n                    id={id}\n                    href={`#${href || title}`}\n                    className={(selectedIndex === index) ? \" nav-link active\" : \"nav-link\"}\n                    onClick={onClick}\n                  >\n                    {title}\n                  </a>\n                </li>\n              )\n            })}\n\n          </ul>\n        </Card>\n      </GridItem>\n    </GridContainer >\n  )\n}\n\nexport default SwitchableTab","import {\n  warningColor,\n  primaryColor,\n  dangerColor,\n  successColor,\n  infoColor,\n  roseColor,\n  grayColor,\n  defaultFont\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst tableStyle = theme => ({\n  warningTableHeader: {\n    color: warningColor[0]\n  },\n  primaryTableHeader: {\n    color: primaryColor[0]\n  },\n  dangerTableHeader: {\n    color: dangerColor[0]\n  },\n  successTableHeader: {\n    color: successColor[0]\n  },\n  infoTableHeader: {\n    color: infoColor[0]\n  },\n  roseTableHeader: {\n    color: roseColor[0]\n  },\n  grayTableHeader: {\n    color: grayColor[0]\n  },\n  table: {\n    marginBottom: \"0\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: \"transparent\",\n    borderSpacing: \"0\",\n    borderCollapse: \"collapse\"\n  },\n  tableHeadCell: {\n    color: \"inherit\",\n    ...defaultFont,\n    \"&, &$tableCell\": {\n      fontSize: \"1em\"\n    }\n  },\n  tableCell: {\n    ...defaultFont,\n    lineHeight: \"1.42857143\",\n    padding: \"12px 8px\",\n    verticalAlign: \"middle\",\n    fontSize: \"0.8125rem\"\n  },\n  tableResponsive: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  tableHeadRow: {\n    height: \"56px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  },\n  tableBodyRow: {\n    height: \"48px\",\n    color: \"inherit\",\n    display: \"table-row\",\n    outline: \"none\",\n    verticalAlign: \"middle\"\n  }\n});\n\nexport default tableStyle;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { Link } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(styles);\n\n/*------------------------------ Pagination -----------------------------------*/\n\n\n\nexport function CustomTable(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableHeaderColor } = props;\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined\n          ? <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            return (\n              <TableRow key={key} className={classes.tableBodyRow}>\n                {prop.map((prop, key) => {\n                  return (\n                    <TableCell className={classes.tableCell} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default function CustomTable2(props) {\n  const classes = useStyles();\n  const { tableHead, tableData, tableKey, tableHeaderColor, onClick } = props;\n  const _handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  };\n\n  const _handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  };\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined\n          ? <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          : null}\n        <TableBody>\n          {tableData\n            ? tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((prop, key) => {\n              return (\n                <TableRow key={key} className={classes.tableBodyRow}>\n                  {tableKey.map((propKey, key) => {\n                    return (\n                      <TableCell className={classes.tableCell} key={key}>\n                        {onClick ?\n                          <Link onClick={() => onClick(prop)}>\n                            {propKey === \"isapproved\"\n                              ? prop[propKey]\n                                ? \"Success\"\n                                : \" Pending \"\n                              : prop[propKey]}\n                          </Link>\n                          : prop[propKey]\n                        }\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })\n            : null}\n        </TableBody>\n      </Table>\n      <TablePagination\n        component=\"div\"\n        count={tableData.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={_handleChangePage}\n        onChangeRowsPerPage={_handleChangeRowsPerPage}\n      />\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\"\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableData: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n","import auth from \"services/auth\";\n/* eslint-disable-next-line */\nconst emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nclass Validator {\n\n    orderForm = formFields => {\n        var validatorStatus = {\n            nameError: false, phoneError: false, emailError: false, stateError: false, cityError: false,\n            addressError: false, selectedCustomerError: false, status: true, fuelError: false, countryError: false,\n            bidError: false, deliveryError: false, priorityError: false,\n        }\n        if (!formFields.customerId && !formFields.companyName && !formFields.shippingPhone && !formFields.shippingEmail\n            && !formFields.shippingAddress && !formFields.shippingCity && !formFields.shippingState && !formFields.priority\n            && !formFields.shippingCountry && !formFields.shippingZipcode && !formFields.shippingMethod) {\n            validatorStatus.selectedCustomerError = true;\n            validatorStatus.nameError = true;\n            validatorStatus.phoneError = true;\n            validatorStatus.emailError = true;\n            validatorStatus.addressError = true;\n            validatorStatus.fuelError = true;\n            validatorStatus.cityError = true;\n            validatorStatus.stateError = true;\n            validatorStatus.countryError = true;\n            validatorStatus.zipCodeError = true;\n            validatorStatus.deliveryError = true;\n            validatorStatus.priorityError = true;\n            validatorStatus.status = false;\n        }\n\n        if (!formFields.customerId) {\n            validatorStatus.selectedCustomerError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.companyName) {\n            validatorStatus.nameError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingPhone) {\n            validatorStatus.phoneError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingEmail) {\n            validatorStatus.emailError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingAddress) {\n            validatorStatus.addressError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingCity) {\n            validatorStatus.cityError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingState) {\n            validatorStatus.stateError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingCountry) {\n            validatorStatus.countryError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingZipcode) {\n            validatorStatus.zipCodeError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.shippingMethod) {\n            validatorStatus.deliveryError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.fuel) {\n            validatorStatus.fuelError = true\n            validatorStatus.status = false;\n        }\n        if (!formFields.priority) {\n            validatorStatus.priorityError = true\n            validatorStatus.status = false;\n        }\n\n        return validatorStatus\n    }\n\n    loginForm = formFields => {\n        if (!formFields.email && !formFields.password) {\n            return {\n                emailError: true,\n                passwordError: true,\n                status: false,\n            }\n        }\n        if (!emailRegex.test(formFields.email)) {\n            return {\n                emailError: true,\n                passwordError: false,\n                status: false,\n            }\n        }\n        if (!formFields.password) {\n            return {\n                emailError: false,\n                passwordError: true,\n                status: false,\n            }\n        }\n        return {\n            status: true\n        }\n    }\n\n    managerForm = ({ fname, surname, email, address, phone, city, state, country, zipcode }) => {\n        var error = {\n            fNameError: false, lNameError: false, emailError: false, phoneError: false, addressError: false,\n            cityError: false, stateError: false, countryError: false, pinCodeError: false, status: false, message: \"\"\n        }\n\n        if (!fname && !surname && !email && !address && !phone && !city && !country && !zipcode) {\n            return {\n                fNameError: true, lNameError: true, emailError: true, phoneError: true, addressError: true,\n                cityError: true, stateError: true, countryError: true, pinCodeError: true, status: false, message: \"Incomplete form\"\n            }\n        }\n\n        if (!fname) {\n            error.status = false\n            error.fNameError = true\n            error.message = \" First name is required \"\n            return error\n        }\n        if (!surname) {\n            error.status = false\n            error.lNameError = true\n            error.message = \" Last name is required \"\n            return error\n        }\n        if (!email || !emailRegex.test(email)) {\n            error.status = false\n            error.emailError = true\n            error.message = \" Email is required in format info@foilab.com\"\n            return error\n        }\n        if (!address) {\n            error.status = false\n            error.addressError = true\n            error.message = \" Address is required\"\n            return error\n        }\n        if (!phone || phone.replace(/[^0-9]/g, '').length !== 10) {\n            error.status = false\n            error.phoneError = true\n            error.message = \" Phone number is required\"\n            return error\n        }\n        if (!city) {\n            error.status = false\n            error.cityError = true\n            error.message = \" City is required\"\n            return error\n        }\n        if (!state) {\n            error.status = false\n            error.stateError = true\n            error.message = \" State is required\"\n            return error\n        }\n        if (!country) {\n            error.status = false\n            error.countryError = true\n            error.message = \" Country is required\"\n            return error\n        }\n        if (!zipcode) {\n            error.status = false\n            error.pinCodeError = true\n            error.message = \" ZIP Code is required\"\n            return error\n        }\n        error.status = true\n        return error\n    }\n\n    employeeForm = ({ managerid, fname, surname, email, address, phone, city, state, country, zipcode }) => {\n        var error = {\n            managerError: false, fNameError: false, lNameError: false, emailError: false, phoneError: false, addressError: false,\n            cityError: false, stateError: false, countryError: false, pinCodeError: false, status: false, message: \"\",\n        }\n\n        if (!fname && !surname && !email && !address && !phone && !city && !country && !zipcode) {\n            return {\n                fNameError: true, lNameError: true, emailError: true, phoneError: true, addressError: true,\n                cityError: true, countryError: true, stateError: true, pinCodeError: true, status: false, managerError: true,\n                message: \"Incomplete form\",\n            }\n        }\n\n        if (!managerid && auth.authRole() === \"admin\") {\n            error.status = false\n            error.managerError = true\n            error.message = \" Assign an manager \"\n            return error\n        }\n\n        if (!fname) {\n            error.status = false\n            error.fNameError = true\n            error.message = \" First name is required \"\n            return error\n        }\n        if (!surname) {\n            error.status = false\n            error.lNameError = true\n            error.message = \" Last name is required \"\n            return error\n        }\n        if (!email || !emailRegex.test(email.toLowerCase().trim())) {\n            error.status = false\n            error.emailError = true\n            error.message = \" Email is required in format info@foilab.com\"\n            return error\n        }\n        if (!address) {\n            error.status = false\n            error.addressError = true\n            error.message = \" Address is required\"\n            return error\n        }\n        if (!phone || phone.replace(/[^0-9]/g, '').length !== 10) {\n            error.status = false\n            error.phoneError = true\n            error.message = \" Phone number is required\"\n            return error\n        }\n        if (!city) {\n            error.status = false\n            error.cityError = true\n            error.message = \" City is required\"\n            return error\n        }\n        if (!state) {\n            error.status = false\n            error.stateError = true\n            error.message = \" State is required\"\n            return error\n        }\n        if (!country) {\n            error.status = false\n            error.countryError = true\n            error.message = \" Country is required\"\n            return error\n        }\n        if (!zipcode) {\n            error.status = false\n            error.pinCodeError = true\n            error.message = \" ZIP Code is required\"\n            return error\n        }\n        error.status = true\n        return error\n    }\n\n    customerForm = ({ fname, surname, email, address, phone, city, state, country, zipcode }) => {\n        var error = {\n            emailError: false, addressError: false,\n            cityError: false, stateError: false, countryError: false, pinCodeError: false, status: false, message: \"\",\n        }\n\n        if (!email && !address && !city && !country && !zipcode) {\n            return {\n                emailError: true, addressError: true,\n                cityError: true, stateError: false, countryError: true, pinCodeError: true, status: false,\n                message: \"Incomplete form\",\n            }\n        }\n\n        if (!email || !emailRegex.test(email.toLowerCase().trim())) {\n            error.status = false\n            error.emailError = true\n            error.message = \" Email is required in format info@foilab.com\"\n            return error\n        }\n        if (!address) {\n            error.status = false\n            error.addressError = true\n            error.message = \" Address is required\"\n            return error\n        }\n        if (!city) {\n            error.status = false\n            error.cityError = true\n            error.message = \" City is required\"\n            return error\n        }\n        if (!state) {\n            error.status = false\n            error.stateError = true\n            error.message = \" State is required\"\n            return error\n        }\n        if (!country) {\n            error.status = false\n            error.countryError = true\n            error.message = \" Country is required\"\n            return error\n        }\n        if (!zipcode) {\n            error.status = false\n            error.pinCodeError = true\n            error.message = \" ZIP Code is required\"\n            return error\n        }\n        error.status = true\n        return error\n    }\n\n    customerLocationForm = ({ phone }) => {\n        var error = {\n            phoneError: false,\n        }\n\n        if (phone && phone.replace(/[^0-9]/g, '').trim().length !== 10) {\n            error.phoneError = true;\n        }\n\n        return error;\n    }\n    \n    customerUserForm = ({ phone }) => {\n        var error = {\n            phoneError: false,\n        }\n\n        if (phone && phone.replace(/[^0-9]/g, '').trim().length !== 10) {\n            error.phoneError = true;\n        }\n\n        return error;\n    }\n\n    orderForm = ({ shippingAddress,phone,manager,attention,bid,bcontact,emailCollection,returnLabel,ground,kit }) => {\n        var error = {\n            shippingAddressError:false,phoneError:false,managerError:false,attentionError:false,bidError:false,bcontactError:false,emailCollectionError:false,returnLabelError:false,groundError:false,kit\n            ,message: \"\",\n        }\n\n        if (!shippingAddress && !phone && !manager && !attention && !bid && !bcontact && !emailCollection && !returnLabel && !ground && !kit) {\n            return {\n                shippingAddressError:true ,phoneError:true ,managerError:true ,attentionError:true ,bidError:true ,bcontactError:true ,emailCollectionError:true ,returnLabelError:true ,groundError:true ,kit\n                ,message: \"Incomplete form\",\n            }\n        }\n\n        if (!emailCollection.length > 0 || !emailRegex.test(emailCollection[0].toLowerCase().trim())) {\n            error.status = false\n            error.emailCollectionError = true\n            error.message = \" Email is required in format info@foilab.com\"\n            return error\n        }\n        if (!shippingAddress) {\n            error.status = false\n            error.shippingAddressError = true\n            error.message = \" shippingAddress is required\"\n            return error\n        }\n        if (!phone) {\n            error.status = false\n            error.phoneError = true\n            error.message = \" phone is required\"\n            return error\n        }\n        if (!manager) {\n            error.status = false\n            error.managerError = true\n            error.message = \" manager is required\"\n            return error\n        }\n        if (!attention) {\n            error.status = false\n            error.attentionError = true\n            error.message = \" attention is required\"\n            return error\n        }\n        if (!bid) {\n            error.status = false\n            error.bidError = true\n            error.message = \" bid is required\"\n            return error\n        }\n        if (!bcontact) {\n            error.status = false\n            error.bcontactError = true\n            error.message = \" bcontact is required\"\n            return error\n        }if (!returnLabel) {\n            error.status = false\n            error.returnLabelError = true\n            error.message = \" returnLabel is required\"\n            return error\n        }\n        if (!ground) {\n            error.status = false\n            error.groundError = true\n            error.message = \" ground is required\"\n            return error\n        }\n        if (!kit) {\n            error.status = false\n            error.kitError = true\n            error.message = \" kit is required\"\n            return error\n        }\n        error.status = true\n        return error\n    }\n    // End of Validator class\n}\n\nexport default new Validator()\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from 'react-loader-spinner';\n\nimport Table from \"components/Table/Table.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport validate from \"_helper/formValidators\";\nimport {userService} from \"services/api.services\";\n\nconst useStyles = () => (styles)\n\nclass ManagerViewPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      managerList: [],\n      fname: \"\", surname: \"\", email: \"\", address: \"\", phone: \"\", city: \"\", state: \"\", country: \"\", zipcode: \"\", id: \"\",\n      fNameError: false, lNameError: false, emailError: false, addressError: false, phoneError: false, cityError: false, stateError: false, countryError: false, pinCodeError: false,\n      status: false, isView: false, isLoading: true,\n    }\n  }\n\n  componentDidMount = () => {\n    this._getManagerList()\n  }\n\n  _getManagerList = () => {\n    this.setState({ isLoading: true })\n    userService.getUsersList('manager',false, result => {\n      if (result) {\n        this.setState({ managerList: result })\n      }\n      this.setState({ isLoading: false })\n    })\n  }\n\n  fetchInfo = ({ id }) => {\n    this._handleReset()\n    this.setState({ isView: true })\n    userService.getUserById(id, result => {\n      this.setState(result)\n    })\n  }\n\n  onDeleteUser = () => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete ' + this.state.fname + \" \" + this.state.surname,\n      buttons: [\n        {\n          label: 'Delete',\n          color: 'green',\n          onClick: () => {\n            userService.deleteUser(this.state.id, result => {\n              this._handleReset()\n              this._getManagerList()\n            })\n          }\n        },\n        {\n          label: 'Cancel',\n          onClick: () => console.log('cancel delete')\n        }\n      ]\n    });\n  }\n\n  onUpdateUser = () => {\n    this._handleValidate()\n    const userInfo = {\n      id: this.state.id,\n      email: this.state.email,\n      fname: this.state.fname,\n      surname: this.state.surname,\n      phone: this.state.phone,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipcode: this.state.zipcode,\n    }\n    if (this.state.status) {\n      confirmAlert({\n        title: 'Confirm',\n        message: 'Are you sure you want to update',\n        buttons: [\n          {\n            label: 'Update',\n            color: 'green',\n            onClick: () => {\n              userService.updateUser(userInfo, result => {\n                this.fetchInfo({ id: userInfo.id })\n                this._getManagerList()\n              })\n            }\n          },\n          {\n            label: 'Cancel',\n            onClick: () => console.log('cancel update')\n          }\n        ]\n      });\n    } else {\n      this._handleValidate()\n    }\n  }\n\n  _handleReset = () => {\n    this.setState({\n      isView: false, fname: \"\", surname: \"\", email: \"\", address: \"\", phone: \"\", city: \"\", state: \"\", country: \"\", zipcode: \"\", status: false, message: \"\",\n      fNameError: false, lNameError: false, emailError: false, addressError: false, phoneError: false, cityError: false, stateError: false, countryError: false, pinCodeError: false,\n    })\n  }\n\n  _onCreateProfile = () => {\n    if (this.state.status) {\n      confirmAlert({\n        title: 'Confirm ',\n        message: this.state.fname + \" \" + this.state.surname + ' will be given manager privilages',\n        buttons: [\n          {\n            label: 'Create',\n            color: 'green',\n            onClick: () => {\n              userService.register(this.state, \"manager\", result => {\n                this._handleReset()\n                this._getManagerList()\n              })\n            }\n          },\n          {\n            label: 'Cancel',\n            onClick: () => console.log('cancel profile creation')\n          }\n        ]\n      });\n    } else {\n      this._handleValidate()\n    }\n  }\n\n  _handleValidate = () => {\n    this.setState(validate.managerForm(this.state))\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>{!this.state.isView ? \"Create Manager\" : \"Manager details\"}</h4>\n              <p className={classes.cardCategoryWhite}>{!this.state.isView ? \"Complete new  manager form\" : \" \"}</p>\n            </CardHeader>\n            <CardBody>\n              <GridContainer>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ fname: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"First Name\"\n                    id=\"fname\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.fname }}\n                    error={this.state.fNameError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ surname: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Last name\"\n                    id=\"surname\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.surname }}\n                    error={this.state.lNameError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ email: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Email\"\n                    id=\"email-address\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.email }}\n                    error={this.state.emailError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ phone: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Phone\"\n                    id=\"phone\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.phone }}\n                    error={this.state.phoneError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ address: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Address\"\n                    id=\"address\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.address }}\n                    error={this.state.addressError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ city: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"City\"\n                    id=\"city\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.city }}\n                    error={this.state.cityError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ state: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"State\"\n                    id=\"state\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.state }}\n                    error={this.state.stateError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ country: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Country\"\n                    id=\"country\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.country }}\n                    error={this.state.countryError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ zipcode: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Zip Code\"\n                    id=\"zipcode\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.zipcode }}\n                    error={this.state.pinCodeError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n            </CardBody>\n            <CardFooter>\n              <h5 style={{ color: 'red' }}>{this.state.message}</h5>\n              {!this.state.isView ? <Button disabled={this.state.isDisabled} onClick={() => this._onCreateProfile()} color=\"primary\">Create Profile</Button> : null}\n              {this.state.isView ? <Button onClick={this._handleReset} color=\"primary\">Reset</Button> : null}\n              {this.state.isView ? <Button onClick={this.onUpdateUser} color=\"warning\">Update</Button> : null}\n              {this.state.isView ? <Button onClick={this.onDeleteUser} color=\"danger\">Delete</Button> : null}\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Managers</h4>\n              <p className={classes.cardCategoryWhite}>\n                Updated on 31st March, 2020\n                </p>\n            </CardHeader>\n            <CardBody>\n              {this.state.isLoading\n                ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n                : this.state.managerList.length\n                  ? <Table\n                    onClick={this.fetchInfo}\n                    tableHeaderColor=\"warning\"\n                    tableHead={[\"First name\", \"Last Name\", \"Email\"]}\n                    tableKey={[\"fname\", \"surname\", \"email\"]}\n                    tableData={this.state.managerList}\n                  />\n                  : null}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(ManagerViewPage);\n","import React from \"react\";\nimport { InputLabel, Select, Chip, MenuItem, FormControl, Input } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from 'react-loader-spinner';\n\nimport Table from \"components/Table/Table.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport validate from \"_helper/formValidators\";\nimport {userService} from \"services/api.services\";\nimport auth from \"services/auth\"\n\nconst useStyles = () => (styles)\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass EmployeeViewPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      passwordError: false,\n      employeeList: [],\n      managerList: [],\n      isDisabled: false,\n      fname: \"\", surname: \"\", email: \"\", address: \"\", phone: \"\", city: \"\",state: \"\", country: \"\", zipcode: \"\", manager: \"\", managerid: \"\", status: false,\n      fNameError: false, lNameError: false, emailError: false, addressError: false, phoneError: false, cityError: false, stateError: false, countryError: false, pinCodeError: false,\n      managerError: false, isView: false, isLoading: true,\n    }\n  }\n\n  componentDidMount = () => {\n    this._onLoad()\n  }\n\n  _onLoad = () => {\n    this.setState({ isLoading: true })\n    userService.getUsersList('employee', false, result => {\n      if(result){\n        this.setState({ employeeList: result })\n      }\n      this.setState({ isLoading: false })\n    })\n    userService.getUsersList('manager', false, result => {\n      if(result){\n        this.setState({ managerList: result })\n      }\n    })\n  }\n\n  fetchInfo = ({ id }) => {\n    this._handleReset();\n    this.setState({ isView: true })\n    userService.getUserById(id, result => {\n      this.setState(result)\n      this.state.managerList.map(value => {\n        if (value.id === result.managerid) {\n          return this.setState({\n            manager: [value],\n            managerid: result.managerid\n          })\n        }\n        return false;\n      })\n      this._handleValidate()\n    })\n  }\n\n  _handleReset = () => {\n    this.setState({\n      isView: false, fname: \"\", surname: \"\", email: \"\", address: \"\", phone: \"\", city: \"\", state: \"\", country: \"\", zipcode: \"\", message: \"\", id: \"\",\n      fNameError: false, lNameError: false, emailError: false, addressError: false, phoneError: false, cityError: false, stateError: false, countryError: false,\n      pinCodeError: false, managerError: false, manager: [],\n    })\n  }\n\n  _handleManagerSelection = event => {\n    this.setState({\n      manager: [event.target.value],\n      managerid: event.target.value.id\n    })\n    this._handleValidate();\n  }\n\n  onCreateProfile = () => {\n    if (this.state.status) {\n      this.setState({ isDisabled: true })\n      confirmAlert({\n        title: 'Confirm',\n        message: 'Are you sure you want to create',\n        buttons: [\n          {\n            label: 'Create',\n            color: 'green',\n            onClick: () => {\n              userService.register(this.state, \"employee\", result => {\n                this._handleReset();\n                if(result){\n                  this.setState({message: result.message})\n                }\n                this._onLoad();\n                return\n              })\n            }\n          },\n          {\n            label: 'Cancel',\n            onClick: () => console.log('cancel create')\n          }\n        ]\n      });\n    }\n    this._handleValidate()\n    this.setState({ isDisabled: false });\n  }\n\n  onDeleteProfile = () => {\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete',\n      buttons: [\n        {\n          label: 'Delete',\n          color: 'green',\n          onClick: () => {\n            userService.deleteUser(this.state.id, result => {\n              this._handleReset();\n              this._onLoad();\n            })\n          }\n        },\n        {\n          label: 'Cancel',\n          onClick: () => console.log('cancel delete profile')\n        }\n      ]\n    });\n  }\n\n  onUpdateProfile = () => {\n    const userInfo = {\n      id: this.state.id,\n      managerid: this.state.managerid,\n      email: this.state.email,\n      fname: this.state.fname,\n      surname: this.state.surname,\n      phone: this.state.phone,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      country: this.state.country,\n      zipcode: this.state.zipcode,\n    }\n\n    if (this.state.status) {\n      confirmAlert({\n        title: 'Confirm',\n        message: 'Are you sure you want to update',\n        buttons: [\n          {\n            label: 'Update',\n            color: 'green',\n            onClick: () => {\n              userService.updateUser(userInfo, result => {\n                this.fetchInfo({ id: userInfo.id })\n                this._onLoad();\n              })\n            }\n          },\n          {\n            label: 'Cancel',\n            onClick: () => console.log('cancel update profile')\n          }\n        ]\n      });\n    }\n  }\n\n  _handleValidate = () => {\n    this.setState(validate.employeeForm(this.state))\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>{this.state.isView ? \"Employee details\" : \"Create Employee\"}</h4>\n              <p className={classes.cardCategoryWhite}>{!this.state.isView ? \"Complete new employee form\" : \" \"}</p>\n            </CardHeader>\n            <CardBody>\n              <GridContainer>\n                {auth.authRole() === 'admin'\n                  ? <GridItem xs={12} sm={12} md={12}>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel className={classes.InputLabelGrey} id=\"manager-type-selection\">Manager assigned</InputLabel>\n                      <Select\n                        labelId=\"manager-type-selection\"\n                        id=\"manager-type-selection\"\n                        single\n                        required\n                        error={this.state.managerError}\n                        disabled={this.state.isDisabled}\n                        value={this.state.manager ? this.state.manager : []}\n                        onChange={this._handleManagerSelection}\n                        input={<Input id=\"select-chip\" />}\n                        renderValue={(selected) => (\n                          <div className={classes.chips}>\n                            {selected.map((value) => (\n                              <Chip key={value.id} label={value.fname + \" \" + value.surname} className={classes.chip} />\n                            ))}\n                          </div>\n                        )}\n                        MenuProps={MenuProps}\n                      >\n                        {this.state.managerList.map(value => (\n                          <MenuItem key={value.id} value={value} >\n                            {value.fname + \" \" + value.surname}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </GridItem>\n                  : null}\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ fname: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"First Name\"\n                    id=\"fname\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.fname }}\n                    error={this.state.fNameError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ surname: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Last name\"\n                    id=\"surname\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.surname }}\n                    error={this.state.lNameError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ email: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Email\"\n                    id=\"email-address\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.email }}\n                    error={this.state.emailError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ phone: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Phone\"\n                    id=\"phone\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.phone }}\n                    error={this.state.phoneError}\n                    formControlProps={{\n                      fullWidth: true,\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={12}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ address: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Address\"\n                    id=\"address\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.address }}\n                    error={this.state.addressError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ city: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"City\"\n                    id=\"city\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.city }}\n                    error={this.state.cityError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ state: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"State\"\n                    id=\"state\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.state }}\n                    error={this.state.stateError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ country: e.target.value })\n                      this._handleValidate()\n                    }}\n                    inputProps={{ type: \"text\", value: this.state.country }}\n                    error={this.state.countryError}\n                    labelText=\"Country\"\n                    id=\"country\"\n                    disabled={this.state.isDisabled}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={4}>\n                  <CustomInput\n                    onChange={e => {\n                      this.setState({ zipcode: e.target.value })\n                      this._handleValidate()\n                    }}\n                    labelText=\"Zip Code\"\n                    id=\"zipcode\"\n                    disabled={this.state.isDisabled}\n                    inputProps={{ type: \"text\", value: this.state.zipcode }}\n                    error={this.state.pinCodeError}\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                  />\n                </GridItem>\n              </GridContainer>\n            </CardBody>\n            <CardFooter>\n              <h5 style={{ color: 'red' }}>{this.state.message}</h5>\n              {!this.state.isView ? <Button disabled={this.state.isDisabled} onClick={() => this.onCreateProfile()} color=\"primary\">Create Profile</Button> : null}\n              {this.state.isView ? <Button onClick={this._handleReset} color=\"primary\">Reset</Button> : null}\n              {this.state.isView ? <Button onClick={this.onUpdateProfile} color=\"warning\">Update</Button> : null}\n              {this.state.isView ? <Button onClick={this.onDeleteProfile} color=\"danger\">Delete</Button> : null}\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"info\">\n              <h4 className={classes.cardTitleWhite}>Employees</h4>\n              <p className={classes.cardCategoryWhite}>\n                Updated on 31st March, 2020\n                </p>\n            </CardHeader>\n            <CardBody>\n              {this.state.isLoading \n              ? <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n              : this.state.employeeList.length\n                ? <Table\n                onClick={this.fetchInfo}\n                  tableHeaderColor=\"warning\"\n                  tableHead={[\"First name\", \"Last Name\", \"Email\"]}\n                  tableKey={[\"fname\", \"surname\", \"email\"]}\n                  tableData={this.state.employeeList}\n                />\n                : \"No employee records found.\"}\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    )\n  }\n}\n\nexport default withStyles(useStyles)(EmployeeViewPage);\n","import React from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport Loader from \"react-loader-spinner\";\nimport Person from \"@material-ui/icons/Person\";\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport { red } from \"@material-ui/core/colors\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\";\n\nimport auth from \"services/auth\";\nimport { userService, dataControllerService } from \"services/api.services\";\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport CustomInput, {\n  CustomDropBox,\n} from \"components/CustomInput/CustomInput.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport CardIcon from \"components/Card/CardIcon.js\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { CustomMultiEmailInput } from \"components/CustomInput/CustomInput\";\nimport Autocomplete from \"components/Autocomplete/Autocomplete\";\nimport validator from \"_helper/formValidators\";\n\nconst useStyles = () => styles;\n\nclass CustomerViewPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isView: false,\n      role: \"customer\",\n      permission: {},\n      // List\n      customerList: [], reportedCompaniesList: [], usertype: [], customerLocationList: [], customerUserList: [],\n      //Main section paging\n      customerListRowsPerPage: 10, customerListPage: 0, isLoading: false,\n      // User section\n      isViewUser: false, isViewUserForm: false, userPrimary: false,\n      // User form\n      userFname: \"\", userSurname: \"\", userEmail: \"\", userPhone: \"\", userAddress: \"\", userCity: \"\", uesrState: \"\", userCountry: \"\", userZipcode: \"\", userAdditionalEmail: [], selectedUserID: \"\", isViewUserFormEdit: false,\n      // Location section\n      isViewLocation: false, isViewLocationDetails: false, isViewLocationForm: false, isEditLocationForm: false, selectedLocationIndex: \"\", selectedUsersList: [],\n      // Privilege\n      isViewPrivilege: false, privilegeList: [], selectedLocation: [], privilegeOptions: [], privilegeOptionSelection: {}, selectedCompany: {},\n      // Location form\n      locationName: \"\", locationAddress: \"\", locationCity: \"\", locationState: \"\", locationCountry: \"\", locationZipcode: \"\", locationEmailValue: \"\", locationEmailCollection: [], selectedReportComp: [], reportCompList: [], locationPhone: \"\",\n      // Error handler\n      locationPhoneError: false, userPhoneError: false,\n      //krishna--comment field\n      comment: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      reportedCompaniesList: [{ name: \"A\" }, { name: \"B\" }, { name: \"C\" }],\n      usertype: [\n        { name: \"Complete control\" },\n        { name: \"Managment\" },\n        { name: \"Report\" },\n      ],\n      role: auth.authRole(),\n    });\n    dataControllerService.reportCompanyList((result) => {\n      let list = [{ name: \"Select One\", id: null }];\n      this.setState({ reportCompList: list.concat(result || []) });\n    });\n    this.getCustomerList();\n    if (auth.authRole() === \"customer\") {\n      this.fetchCustomerInfo({ id: \"\" });\n    }\n    this.getPrivilegeOptions();\n  };\n\n  loadReportCompanies = () => {\n    dataControllerService.reportCompanyList((result) => {\n      let list = [{ name: \"Select One\", id: null }];\n      this.setState({ reportCompList: list.concat(result || []) });\n    });\n  };\n\n  _handleReset = () => {\n    this.setState({\n      isView: false, isViewUserForm: false, isViewUser: false, isViewLocationForm: false, isViewLocation: false, isViewLocationDetails: false, isViewPrivilege: false,\n      customerUserList: [], customerLocationList: [], selectedCompany: {}, userPrimary: false,\n      isEditLocationForm: false, isViewUserFormEdit: false,\n      isLoading: false,\n      companyName: \"\",\n      // Location form\n      locationName: \"\", locationAddress: \"\", locationCity: \"\", locationState: \"\", locationCountry: \"\", locationZipcode: \"\", locationEmailValue: \"\",\n      locationEmailCollection: [], selectedLocationIndex: \"\", loocationPhone: \"\", privilegeList: [], selectedLocation: [], selectedUsersList: [],\n      // User form\n      userFname: \"\", userSurname: \"\", userEmail: \"\", userPhone: \"\", userAddress: \"\", userCity: \"\", uesrState: \"\", userCountry: \"\",\n      userZipcode: \"\", userAdditionalEmail: [], selectedUserID: \"\",\n      // Privilege\n      privilegeOptionSelection: {},\n      // Error handler\n      locationPhoneError: false, userPhoneError: false,\n      //krishna comment\n      comment: \"\"\n    });\n    this.getCustomerList();\n  };\n\n  /* ----------------------- Customer CRUD ------------------------ */\n  onCreateCustomer = () => {\n    if (this.state.newCompanyName.trim()) {\n      this.setState({\n        isLoading: true,\n      });\n      const data = {\n        companyName: this.state.newCompanyName,\n      };\n      userService.createCustomer(data, () => {\n        this.setState({\n          newCompanyName: \"\",\n          isLoading: false,\n        });\n        this.getCustomerList();\n      });\n    } else {\n      userService.showNotification(\"danger\", \"Company name needed\");\n    }\n  };\n\n  getCustomerList = () => {\n    this.setState({\n      isLoading: true,\n    });\n    userService.getCustomerList((result) => {\n      if (result) {\n        this.setState({\n          customerList: result,\n          isLoading: false,\n        });\n      }\n    });\n  };\n\n  fetchCustomerInfo = ({ id }) => {\n    if (id) {\n      this.setState({\n        isLoading: true,\n      });\n      userService.getCustomerById(id, (res) => {\n        const result = res.data;\n        var temp = [{ id: \"\", name: \"Choose any\" }];\n        if (result && result.client) {\n          this.setState({\n            isLoading: false,\n            isView: true,\n            customerUserList: result.users || [],\n            customerLocationList: result.locations || [],\n            customerLocationListExt: temp.concat(result.locations || []),\n            companyName: result.name,\n            newCompanyName: result.name,\n            selectedCompany: {\n              id: result.client.id,\n              name: result.client.name,\n            },\n          });\n        }\n      });\n      userService.getUserPrivilegeByToken(id, (result) => {\n        if (Object.keys(result).length) {\n          this.setState({\n            permission: result,\n          });\n        }\n      });\n    }\n  };\n\n  onUpdateCustomerUser = (name) => {\n    const data = { name, id: this.state.selectedCompany.id };\n    userService.updateCustomer(data, () => {\n      this.getCustomerList();\n      this.setState({\n        isLoading: false,\n      });\n    });\n  };\n\n  deleteCustomer = ({ id }) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete this customer\",\n      buttons: [\n        {\n          label: \"Delete\",\n          color: \"red\",\n          onClick: () => {\n            this.setState({\n              isLoading: true,\n            });\n            userService.deleteCustomer(id, () => {\n              this._handleReset();\n              this.getCustomerList();\n            });\n          },\n        },\n        {\n          label: \"Cancel\",\n          onClick: () => console.log(\"Operation cancelled\"),\n        },\n      ],\n    });\n  };\n\n  /* --------------------------- User CRUD ---------------------- */\n\n  onCreateUser = () => {\n    if (this.state.userFname.trim() || this.state.userEmail.trim()) {\n      var userData = {\n        clientid: this.state.selectedCompany.id || \" \",\n        fname: this.state.userFname || \" \",\n        surname: this.state.userSurname || \" \",\n        phone: this.state.userPhone || \" \",\n        email: this.state.userEmail.toLowerCase().trim() || \" \",\n        address: this.state.userAddress || \" \",\n        city: this.state.userCity || \" \",\n        state: this.state.uesrState || \" \",\n        country: this.state.userCountry || \" \",\n        zipcode: this.state.userZipcode || \" \",\n        primary: this.state.userPrimary,\n      };\n\n      if (this.state.selectedReportComp.length) {\n        userData.reportcomp = this.state.selectedReportComp[0].id;\n      }\n\n      userService.register(userData, \"customer\", () => {\n        this.setState({\n          isLoading: true,\n        });\n        this.getUserByCustomerID();\n        this._handleView(\"viewUser\");\n      });\n    } else {\n      userService.showNotification(\"danger\", \"One or more field empty\");\n    }\n  };\n\n  getUserByID = ({ id }) => {\n    this.setState({\n      isLoading: true,\n    });\n    userService.getUserById(id, (result) => {\n      var selectedReportedCompany = [];\n      if (result.reportcomp) {\n        this.state.reportCompList.map((reportcomp) => {\n          if (reportcomp.id === result.reportcomp) {\n            return (selectedReportedCompany = [reportcomp]);\n          }\n          return selectedReportedCompany;\n        });\n      }\n\n      this.setState({\n        isLoading: false,\n        isViewUserForm: true,\n        isViewUser: false,\n        isViewUserFormEdit: true,\n        selectedUserID: result.id,\n        userFname: result.fname,\n        userSurname: result.surname,\n        userPhone: result.phone,\n        userEmail: result.email,\n        userAddress: result.address,\n        userCity: result.city,\n        uesrState: result.state,\n        userCountry: result.country,\n        userZipcode: result.zipcode,\n        userPrimary: result.primary,\n        selectedReportComp: selectedReportedCompany,\n      });\n      return true;\n    });\n  };\n\n  getUserByCustomerID = () => {\n    this.setState({\n      isLoading: true,\n    });\n    userService.getUsersByCustomerID(\n      this.state.selectedCompany.id,\n      (result) => {\n        this.setState({\n          isLoading: false,\n          customerUserList: result,\n        });\n      }\n    );\n  };\n\n  onUpdateUser = () => {\n    this.setState({\n      isLoading: true,\n    });\n    var userData = {\n      id: this.state.selectedUserID,\n      fname: this.state.userFname || \" \",\n      surname: this.state.userSurname || \" \",\n      phone: this.state.userPhone || \" \",\n      email: this.state.userEmail || \" \",\n      address: this.state.userAddress || \" \",\n      city: this.state.userCity || \" \",\n      state: this.state.uesrState || \" \",\n      country: this.state.userCountry || \" \",\n      zipcode: this.state.userZipcode || \" \",\n    };\n\n    if (this.state.selectedReportComp.length) {\n      userData.reportcomp = this.state.selectedReportComp[0].id;\n    }\n\n    userService.updateUser(userData, () => {\n      this.getUserByCustomerID();\n    });\n  };\n\n  onDeleteUser = ({ id }) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete this user\",\n      buttons: [\n        {\n          label: \"Delete\",\n          color: \"red\",\n          onClick: () => {\n            userService.deleteUser(id, () => {\n              this.getUserByCustomerID();\n            });\n          },\n        },\n        {\n          label: \"Cancel\",\n          onClick: () => console.log(\"Operation cancelled\"),\n        },\n      ],\n    });\n  };\n\n  makeUserPrimary = (id) => {\n    if (id) {\n      this.setState({\n        isLoading: true,\n      });\n      const data = {\n        userid: id,\n        clientid: this.state.selectedCompany.id,\n      };\n\n      userService.makeUserPrimary(data, (result) => {\n        if (result) {\n          this.getUserByCustomerID();\n        }\n        this.setState({\n          userPrimary: true,\n          isLoading: false,\n        });\n      });\n    } else {\n      this.setState({\n        userPrimary: true,\n      });\n    }\n  };\n  /* --------------------------- Location CRUD ---------------------- */\n\n  onCreateLocation = () => {\n\n    if (this.state.locationName.trim()) {\n      this.setState({\n        isLoading: true,\n      });\n      var data = {\n        clientid: this.state.selectedCompany.id,\n        email: this.state.locationEmailCollection || [],\n        name: this.state.locationName || \" \",\n        address: this.state.locationAddress || \" \",\n        city: this.state.locationCity || \" \",\n        state: this.state.locationState || \" \",\n        country: this.state.locationCountry || \" \",\n        zipcode: this.state.locationZipcode || \" \",\n        phone: this.state.locationPhone || \" \",\n        //krishna-comment\n        comment: this.state.comment\n      };\n\n      if (this.state.selectedReportComp.length) {\n        data.reportcomp = this.state.selectedReportComp[0].id;\n      }\n\n      if (this.state.selectedUser.length) {\n        data.userid = this.state.selectedUser[0].id;\n      }\n\n      if (this.state.selectedUsersList.length) {\n        var temp = [];\n        this.state.selectedUsersList.map((user) => {\n          return temp.push(user.id);\n        });\n        data.usercollection = temp;\n      }\n\n      userService.createClientLocation(data, () => {\n\n        this.setState({\n          locationEmailCollection: [],\n          locationName: \"\",\n          locationAddress: \"\",\n          locationCity: \"\",\n          locationState: \"\",\n          locationCountry: \"\",\n          locationZipcode: \"\",\n          locationPhone: \"\",\n          selectedUser: [],\n          selectedReportComp: [],\n          comment: \"\"\n        });\n        this.getLocationByClientID();\n        this._handleView(\"viewLocation\");\n      });\n    } else {\n      userService.showNotification(\"danger\", \"Location name in needed\");\n    }\n  };\n\n  getLocationByClientID = () => {\n    if (this.state.selectedCompany.id) {\n      userService.getCustomerLocationByClient(\n        this.state.selectedCompany.id,\n        (result) => {\n          var temp = [{ id: \"\", name: \"Choose any\" }];\n          this.setState({\n            customerLocationList: result || [],\n            customerLocationListExt: temp.concat(result || []),\n          });\n        }\n      );\n    }\n  };\n\n  getLocationByID = ({ _id }) => {\n    const id = _id;\n    this.setState({\n      isLoading: true,\n    });\n    userService.getCustomerLocationByID(id, (result) => {\n      const selectedLocation = result;\n\n      if (selectedLocation) {\n        var selectedPrimaryUser = [];\n\n        if (selectedLocation && selectedLocation.userid) {\n          this.state.customerUserList.map((customer) => {\n            if (customer.id === selectedLocation.userid) {\n              return (selectedPrimaryUser = [customer]);\n            }\n            return selectedPrimaryUser;\n          });\n        }\n\n        var selectReportComp = [];\n\n        if (selectedLocation.reportcomp) {\n          this.state.reportCompList.map((reportComp) => {\n            if (reportComp.id === selectedLocation.reportcomp) {\n              return (selectReportComp = [reportComp]);\n            }\n            return selectReportComp;\n          });\n        }\n\n        var tempUserCollection = [];\n        if (selectedLocation && selectedLocation.usercollection) {\n          if (\n            this.state.customerUserList &&\n            this.state.customerUserList.length\n          ) {\n            selectedLocation.usercollection.map((userid) => {\n              this.state.customerUserList.map((customer) => {\n                if (customer.id === userid) {\n                  return tempUserCollection.push(customer);\n                }\n                return customer;\n              });\n              return userid;\n            });\n          }\n        }\n\n        this.setState({\n          selectedLocationIndex: id,\n          locationEmailCollection: selectedLocation.email || [],\n          locationName: selectedLocation.name,\n          locationAddress: selectedLocation.address,\n          locationCity: selectedLocation.city,\n          locationState: selectedLocation.state,\n          locationCountry: selectedLocation.country,\n          locationZipcode: selectedLocation.zipcode,\n          locationPhone: selectedLocation.phone,\n          selectedReportComp: selectReportComp,\n          selectedUser: selectedPrimaryUser,\n          isEditLocationForm: true,\n          isViewLocationForm: true,\n          isViewLocation: true,\n          isLoading: false,\n          selectedUsersList: tempUserCollection,\n          //krishna--comment\n          comment: selectedLocation.comment ? selectedLocation.comment : \"\"\n        });\n      }\n    });\n  };\n\n  onUpdateLocation = () => {\n    this.setState({\n      isLoading: true,\n    });\n    var location = {\n      email: this.state.locationEmailCollection || [],\n      name: this.state.locationName || \" \",\n      address: this.state.locationAddress || \" \",\n      city: this.state.locationCity || \" \",\n      state: this.state.locationState || \" \",\n      country: this.state.locationCountry || \" \",\n      zipcode: this.state.locationZipcode || \" \",\n      phone: this.state.locationPhone || \" \",\n      //krishna-comment\n      comment: this.state.comment\n    };\n\n    if (this.state.selectedUser.length) {\n      location.userid = this.state.selectedUser[0].id;\n    }\n\n    if (this.state.selectedReportComp.length) {\n      location.reportcomp = this.state.selectedReportComp[0].id;\n    }\n\n    if (this.state.selectedUsersList.length) {\n      var temp = [];\n      this.state.selectedUsersList.map((user) => {\n        return temp.push(user.id);\n      });\n      location.usercollection = temp;\n    }\n\n    userService.updateClientLocation(\n      {\n        id: this.state.selectedLocationIndex,\n        location: location,\n      },\n      (result) => {\n        this.getLocationByClientID();\n      }\n    );\n  };\n\n  onDeleteLocation = ({ id }) => {\n    confirmAlert({\n      title: \"Confirm\",\n      message: \"Are you sure you want to delete this location\",\n      buttons: [\n        {\n          label: \"Delete\",\n          color: \"red\",\n          onClick: () => {\n            this.setState({\n              isLoading: true,\n            });\n            userService.deleteClientLocation(id, () => {\n              this.getLocationByClientID();\n            });\n          },\n        },\n        {\n          label: \"Cancel\",\n          onClick: () => console.log(\"Operation cancelled\"),\n        },\n      ],\n    });\n  };\n\n  /* -------------------------- Privilege CRUD -------------------------- */\n\n  createPrivilege = () => {\n    this.setState({\n      isLoading: true,\n    });\n    var data = {\n      location: this.state.selectedLocation.length\n        ? this.state.selectedLocation[0].name\n        : \" \",\n      locationid: this.state.selectedLocation.length\n        ? this.state.selectedLocation[0].id\n        : \" \",\n      clientid: this.state.selectedCompany.id,\n      options: this.state.privilegeOptionSelection,\n      userid: this.state.selectedUser.length\n        ? this.state.selectedUser[0].id\n        : \" \",\n    };\n\n    userService.createPrivilege(data, (result) => {\n      if (result) {\n        this._handleView(\"viewPrivilege\");\n      }\n    });\n  };\n\n  updatePrivilege = (event) => {\n    if (event.target.value) {\n      this.setState({\n        isLoading: true,\n      });\n      const data = {\n        privilegeid: event.target.value,\n        [event.target.id]: event.target.checked,\n      };\n      userService.updatePrivilege(data, () => { });\n    }\n  };\n\n  getPrivilegeOptions = () => {\n    this.setState({\n      isLoading: true,\n    });\n    userService.getUserPrivilegeOptions((result) => {\n      this.setState({\n        privilegeOptions: result || [],\n        isLoading: false,\n      });\n    });\n  };\n\n  /* ------------------- Handlers --------------------- */\n\n  _handleReportCompSelection = (event) => {\n    if (event.target.value && event.target.value.id) {\n      this.setState({\n        selectedReportComp: [event.target.value],\n      });\n    } else {\n      this.setState({\n        selectedReportComp: [],\n      });\n    }\n  };\n\n  _handleUserSelection = (event) => {\n    if (event.target.value) {\n      this.setState({\n        selectedUser: [event.target.value],\n      });\n    } else {\n      this.setState({\n        selectedUser: [],\n      });\n    }\n  };\n\n  _handleLocationSelection = (event) => {\n    if (event.target.value.id) {\n      this.setState({\n        selectedLocation: [event.target.value],\n      });\n    } else {\n      this.setState({\n        selectedLocation: [],\n      });\n    }\n  };\n\n  _handleLocationSearch = (newValue) => {\n    this.getLocationByID(newValue);\n  };\n\n  _handleUserSearch = (newValue) => {\n    this.getUserByID(newValue);\n  };\n\n  _handleCustomerSelection = (newValue) => {\n    this.fetchCustomerInfo(newValue);\n  };\n\n  _handleUserSelectionInfo = (event) => {\n    if (event.target.value.id) {\n      this.setState({\n        selectedUser: [event.target.value],\n        privilegeList: [],\n      });\n\n      const data = {\n        userid: event.target.value.id,\n        clientid: this.state.selectedCompany.id,\n      };\n      userService.getUserPrivilege(data, (result) => {\n        this.setState({\n          privilegeList: result.data || [],\n          isLoading: false,\n        });\n      });\n    } else {\n      this.setState({\n        privilegeList: [],\n        selectedUser: [],\n      });\n    }\n  };\n\n  _handleCheckbox = (event) => {\n    var selection = this.state.privilegeOptionSelection;\n    var selectedOption = {};\n    if (selection[event.target.value]) {\n      selectedOption = selection[event.target.value];\n    }\n\n    selectedOption[event.target.id] = event.target.checked;\n    selection[event.target.value] = selectedOption;\n\n    this.setState({\n      privilegeOptionSelection: selection,\n    });\n  };\n\n  _handleMultiUserSelectionInfo = (event) => {\n    this.setState({\n      selectedUsersList: event.target.value,\n    });\n  };\n\n  /*----------------- Multiple email entry handle ------------------*/\n  handleKeyDown = (evt) => {\n    if ([\"Enter\", \"Tab\", \",\"].includes(evt.key)) {\n      evt.preventDefault();\n\n      var value = this.state.locationEmailValue.trim();\n\n      if (value && this._handleEmailIsValid(value)) {\n        this.setState({\n          locationEmailCollection: [\n            ...this.state.locationEmailCollection,\n            this.state.locationEmailValue,\n          ],\n          locationEmailValue: \"\",\n        });\n      }\n    }\n  };\n\n  _handleEmailAddChange = (evt) => {\n    this.setState({\n      locationEmailValue: evt.target.value,\n      emailError: null,\n    });\n  };\n\n  _handleEmailRemoveChange = (item) => {\n    this.setState({\n      locationEmailCollection: this.state.locationEmailCollection.filter(\n        (i) => i !== item\n      ),\n    });\n  };\n\n  _handleEmailPasteChange = (evt) => {\n    evt.preventDefault();\n    var paste = evt.clipboardData.getData(\"text\");\n    var emails = paste.match(/[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/g);\n    if (emails) {\n      var toBeAdded = emails.filter(\n        (email) => !this._handleEmailIsInList(email)\n      );\n\n      this.setState({\n        locationEmailCollection: [\n          ...this.state.locationEmailCollection,\n          ...toBeAdded,\n        ],\n      });\n    }\n  };\n\n  _handleEmailIsValid(email) {\n    let emailError = null;\n    if (this._handleEmailIsInList(email)) {\n      emailError = `${email} has already been added.`;\n    }\n    if (!this._handleEmailIsIsEmail(email)) {\n      emailError = `${email} is not a valid email address.`;\n    }\n    if (emailError) {\n      this.setState({ emailError });\n      return false;\n    }\n    return true;\n  }\n\n  _handleEmailIsInList(email) {\n    return this.state.locationEmailCollection.includes(email);\n  }\n\n  _handleEmailIsIsEmail(email) {\n    return /[\\w\\d\\.-]+@[\\w\\d\\.-]+\\.[\\w\\d\\.-]+/.test(email);\n  }\n\n  /* ----------------------------------- Pagination ------------------------------- */\n\n  _handleCustomerChangePage = (event, newPage) => {\n    this.setState({\n      customerListPage: newPage,\n    });\n  };\n\n  _handleCustomerChangeRowsPerPage = (event) => {\n    this.setState({\n      customerListRowsPerPage: parseInt(+event.target.value),\n      customerListPage: 0,\n    });\n  };\n\n  /*------------------------------------ Handle view selection ------------------------ */\n  _handleView = (viewtype) => {\n    var view = {\n      isView: true,\n      selectedUser: [],\n      privilegeList: [],\n      isViewUser: false,\n      isViewUserForm: false,\n      isViewUserFormEdit: false,\n      isViewLocation: false,\n      isViewLocationForm: false,\n      isEditLocationForm: false,\n      isViewPrivilege: false,\n      isViewPrivilegeForm: false,\n      selectedReportComp: [],\n      locationPhoneError: false,\n      userPhoneError: false,\n      isLoading: false,\n      // User form\n      userFname: \"\",\n      userSurname: \"\",\n      userEmail: \"\",\n      userPhone: \"\",\n      userAddress: \"\",\n      userCity: \"\",\n      uesrState: \"\",\n      userCountry: \"\",\n      userZipcode: \"\",\n      userAdditionalEmail: [],\n      selectedUserID: \"\",\n      // Location form\n      locationName: \"\",\n      locationAddress: \"\",\n      locationCity: \"\",\n      locationState: \"\",\n      locationCountry: \"\",\n      locationZipcode: \"\",\n      locationEmailValue: \"\",\n      locationEmailCollection: [],\n      selectedLocationIndex: \"\",\n      locationPhone: \"\",\n      selectedUsersList: [],\n      // Privilage\n      privilegeOptionSelection: {},\n      selectedLocation: [],\n      //krishna-comment\n      comment: \"\"\n    };\n\n    switch (viewtype) {\n      case \"viewUser\": {\n        view.isViewUser = !this.state.isViewUser;\n        this.setState(view);\n        break;\n      }\n      case \"viewUserForm\": {\n        view.isViewUserForm = !this.state.isViewUserForm;\n        this.setState(view);\n        break;\n      }\n      case \"viewLocation\": {\n        view.isViewLocation = !this.state.isViewLocation;\n        this.setState(view);\n        break;\n      }\n      case \"viewLocationForm\": {\n        view.isViewLocationForm = !this.state.isViewLocationForm;\n        this.setState(view);\n        break;\n      }\n      case \"viewPrivilege\": {\n        view.isViewPrivilege = !this.state.isViewPrivilege;\n        this.setState(view);\n        break;\n      }\n      case \"viewPrivilegeForm\": {\n        view.isViewPrivilegeForm = !this.state.isViewPrivilegeForm;\n        this.setState(view);\n        break;\n      }\n      default: {\n        this.setState(view);\n        break;\n      }\n    }\n  };\n\n  /* ---------------------------------- Handle permission -------------------------------- */\n\n  _checkAccess = (page) => {\n    const permission = this.state.permission;\n    if (this.state.role === \"customer\") {\n      switch (page) {\n        // Customer\n        case \"customerCreate\": {\n          return false;\n        }\n        case \"customerView\": {\n          return false;\n        }\n        // User\n        case \"userView\": {\n          if (permission.admin) {\n            return true;\n          }\n\n          if (Object.keys(permission).length && permission.user) {\n            return (\n              permission.user.isedit || (permission.isadmin ? true : false)\n            );\n          }\n          return false;\n        }\n        case \"userForm\": {\n          if (permission.admin) {\n            return true;\n          }\n\n          if (Object.keys(permission).length > 0 && permission.user) {\n            return (\n              permission.user.iscreate ||\n              permission.user.isedit ||\n              (permission.isadmin ? true : false)\n            );\n          }\n          return false;\n        }\n        // Location\n        case \"locationView\": {\n          if (permission.admin) {\n            return true;\n          }\n\n          if (Object.keys(permission).length > 0 && permission.location) {\n            return (\n              permission.location.isedit || (permission.isadmin ? true : false)\n            );\n          }\n          return false;\n        }\n        case \"locationForm\": {\n          if (permission.admin) {\n            return true;\n          }\n\n          if (Object.keys(permission).length > 0 && permission.location) {\n            return (\n              permission.location.iscreate ||\n              permission.location.isedit ||\n              (permission.isadmin ? true : false)\n            );\n          }\n          return false;\n        }\n        // Privilege\n        case \"privilegeView\": {\n          return false;\n        }\n        case \"privilegeForm\": {\n          return false;\n        }\n        default: {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  /* ----------------------------------- Render ----------------------------------- */\n\n  /* ---------------------------------- Permission render -------------------------- */\n\n  _renderPrivilegeForm = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomDropBox\n            id=\"user-selection\"\n            labelText=\"Select user\"\n            valuekey={[\"fname\", \"surname\", \"email\"]}\n            single\n            selectedValue={this.state.selectedUser || []}\n            onChange={this._handleUserSelection}\n            value={this.state.customerUserList}\n            formControlProps={{\n              fullWidth: true,\n            }}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <CustomDropBox\n            id=\"location-selection\"\n            labelText=\"Select location\"\n            valuekey={[\"name\"]}\n            single\n            selectedValue={this.state.selectedLocation || []}\n            onChange={this._handleLocationSelection}\n            value={this.state.customerLocationListExt}\n            formControlProps={{\n              fullWidth: true,\n            }}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"section\"}> Section </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"create-privilege\"} >Admin </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"create-privilege\"}  > Create </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"update-privilege\"} > Edit </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"archive-privilege\"} > Archive </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"sent-privilege\"} > Sent </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"view-privilege\"} > View </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.privilegeOptions.map((value, key) => {\n                  return (\n                    <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} > {value.selection} </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey === \"admin\" ? (\n                          <input\n                            id={\"isadmin\"}\n                            name=\"admin\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey !== \"sif\" &&\n                          value.selectionKey !== \"admin\" &&\n                          value.selectionKey !== \"trending\" ? (\n                          <input\n                            id={\"iscreate\"}\n                            name=\"iscreate\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey !== \"sif\" && value.selectionKey !== \"admin\" && value.selectionKey !== \"trending\"\n                          ? (<input\n                            id={\"isedit\"}\n                            name=\"isedit\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                          ) : null}\n                      </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey !== \"sif\" && value.selectionKey !== \"admin\" && value.selectionKey !== \"trending\"\n                          ? (<input\n                            id={\"isarchive\"}\n                            name=\"isarchive\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                          ) : null}\n                      </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey === \"sif\"\n                          ? (<input\n                            id={\"issent\"}\n                            name=\"issent\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                          ) : null}\n                      </TableCell>\n                      <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"check\"} >\n                        {value.selectionKey === \"trending\" || value.selectionKey === \"sif\"\n                          ? (<input\n                            id={\"isview\"}\n                            name=\"isview\"\n                            type=\"checkbox\"\n                            onClick={this._handleCheckbox}\n                            value={value.selectionKey}\n                          />\n                          ) : null}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Button color=\"warning\" size=\"sm\" onClick={() => this.createPrivilege()} > Create  </Button>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  _renderPrivilegeSelection = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <CustomDropBox\n            id=\"user-selection\"\n            labelText=\"Select user\"\n            valuekey={[\"fname\", \"surname\", \"email\"]}\n            single\n            selectedValue={this.state.selectedUser || []}\n            onChange={this._handleUserSelectionInfo}\n            value={this.state.customerUserList}\n            formControlProps={{\n              fullWidth: true,\n            }}\n          />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"location-selected\"} > Location </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"section-privilege\"} > Section </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"create-privilege\"} > Admin </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"create-privilege\"} > Create </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"update-privilege\"} > Edit </TableCell>\n                  <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={\"archive-privilege\"} > Archive </TableCell>\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={\"sent-privilege\"}\n                  >\n                    {\" \"}\n                    Sent </TableCell>\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={\"view-privilege\"}\n                  >\n                    {\" \"}\n                    View{\" \"}\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.privilegeList.map((value, key) => {\n                  return (\n                    <TableRow\n                      key={key}\n                      tabIndex={-1}\n                      className={classes.tableBodyRow}\n                    >\n                      <TableCell\n                        className={classes.tableCell}\n                        key={\"location\" + value.id}\n                      >\n                        {\" \"}\n                        {value.location.trim()\n                          ? value.location.slice(0, 1).toUpperCase() +\n                          value.location.slice(1)\n                          : this.state.selectedCompany.name}{\" \"}\n                      </TableCell>\n                      <TableCell\n                        className={classes.tableCell}\n                        key={\"location\" + value.id}\n                      >\n                        {\" \"}\n                        {value.selection\n                          ? value.selection.slice(0, 1).toUpperCase() +\n                          value.selection.slice(1)\n                          : \" \"}{\" \"}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection === \"admin\" ? (\n                          <input\n                            id={\"isadmin\"}\n                            name=\"admin-select\"\n                            type=\"checkbox\"\n                            defaultChecked={\n                              value.isadmin ? value.isadmin : false\n                            }\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection !== \"sif\" &&\n                          value.selection !== \"admin\" &&\n                          value.selection !== \"trending\" ? (\n                          <input\n                            id={\"iscreate\"}\n                            name=\"create-select\"\n                            type=\"checkbox\"\n                            defaultChecked={\n                              value.iscreate ? value.iscreate : false\n                            }\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection !== \"sif\" &&\n                          value.selection !== \"admin\" &&\n                          value.selection !== \"trending\" ? (\n                          <input\n                            id={\"isedit\"}\n                            name=\"edit-select\"\n                            type=\"checkbox\"\n                            defaultChecked={value.isedit ? value.isedit : false}\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection !== \"sif\" &&\n                          value.selection !== \"admin\" &&\n                          value.selection !== \"trending\" ? (\n                          <input\n                            id={\"isarchive\"}\n                            name=\"archive-select\"\n                            type=\"checkbox\"\n                            defaultChecked={\n                              value.isarchive ? value.isarchive : false\n                            }\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection === \"sif\" ? (\n                          <input\n                            id={\"issent\"}\n                            name=\"sent-select\"\n                            type=\"checkbox\"\n                            defaultChecked={value.issent ? value.issent : false}\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                      <TableCell\n                        className={\n                          classes.tableCell + \" \" + classes.tableHeadCell\n                        }\n                        key={\"check\"}\n                      >\n                        {value.selection === \"trending\" ||\n                          value.selection === \"sif\" ? (\n                          <input\n                            id={\"isview\"}\n                            name=\"view-select\"\n                            type=\"checkbox\"\n                            defaultChecked={value.isview ? value.isview : false}\n                            value={value.id}\n                            onClick={this.updatePrivilege}\n                          />\n                        ) : null}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  /* -------------------- Location render ------------------------------ */\n\n  _renderLocationForm = () => {\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardBody>\n          <h4>{\"Location\"}</h4>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationName: e.target.value });\n                }}\n                labelText=\"Location name\"\n                id=\"location-name\"\n                inputProps={{ type: \"text\", value: this.state.locationName }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({\n                    locationPhone: e.target.value,\n                    locationPhoneError: validator.customerLocationForm({\n                      phone: e.target.value,\n                    }).phoneError,\n                  });\n                }}\n                labelText=\"Phone\"\n                error={this.state.locationPhoneError}\n                id=\"location-phone\"\n                inputProps={{\n                  type: \"text\",\n                  value: this.state.locationPhone || \"\",\n                }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationAddress: e.target.value });\n                }}\n                labelText=\"Address\"\n                id=\"location-address\"\n                inputProps={{ type: \"text\", value: this.state.locationAddress }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationCity: e.target.value });\n                }}\n                labelText=\"City\"\n                id=\"location-city\"\n                inputProps={{ type: \"text\", value: this.state.locationCity }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationState: e.target.value });\n                }}\n                labelText=\"State\"\n                id=\"location-state\"\n                inputProps={{ type: \"text\", value: this.state.locationState }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationCountry: e.target.value });\n                }}\n                labelText=\"Country\"\n                id=\"location-country\"\n                inputProps={{ type: \"text\", value: this.state.locationCountry }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ locationZipcode: e.target.value });\n                }}\n                labelText=\"Zipcode\"\n                id=\"location-zipcode\"\n                inputProps={{ type: \"text\", value: this.state.locationZipcode }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomMultiEmailInput\n                error={this.state.error}\n                id=\"email\"\n                disabled={true}\n                inputProps={{\n                  type: \"text\",\n                  value: this.state.locationEmailValue,\n                }}\n                labelText=\"Additonal email\"\n                onKeyDown={this.handleKeyDown}\n                onChange={this._handleEmailAddChange}\n                onPaste={this._handleEmailPasteChange}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n              {this.state.emailError !== null ? <span style={{ color: 'red' }}>{this.state.emailError}</span> : null}\n              {this.state.locationEmailCollection.map((item, key) => (\n                <div className={classes.chips} key={item}>\n                  <Chip\n                    onClick={() => this._handleEmailRemoveChange(item)}\n                    key={key}\n                    label={item + \"  X\"}\n                    className={classes.chip}\n                  />\n                </div>\n              ))}\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomDropBox\n                id=\"reportedCompany\"\n                labelText=\"Reported companies\"\n                valuekey={[\"name\"]}\n                single\n                selectedValue={this.state.selectedReportComp || []}\n                onChange={this._handleReportCompSelection}\n                value={this.state.reportCompList}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomDropBox\n                id=\"user-primary-selection\"\n                labelText=\"Select primary user\"\n                valuekey={[\"fname\", \"surname\", \"email\"]}\n                single\n                selectedValue={this.state.selectedUser || []}\n                onChange={this._handleUserSelectionInfo}\n                value={this.state.customerUserList}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomDropBox\n                id=\"user-selection\"\n                labelText=\"Select users\"\n                valuekey={[\"fname\", \"surname\", \"email\"]}\n                inputProps={{ multiple: true }}\n                selectedValue={this.state.selectedUsersList || []}\n                onChange={this._handleMultiUserSelectionInfo}\n                value={this.state.customerUserList}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            {/*krishna--comments field--start*/}\n            <GridItem xs={12} sm={12} md={12}>\n              <CustomInput\n                onChange={(e) => {\n                  this.setState({ comment: e.target.value });\n                }}\n                labelText=\"Comment\"\n                id=\"comment\"\n                inputProps={{ type: \"text\", value: this.state.comment }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n\n            {/*krishna--comments field--end*/}\n          </GridContainer>\n        </CardBody>\n        <CardFooter>\n          <Button\n            color=\"warning\"\n            size=\"sm\"\n            onClick={() => this._handleView(\"viewLocation\")}\n          >\n            Cancel\n          </Button>\n          {this.state.isEditLocationForm ? (\n            <Button color=\"warning\" size=\"sm\" onClick={this.onUpdateLocation}>\n              Update\n            </Button>\n          ) : (\n            <Button color=\"warning\" size=\"sm\" onClick={this.onCreateLocation}>\n              Create\n            </Button>\n          )}\n        </CardFooter>\n      </Card>\n    );\n  };\n\n  _renderLocationtable = () => {\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardHeader color=\"info\">\n          <h4 className={classes.cardTitleWhite}>Location</h4>\n        </CardHeader>\n        <CardBody>\n          {this.state.role === \"admin\" ? (\n            <Autocomplete\n              id=\"location-search-selection\"\n              onChange={(event, newValue) =>\n                this._handleLocationSearch(newValue)\n              }\n              options={this.state.customerLocationList}\n              getOptionLabel={(option) => option.name}\n              style={{ backgroundColor: \"white\" }}\n              autoComplete\n              includeInputInList\n              renderInput={(params) => (\n                <TextField {...params} label=\"Location\" variant=\"outlined\" />\n              )}\n            />\n          ) : null}\n          {this.state.customerLocationList ? (\n            <TableContainer className={classes.container}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"location-selected\"}\n                    >\n                      {\" \"}\n                      Location name{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"location-selected\"}\n                    >\n                      {\" \"}\n                      Email{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"location-selected\"}\n                    >\n                      {\" \"}\n                      Phone{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"location-options\"}\n                    >\n                      {\" \"}\n                      Options{\" \"}\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.customerLocationList.map((value, key) => {\n                    return (\n                      <TableRow\n                        key={key}\n                        tabIndex={-1}\n                        className={classes.tableBodyRow}\n                      >\n                        <TableCell\n                          onClick={() => this.getLocationByID(value)}\n                          className={classes.tableCell}\n                          key={\"location-name-\" + value.id}\n                        >\n                          {\" \"}\n                          {value.name || \" \"}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          onClick={() => this.getLocationByID(value)}\n                          className={classes.tableCell}\n                          key={\"primary-email-\" + value.id}\n                        >\n                          {\" \"}\n                          {value.primaryemail || \" \"}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          onClick={() => this.getLocationByID(value)}\n                          className={classes.tableCell}\n                          key={\"primary-phone-\" + value.id}\n                        >\n                          {value.primaryphone\n                            ? value.primaryphone.toString().slice(0, 3) +\n                            \"-\" +\n                            value.primaryphone.toString().slice(3, 6) +\n                            \"-\" +\n                            value.primaryphone.toString().slice(6, 10)\n                            : value.phone\n                              ? value.phone.toString().slice(0, 3) +\n                              \"-\" +\n                              value.phone.toString().slice(3, 6) +\n                              \"-\" +\n                              value.phone.toString().slice(6, 10)\n                              : \" \"}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          className={classes.tableCell}\n                          key={\"option\" + key}\n                        >\n                          <DeleteForeverIcon\n                            onClick={() => this.onDeleteLocation(value)}\n                            style={{ color: red[500] }}\n                          />\n                          <BorderColorIcon\n                            onClick={() => this.getLocationByID(value)}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          ) : (\n            \"No records found\"\n          )}\n        </CardBody>\n      </Card>\n    );\n  };\n\n  /* ---------------------------------- User render ----------------------------- */\n\n  _renderUserForm = () => {\n    return (\n      <Card>\n        <CardBody>\n          <h4>{\"User\"}</h4>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userFname: e.target.value })}\n                labelText=\"First name\"\n                id=\"user-fname\"\n                inputProps={{ type: \"text\", value: this.state.userFname }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userSurname: e.target.value })}\n                labelText=\"Last name\"\n                id=\"user-surname\"\n                inputProps={{ type: \"text\", value: this.state.userSurname }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userEmail: e.target.value })}\n                labelText=\"Email\"\n                id=\"user-email\"\n                inputProps={{ type: \"text\", value: this.state.userEmail }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) =>\n                  this.setState({\n                    userPhone: e.target.value,\n                    userPhoneError: validator.customerUserForm({\n                      phone: e.target.value,\n                    }).phoneError,\n                  })\n                }\n                labelText=\"Phone\"\n                id=\"user-phone\"\n                error={this.state.userPhoneError}\n                inputProps={{ type: \"text\", value: this.state.userPhone }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userAddress: e.target.value })}\n                labelText=\"Address\"\n                id=\"user-address\"\n                inputProps={{ type: \"text\", value: this.state.userAddress }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userCity: e.target.value })}\n                labelText=\"City\"\n                id=\"user-city\"\n                inputProps={{ type: \"text\", value: this.state.userCity }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ uesrState: e.target.value })}\n                labelText=\"State\"\n                id=\"user-state\"\n                inputProps={{ type: \"text\", value: this.state.uesrState }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userCountry: e.target.value })}\n                labelText=\"Country\"\n                id=\"user-country\"\n                inputProps={{ type: \"text\", value: this.state.userCountry }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomInput\n                onChange={(e) => this.setState({ userZipcode: e.target.value })}\n                labelText=\"Zipcode\"\n                id=\"user-zipcode\"\n                inputProps={{ type: \"text\", value: this.state.userZipcode }}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n            <GridItem xs={12} sm={12} md={6}>\n              <CustomDropBox\n                id=\"reportedCompany\"\n                labelText=\"Reported companies\"\n                single\n                valuekey={[\"name\"]}\n                selectedValue={this.state.selectedReportComp || []}\n                onChange={this._handleReportCompSelection}\n                value={this.state.reportCompList}\n                formControlProps={{\n                  fullWidth: true,\n                }}\n              />\n            </GridItem>\n          </GridContainer>\n        </CardBody>\n        <CardFooter>\n          {this.state.userPrimary ? (\n            <Button color=\"success\" size=\"sm\">\n              Primary\n            </Button>\n          ) : (\n            <Button\n              color=\"grey\"\n              size=\"sm\"\n              onClick={() => this.makeUserPrimary(this.state.selectedUserID)}\n            >\n              Make primary\n            </Button>\n          )}\n          {!this.state.isViewUserFormEdit ? (\n            <Button color=\"success\" size=\"sm\" onClick={this.onCreateUser}>\n              Create\n            </Button>\n          ) : (\n            <Button color=\"success\" size=\"sm\" onClick={this.onUpdateUser}>\n              Update\n            </Button>\n          )}\n          <Button\n            color=\"warning\"\n            size=\"sm\"\n            onClick={() => this._handleView(\"viewUser\")}\n          >\n            Cancel\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  };\n\n  _renderUsertable = () => {\n    const { classes } = this.props;\n    return (\n      <Card>\n        <CardHeader color=\"info\">\n          <h4 className={classes.cardTitleWhite}>Users</h4>\n        </CardHeader>\n        <CardBody>\n          <Autocomplete\n            id=\"user-search-selection\"\n            onChange={(event, newValue) => this._handleUserSearch(newValue)}\n            options={this.state.customerUserList}\n            getOptionLabel={(option) => option.fname}\n            style={{ backgroundColor: \"white\" }}\n            autoComplete\n            includeInputInList\n            renderInput={(params) => (\n              <TextField {...params} label=\"Users\" variant=\"outlined\" />\n            )}\n          />\n          {this.state.isLoading ? (\n            <Loader type=\"ThreeDots\" color=\"#a5d1e6\" height={50} width={50} />\n          ) : this.state.customerUserList ? (\n            <TableContainer className={classes.container}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"user-fname\"}\n                    >\n                      {\" \"}\n                      Name{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"user-fname\"}\n                    >\n                      {\" \"}\n                      Email{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"user-fname\"}\n                    >\n                      {\" \"}\n                      Phone{\" \"}\n                    </TableCell>\n                    <TableCell\n                      className={\n                        classes.tableCell + \" \" + classes.tableHeadCell\n                      }\n                      key={\"option\"}\n                    >\n                      {\" \"}\n                      Option{\" \"}\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.customerUserList.map((value, key) => {\n                    return (\n                      <TableRow\n                        key={key}\n                        tabIndex={-1}\n                        className={classes.tableBodyRow}\n                      >\n                        <TableCell\n                          onClick={() => this.getUserByID(value)}\n                          className={classes.tableCell}\n                          key={\"location-name-\" + value.id}\n                        >\n                          {\" \"}\n                          {value.fname || \" \"} {value.surname || \" \"}{\" \"}\n                          {value.primary ? (\n                            <text style={{ color: \"green\" }}>\n                              {\" PRIMARY \"}\n                            </text>\n                          ) : null}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          onClick={() => this.getUserByID(value)}\n                          className={classes.tableCell}\n                          key={\"location-name-\" + value.id}\n                        >\n                          {\" \"}\n                          {value.primaryemail || value.email || \" \"}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          onClick={() => this.getUserByID(value)}\n                          className={classes.tableCell}\n                          key={\"location-name-\" + value.id}\n                        >\n                          {value.primaryphone\n                            ? value.primaryphone.toString().slice(0, 3) +\n                            \"-\" +\n                            value.primaryphone.toString().slice(3, 6) +\n                            \"-\" +\n                            value.primaryphone.toString().slice(6, 10)\n                            : value.phone\n                              ? value.phone.toString().slice(0, 3) +\n                              \"-\" +\n                              value.phone.toString().slice(3, 6) +\n                              \"-\" +\n                              value.phone.toString().slice(6, 10)\n                              : \" \"}{\" \"}\n                        </TableCell>\n                        <TableCell\n                          className={classes.tableCell}\n                          key={\"option\" + key}\n                        >\n                          <DeleteForeverIcon\n                            onClick={() => this.onDeleteUser(value)}\n                            style={{ color: red[500] }}\n                          />\n                          <BorderColorIcon\n                            onClick={() => this.getUserByID(value)}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          ) : (\n            \"No records found\"\n          )}\n        </CardBody>\n      </Card>\n    );\n  };\n\n  _renderCustomerProfileCards = () => {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\" stats icon>\n              <CardIcon color=\"warning\">\n                <Person />\n              </CardIcon>\n              <p className={classes.cardCategory}>Users</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.customerUserList.length || 0}\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <a\n                href=\"#users\"\n                onClick={() =>\n                  this._checkAccess(\"userView\")\n                    ? this._handleView(\"viewUser\")\n                    : null\n                }\n              >\n                {\" \"}\n                {this.state.isViewUser ? \"Exit\" : \"View\"}{\" \"}\n              </a>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"warning\" stats icon>\n              <CardIcon color=\"warning\">\n                <PinDropIcon />\n              </CardIcon>\n              <p className={classes.cardCategory}>Location</p>\n              <h3 className={classes.cardTitle}>\n                {this.state.customerLocationList.length || 0}\n              </h3>\n            </CardHeader>\n            <CardFooter stats>\n              <a\n                href=\"#location\"\n                onClick={() =>\n                  this._checkAccess(\"locationView\")\n                    ? this._handleView(\"viewLocation\")\n                    : null\n                }\n              >\n                {\" \"}\n                {this.state.isViewLocation ? \"Exit\" : \"View\"}{\" \"}\n              </a>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            {this.state.role !== \"customer\" ? (\n              <CardHeader color=\"primary\">\n                <h4 className={classes.cardTitleWhite}>\n                  {this.state.isView\n                    ? \"Details of \" + this.state.selectedCompany.name\n                    : \"Create Customer\"}\n                </h4>\n                <p className={classes.cardCategoryWhite}>\n                  {this.state.isView ? \" \" : \"Complete new customer form\"}\n                </p>\n              </CardHeader>\n            ) : null}\n            <CardBody>\n              {this.state.isView ? this._renderCustomerProfileCards() : null}\n              {this.state.role === \"customer\" && !this.state.isView\n                ? \" Hi customer\"\n                : \"\"}\n              {!this.state.isView ? (\n                this._checkAccess(\"customerCreate\") ? (\n                  <GridContainer>\n                    <GridItem xs={12} sm={12} md={12}>\n                      <CustomInput\n                        onChange={(e) => {\n                          this.setState({ newCompanyName: e.target.value });\n                        }}\n                        labelText=\"Company name\"\n                        id=\"companyname\"\n                        inputProps={{\n                          type: \"text\",\n                          value: this.state.newCompanyName,\n                        }}\n                        formControlProps={{\n                          fullWidth: true,\n                        }}\n                      />\n                    </GridItem>\n                  </GridContainer>\n                ) : null\n              ) : (\n                <div>\n                  {this._checkAccess(\"customerCreate\") ? (\n                    <GridContainer>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <CustomInput\n                          onChange={(e) => {\n                            this.setState({ newCompanyName: e.target.value });\n                          }}\n                          labelText={this.state.selectedCompany.name || \"Company name\"}\n                          id=\"companyname\"\n                          inputProps={{\n                            type: \"text\",\n                            value: this.state.newCompanyName,\n                          }}\n                          formControlProps={{\n                            fullWidth: true,\n                          }}\n                        />\n                      </GridItem>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <Button color=\"success\" size=\"sm\" onClick={() => this.onUpdateCustomerUser(this.state.newCompanyName)}>\n                          {`Update customer name`}\n                        </Button>\n                      </GridItem>\n                    </GridContainer>\n                  ) : null}\n                  {this._checkAccess(\"userForm\") ? (\n                    <Button\n                      color=\"success\"\n                      size=\"sm\"\n                      onClick={() => this._handleView(\"viewUserForm\")}\n                    >\n                      Create user\n                    </Button>\n                  ) : null}\n                  {this._checkAccess(\"locationForm\") ? (\n                    <Button\n                      color=\"success\"\n                      size=\"sm\"\n                      onClick={() => this._handleView(\"viewLocationForm\")}\n                    >\n                      Create location\n                    </Button>\n                  ) : null}\n                  {this._checkAccess(\"privilegeForm\") ? (\n                    <Button\n                      color=\"success\"\n                      size=\"sm\"\n                      onClick={() => this._handleView(\"viewPrivilege\")}\n                    >\n                      Create privilege\n                    </Button>\n                  ) : null}\n                  {this.state.isView && this.state.isViewPrivilege ? (\n                    <Button\n                      color=\"success\"\n                      size=\"sm\"\n                      onClick={() => this._handleView(\"viewPrivilegeForm\")}\n                    >\n                      Create privilege\n                    </Button>\n                  ) : null}\n                </div>\n              )}\n\n              {this._checkAccess(\"userView\")\n                ? this.state.isView && this.state.isViewUser\n                  ? this._renderUsertable()\n                  : null\n                : null}\n              {this._checkAccess(\"userForm\")\n                ? this.state.isView && this.state.isViewUserForm\n                  ? this._renderUserForm()\n                  : null\n                : null}\n              {this._checkAccess(\"locationView\")\n                ? this.state.isView && this.state.isViewLocation\n                  ? this._renderLocationtable()\n                  : null\n                : null}\n              {this._checkAccess(\"locationForm\")\n                ? this.state.isView && this.state.isViewLocationForm\n                  ? this._renderLocationForm()\n                  : null\n                : null}\n              {this._checkAccess(\"privilegeView\")\n                ? this.state.isView && this.state.isViewPrivilege\n                  ? this._renderPrivilegeSelection()\n                  : null\n                : null}\n              {this._checkAccess(\"privilegeForm\")\n                ? this.state.isView && this.state.isViewPrivilegeForm\n                  ? this._renderPrivilegeForm()\n                  : null\n                : null}\n            </CardBody>\n            <CardFooter>\n              <h5 style={{ color: \"red\" }}>{this.state.message}</h5>\n              {this.state.role !== \"customer\" ? (\n                !this.state.isView ? (\n                  <Button\n                    disabled={this.state.isDisabled}\n                    onClick={() => this.onCreateCustomer()}\n                    color=\"primary\"\n                  >\n                    Create\n                  </Button>\n                ) : null\n              ) : null}\n              {this.state.isView ? (\n                <Button onClick={this._handleReset} color=\"primary\">\n                  Reset\n                </Button>\n              ) : null}\n            </CardFooter>\n          </Card>\n        </GridItem>\n        {!this.state.isView ? (\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Customers</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Updated on 31st March, 2020\n                </p>\n              </CardHeader>\n              <CardBody>\n                <Autocomplete\n                  id=\"client-search-selection\"\n                  onChange={(event, newValue) =>\n                    this._handleCustomerSelection(newValue)\n                  }\n                  options={this.state.customerList}\n                  getOptionLabel={(option) => option.name}\n                  style={{ backgroundColor: \"white\" }}\n                  autoComplete\n                  includeInputInList\n                  renderInput={(params) => (\n                    <TextField {...params} label=\"Customer\" variant=\"outlined\" />\n                  )}\n                />\n                {this.state.isLoading ? (\n                  <Loader\n                    type=\"ThreeDots\"\n                    color=\"#a5d1e6\"\n                    height={50}\n                    width={50}\n                  />\n                ) : (\n                  <div>\n                    <Table className={classes.table}>\n                      <TableHead className={classes.info}>\n                        <TableRow className={classes.tableHeadRow}>\n                          <TableCell\n                            className={\n                              classes.tableCell + \" \" + classes.tableHeadCell\n                            }\n                            key={\"company\"}\n                          >\n                            {\" \"}\n                            Company name{\" \"}\n                          </TableCell>\n                          <TableCell\n                            className={\n                              classes.tableCell + \" \" + classes.tableHeadCell\n                            }\n                            key={\"email\"}\n                          >\n                            {\" \"}\n                            Email{\" \"}\n                          </TableCell>\n                          <TableCell\n                            className={\n                              classes.tableCell + \" \" + classes.tableHeadCell\n                            }\n                            key={\"phone\"}\n                          >\n                            {\" \"}\n                            Phone{\" \"}\n                          </TableCell>\n                          <TableCell\n                            className={\n                              classes.tableCell + \" \" + classes.tableHeadCell\n                            }\n                            key={\"option\"}\n                          >\n                            {\" \"}\n                            Options{\" \"}\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {this.state.customerList.length\n                          ? this.state.customerList\n                            .slice(\n                              this.state.customerListPage *\n                              this.state.customerListRowsPerPage,\n                              this.state.customerListPage *\n                              this.state.customerListRowsPerPage +\n                              this.state.customerListRowsPerPage\n                            )\n                            .map((value, key) => (\n                              <TableRow\n                                key={key}\n                                tabIndex={-1}\n                                className={classes.tableBodyRow}\n                              >\n                                <TableCell\n                                  onClick={() =>\n                                    this.fetchCustomerInfo(value)\n                                  }\n                                  className={classes.tableCell}\n                                  key={\"companyname\" + key}\n                                >\n                                  {\" \"}\n                                  {value.name || \" \"}{\" \"}\n                                </TableCell>\n                                <TableCell\n                                  onClick={() =>\n                                    this.fetchCustomerInfo(value)\n                                  }\n                                  className={classes.tableCell}\n                                  key={\"email\" + key}\n                                >\n                                  {value.primaryemail || value.email || \" \"}{\" \"}\n                                </TableCell>\n                                <TableCell\n                                  onClick={() =>\n                                    this.fetchCustomerInfo(value)\n                                  }\n                                  className={classes.tableCell}\n                                  key={\"phone\" + key}\n                                >\n                                  {value.primaryphone\n                                    ? value.primaryphone\n                                      .toString()\n                                      .slice(0, 3) +\n                                    \"-\" +\n                                    value.primaryphone\n                                      .toString()\n                                      .slice(3, 6) +\n                                    \"-\" +\n                                    value.primaryphone\n                                      .toString()\n                                      .slice(6, 10)\n                                    : value.phone\n                                      ? value.phone.toString().slice(0, 3) +\n                                      \"-\" +\n                                      value.phone.toString().slice(3, 6) +\n                                      \"-\" +\n                                      value.phone.toString().slice(6, 10)\n                                      : \" \"}{\" \"}\n                                </TableCell>\n                                <TableCell\n                                  className={classes.tableCell}\n                                  key={\"option\" + key}\n                                >\n                                  <DeleteForeverIcon\n                                    onClick={() => this.deleteCustomer(value)}\n                                    style={{ color: red[500] }}\n                                  />\n                                  <BorderColorIcon\n                                    onClick={() =>\n                                      this.fetchCustomerInfo(value)\n                                    }\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ))\n                          : \"No customers records found\"}\n                      </TableBody>\n                    </Table>\n                    <TablePagination\n                      component=\"div\"\n                      count={this.state.customerList.length}\n                      rowsPerPage={this.state.customerListRowsPerPage}\n                      page={this.state.customerListPage}\n                      onChangePage={this._handleCustomerChangePage}\n                      onChangeRowsPerPage={\n                        this._handleCustomerChangeRowsPerPage\n                      }\n                    />\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        ) : null}\n      </GridContainer>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(CustomerViewPage);\n","import React, { useState, useEffect } from 'react'\nimport SwitchableTab from 'components/SwitchableTab'\nimport ManagerViewPage from './ManagerViewPage';\nimport EmployeeViewPage from './EmployeeViewPage';\nimport CustomerViewPage from './CustomerViewPage';\nimport auth from 'services/auth';\n\nfunction UserManagement() {\n  const authRole = auth.authRole();\n  const [selectedIndex, changeSelectedIndex] = useState(2)\n  const [renderSection, setRenderSection] = useState(null)\n\n  const changeSection = (index = 0) => {\n    changeSelectedIndex(index);\n    setRenderSection(MyTabConfig[index].component)\n  }\n\n  const MyTabConfig = [\n    {\n      title: \"Customer\", id: 'customer', href: 'customer',\n      component: <CustomerViewPage />,\n      onClick: () => changeSection(0),\n    }\n  ]\n\n  if (authRole == 'admin' || authRole == 'manager') {\n    MyTabConfig.push({\n      title: \"Employee\", id: 'employee', href: 'employee',\n      component: <EmployeeViewPage />,\n      onClick: () => changeSection(1),\n    })\n  }\n  if (authRole == 'admin') {\n    MyTabConfig.push({\n      title: \"Manager\", id: 'manager', href: 'manager',\n      component: <ManagerViewPage />,\n      onClick: () => changeSection(2),\n    })\n  }\n\n  useEffect(() => {\n    changeSection()\n  }, [])\n\n  return (\n    <div>\n      <SwitchableTab tabValues={MyTabConfig} selectedIndex={selectedIndex} />\n      {renderSection}\n    </div>\n  )\n}\n\nexport default UserManagement\n\nexport const userManagementConfig = {\n  path: '/user-management',\n  name: \"User Management\",\n  icon: \"assignment_ind\",\n  component: UserManagement,\n  layout: \"/home\",\n}","export default {\n  tableColumns: [\n    { title: 'Labid', key: 'labid' },\n    { title: 'Location Name', key: 'company', editable: 'text' },\n    { title: 'Test', key: 'result', editable: 'textfield' },\n    { title: 'Action', key: 'button', editable: 'update-button', defaultLabel: 'Update' },\n  ],\n}","import React from 'react'\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\n\nconst InputField = ({\n  key, index, labelText, disabled, onChange, refValue, availableInputDataSet\n}) => {\n\n  return (\n    (availableInputDataSet && availableInputDataSet.length)\n      ? <Autocomplete\n        id={`test-update-field-${key}-${index}`}\n        onChange={(event, newValue) => onChange(newValue)}\n        options={availableInputDataSet}\n        getOptionLabel={(option) => option}\n        style={{ backgroundColor: \"white\" }}\n        autoComplete\n        includeInputInList\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label={labelText}\n            variant=\"outlined\"\n          />\n        )}\n      />\n      : <CustomInput\n        id={`test-update-field-${key}-${index}`}\n        key={`test-update-field-${key}-${index}`}\n        labelText={labelText}\n        disabled={disabled}\n        inputProps={{ type: \"text\" }}\n        formControlProps={{\n          fullWidth: false,\n        }}\n        onChange={(e) => onChange(e.target.value, refValue)}\n      />\n  )\n\n}\n\nexport default InputField","import React, { Component } from 'react'\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\nimport { Autocomplete } from '@material-ui/lab';\nimport moment from \"moment-timezone\";\nimport Loader from \"react-loader-spinner\";\nimport { TextField } from '@material-ui/core';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer\";\nimport Card from \"components/Card/Card\";\nimport CardHeader from \"components/Card/CardHeader\";\nimport CardBody from \"components/Card/CardBody\";\nimport sampleService from 'services/sample.service';\nimport { CustomDateRangePicker } from 'components/CustomInput/CustomInput';\nimport sectionConfig from './sectionConfig';\nimport { dataControllerService } from \"services/api.services\";\nimport logger from '_helper/logger';\nimport InputField from './InputField';\nimport Button from \"components/CustomButtons/Button.js\";\n\nconst useStyles = () => styles;\n\nconst initialState = {\n  testRecords: [],\n  selectedtestRecord: {},\n  dateReceived: moment().tz(\"America/Los_Angeles\").format(\"LL\"),\n  dateOutRange: [null, null],\n  tableRecords: [],\n  isLoading: false,\n  availableInputDataSet: [],\n}\n\nexport class WorkFlowManagement extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  _initializeData = () => {\n    /*\n      All API Calls required for data population on component start defined here... \n    */\n  }\n\n  getLabTests = () => {\n    const { dateOutRange } = this.state\n    const startDate = dateOutRange[0];\n    const endDate = dateOutRange[1];\n    dataControllerService.getLabTestListByDate(startDate, endDate, ({ data: testRecords = [] }) => {\n      console.log(testRecords, 'testRecords');\n      this.setState({ testRecords });\n    })\n  }\n\n  getTableData = async () => {\n    const { selectedtestRecord, dateOutRange } = this.state\n    if (selectedtestRecord && dateOutRange[0] && dateOutRange[1]) {\n      this.setState({ isLoading: true })\n      try {\n        logger(selectedtestRecord, 'Selected Lab Test')\n        const { data = [] } = await sampleService.getPendingLabtestsByLabTestFilter({\n          test_id: selectedtestRecord._id || null,\n          test_name: selectedtestRecord.name || null,\n          start_date: moment(dateOutRange[0]).format('ll') || null,\n          end_date: moment(dateOutRange[1]).format('ll') || null,\n        })\n        this.setState({ tableRecords: data, isLoading: false })\n      } catch (error) {\n        logger(error)\n      }\n    }\n  }\n\n  updateTestValue = async (eventData, recordRef) => {\n    try {\n      const testResult = eventData\n      const content = {\n        lab_ref: recordRef._id,\n        test_ref: recordRef.testRefId,\n        result: testResult,\n      }\n      logger(content, 'content')\n\n      const { data = [] } = await sampleService.updatePendingLabtestsByLabTestFilter(content)\n      logger(data);\n\n    } catch (e) {\n      logger(e, 'Update failed')\n    }\n  }\n\n  _handletestSelection = test => {\n    if (test) {\n      this.setState({\n        selectedtestRecord: test,\n        availableInputDataSet: test.dataAvailable ? test.dataValue : initialState.availableInputDataSet\n      }, () => this.getTableData())\n    } else {\n      this.setState({\n        selectedtestRecord: {},\n        availableInputDataSet: initialState.availableInputDataSet,\n      }, () => this.getTableData())\n    }\n  }\n\n  _handleChangeDateOutRange = (range) => {\n    if (range === null) {\n      range = [null, null];\n    }\n    this.setState({\n      dateOutRange: [...range]\n    }, () => this.getLabTests());\n  }\n\n  componentDidMount = () => {\n    this._initializeData();\n  }\n\n  RenderRow = (props) => {\n    if (props.editable === 'textfield') {\n      return (\n        <InputField {...props} />\n      )\n    }\n    if (props.editable === 'update-button') {\n      return (\n        <Button {...props}>{props.label}</Button>\n      )\n    }\n    return (\n      <TableCell {...props}>{props.label}</TableCell>\n    )\n  }\n\n  downloadReport = async () => {\n    const { selectedtestRecord, dateOutRange } = this.state\n    if (selectedtestRecord && dateOutRange[0] && dateOutRange[1]) {\n      try {\n        await sampleService.getWorkOrderSectionReportByDate({\n          test_id: selectedtestRecord._id || null,\n          test_name: selectedtestRecord.name || null,\n          start_date: moment(dateOutRange[0]).format('ll') || null,\n          end_date: moment(dateOutRange[1]).format('ll') || null,\n        })\n      } catch (error) {\n        logger(error)\n      }\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { testRecords, isLoading, tableRecords, selectedtestRecord, availableInputDataSet, dateOutRange } = this.state;\n    const selectedTestName = selectedtestRecord.name || \"\";\n    logger(tableRecords.length, 'tableRecords length')\n\n    return (\n      <div>\n        <GridContainer spacing={2}>\n\n          <GridItem xs={12} sm={12} md={3} lg={3}>\n            <CustomDateRangePicker\n              key=\"sifsearchdatepicker\"\n              id=\"sifsearchdatepicker\"\n              // labelText=\"Date range\"\n              onChange={this._handleChangeDateOutRange}\n              inputProps={{ value: this.state.dateOutRange }}\n              style={{ backgroundColor: \"white\", width: 260 }}\n              formControlProps={{\n                fullWidth: true,\n              }}\n            />\n          </GridItem>\n          {dateOutRange[0] && dateOutRange[1]\n            ? <GridItem xs={12} sm={12} md={3} lg={3}>\n            <Autocomplete\n              key=\"test-search\"\n              id=\"test-search\"\n              onChange={(evt, newValue) =>\n                this._handletestSelection(newValue)\n              }\n              options={testRecords}\n              getOptionLabel={(option) => option.name}\n              style={{ backgroundColor: \"white\", width: 260, marginBottom: 20 }}\n              autoComplete\n              includeInputInList\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select a Lab Test\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </GridItem>\n            : null}\n\n          <GridItem xs={12} sm={12} md={3} lg={3}>\n            <Button onClick={this.downloadReport} color=\"success\">\n              Download Report\n            </Button>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={3} lg={3}>\n            <Button onClick={this.downloadReport} color=\"success\">\n              Download Report\n            </Button>\n          </GridItem>\n        </GridContainer>\n\n        {/* Table Starts here... */}\n\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"info\">\n                <h4 className={classes.cardTitleWhite}>Work Flow</h4>\n              </CardHeader>\n              <CardBody>\n                {isLoading ? (\n                  <GridItem xs={12} sm={12} md={4}>\n                    <Loader\n                      type=\"ThreeDots\"\n                      color=\"#a5d1e6\"\n                      height={50}\n                      width={50}\n                    />\n                  </GridItem>\n                ) : (\n                  <div className={classes.tableResponsive}>\n                    <Table className={classes.table}>\n                      <TableHead className={classes.info}>\n                        <TableRow className={classes.tableHeadRow}>\n                            {sectionConfig.tableColumns.map(({ title }, index) => (\n                              <TableCell className={classes.tableCell + \" \" + classes.tableHeadCell} key={`table-header-${Math.random(10)}-${index}`}>\n                              {title}\n                            </TableCell>\n                          ))}\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {tableRecords.length\n                          ? (tableRecords\n                            // .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                            .map((value, key) => (\n                              <TableRow key={key} tabIndex={-1} className={classes.tableBodyRow} >\n                                {sectionConfig.tableColumns.map(({ key, editable, defaultLabel }, index) =>\n                                  <TableCell className={classes.tableCell} key={`labid-${key}-${index}`}>\n                                    <this.RenderRow\n                                      editable={editable}\n                                      key={key}\n                                      index={index}\n                                      labelText={selectedTestName}\n                                      onChange={(e) => this.updateTestValue(e, value)}\n                                      availableInputDataSet={availableInputDataSet}\n                                      label={value[key] || defaultLabel}\n                                    />\n                                  </TableCell>\n                                )}\n                              </TableRow>\n                            ))\n                          ) : (\n                            <TableRow>No records available</TableRow>\n                          )}\n                      </TableBody>\n                    </Table>\n                    {/* <TablePagination\n                      component=\"div\"\n                      count={this.state.sifList.length}\n                      rowsPerPage={this.state.rowsPerPage}\n                      page={this.state.page}\n                      onChangePage={this._handleChangePage}\n                      onChangeRowsPerPage={this._handleChangeRowsPerPage}\n                    /> */}\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    )\n  }\n}\n\nexport default WorkFlowManagement;\n\nexport const workFlowManagementConfig = {\n  path: \"/work-flow-management\",\n  name: \"Work Flow Management\",\n  icon: \"content_paste\",\n  component: withStyles(useStyles)(WorkFlowManagement),\n  layout: \"/home\"\n}\n","import Dashboard from \"@material-ui/icons/Dashboard\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport InsertChart from \"@material-ui/icons/InsertChart\";\nimport auth from \"services/auth\"\nimport DashboardPage from \"views/Dashboard\";\nimport Sample from \"views/SampleV2\";\nimport Trending from \"views/Trending\";\nimport Controller from \"views/Controller\";\nimport PersonViewPage from \"views/Person\";\nimport ReportPage from 'views/Reports';\nimport OrderKits from 'views/OrderKits';\nimport CheckList from 'views/CheckList';\nimport Environmental_lab_reports from 'views/Environmental_lab_reports';\nimport GC_FTIR_OIL_Report, { SECTION_NAME as GC_FTIR_OIL_SECTION_NAME } from 'views/GC_FTIR_OIL_Report';\nimport { userManagementConfig as userManagement } from \"views/UserManagement\";\nimport { workFlowManagementConfig as workFlowManagement } from \"views/WorkFlowManagement\";\n\n/* \n**************** Permission Level control ****************\n authorizedUserOnlyPermission = Any authorized user permitted\n employeeLevelPermission = Authorized till Employee Level\n managerLevelPermission = Authorized till Manager Level\n adminOnlyPermission = Authorized for admin level only\n customerOnlyPermission = Authorized for customer level only\n*/\nconst authRole = auth.authRole();\nconst authorizedUserOnlyPermission = authRole == 'admin' || authRole == 'manager' || authRole == 'employee' || authRole == 'customer';\nconst employeeLevelPermission = authRole == 'admin' || authRole == 'manager' || authRole == 'employee';\nconst managerLevelPermission = authRole == 'admin' || authRole == 'manager';\nconst customerOnlyPermission = authRole == 'customer';\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/home\"\n  }\n];\n\nif (customerOnlyPermission)\n  dashboardRoutes.push({\n    path: \"/my-reports\",\n    name: \"Reports\",\n    icon: \"content_paste\",\n    component: ReportPage,\n    layout: \"/home\"\n  })\n\nif (employeeLevelPermission)\n  dashboardRoutes.push({\n    path: \"/order-booking\",\n    name: \"Sample\",\n    icon: \"content_paste\",\n    component: Sample,\n    layout: \"/home\"\n  },\n    {\n      path: workFlowManagement.path,\n      name: workFlowManagement.name,\n      icon: workFlowManagement.icon,\n      component: workFlowManagement.component,\n      layout: workFlowManagement.layout\n    },\n  );\n\nif (authorizedUserOnlyPermission)\n  dashboardRoutes.push({\n    path: \"/trending\",\n    name: \"Trending\",\n    icon: InsertChart,\n    component: Trending,\n    layout: \"/home\"\n  },\n    {\n      path: \"/orderKits\",\n      name: \"OrderKits\",\n      icon: \"shopping_cart\",\n      component: OrderKits,\n      layout: \"/home\"\n    },\n    {\n      path: \"/checklist\",\n      name: \"Check List\",\n      icon: \"fact_check\",\n      component: CheckList,\n      layout: \"/home\"\n    },\n    {\n      path: \"/environmental_lab_reports\",\n      name: \"FOI Lab Environmental\",\n      icon: \"assignment_turned_in\",\n      component: Environmental_lab_reports,\n      layout: \"/home\"\n    },\n    {\n      path: \"/gc_ftir_oil_report\",\n      name: `${GC_FTIR_OIL_SECTION_NAME} Report`,\n      icon: \"assignment_turned_in\",\n      component: GC_FTIR_OIL_Report,\n      layout: \"/home\"\n    })\n\nif (authRole == 'admin')\n  dashboardRoutes.push({\n    path: \"/value-control\",\n    name: \"Controller\",\n    icon: LibraryBooks,\n    component: Controller,\n    layout: \"/home\"\n  })\n\nif (authorizedUserOnlyPermission)\n  dashboardRoutes.push(\n    {\n      path: userManagement.path,\n      name: userManagement.name,\n      icon: userManagement.icon,\n      component: userManagement.component,\n      layout: userManagement.layout,\n    },\n    {\n      path: \"/profile\",\n      name: \"Profile\",\n      icon: \"manage_accounts\",\n      component: PersonViewPage,\n      layout: \"/home\"\n    })\n\nexport default (auth.isAuthenticated() && authRole) ? dashboardRoutes : [];\n","import {\n  drawerWidth,\n  transition,\n  container\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst appStyle = theme => ({\n  wrapper: {\n    position: \"relative\",\n    top: \"0\",\n    height: \"100vh\",\n    background: \"#ffff\",\n  },\n  mainPanel: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    },\n    overflow: \"auto\",\n    position: \"relative\",\n    float: \"right\",\n    ...transition,\n    maxHeight: \"100%\",\n    width: \"100%\",\n    overflowScrolling: \"touch\"\n  },\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\"\n  },\n  container,\n  map: {\n    marginTop: \"70px\"\n  }\n});\n\nexport default appStyle;\n","import React from \"react\";\nimport { Switch, Redirect, Route, } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Navbar from \"components/Navbars/Navbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\"\nimport routes from \"routes.js\";\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n// import bgImage from \"assets/img/sideBarImage.jpg\";\n// import logo from \"assets/img/foi-logo.png\";\nimport auth from \"services/auth\";\nconst logo = 'https://files.foilab.com/assets/uploads/report_company_logo/foi-logo.png'\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/home\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from={\"/\"} to={\"/home/dashboard\"} />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default ({ props, ...rest }) => {\n\n  const classes = useStyles();\n\n  const mainPanel = React.createRef();\n\n  // const [image] = React.useState(bgImage);\n  const [color] = React.useState(\"blue\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const getRoute = () => {\n    const isAuthenticated = auth.isAuthenticated();\n    return isAuthenticated;\n  };\n\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n\n  return (\n    <div className={classes.wrapper}>\n      <Sidebar\n        routes={routes}\n        logoText={\"FOI Labs\"}\n        logo={logo}\n        // image={image}\n        handleDrawerToggle={handleDrawerToggle}\n        open={mobileOpen}\n        color={color}\n        {...rest}\n      />\n      <div className={classes.mainPanel} ref={mainPanel}>\n        <Navbar\n          routes={routes}\n          handleDrawerToggle={handleDrawerToggle}\n          {...rest}\n        />\n        {getRoute() ? (\n          <div className={classes.content}>\n            <div className={classes.container}>{switchRoutes}</div>\n          </div>\n        ) : (\n          <div className={classes.map}>{switchRoutes}</div>\n        )}\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport auth from 'services/auth';\n\nexport default ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={\n            props => {\n                return auth.isAuthenticated()\n                    ? <Component {...props} />\n                    : <Redirect exact to={{ pathname: '/login', state: { from: props.location } }} />\n            }\n        } />\n    )\n}","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { COMPANY_NAME_SHORT, COMPANY_HREF } from 'config';\nconst { REACT_APP_VERSION } = process.env\nexport const Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href={COMPANY_HREF}>\n        {COMPANY_NAME_SHORT}\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {REACT_APP_VERSION}\n    </Typography>\n  );\n}","import React, { useState } from 'react'\nimport Box from '@material-ui/core/Box';\nimport './style.css';\nimport auth from 'services/auth'\nimport { Copyright } from 'config/copyright.config';\n\nconst LoginV3 = (props) => {\n\n  auth._onLoad(() => {\n    props.history.push('/home')\n    return null\n  });\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const onSubmit = async () => {\n    const loginData = {\n      email: email.trim(),\n      password: password.trim(),\n    }\n\n    auth.login(loginData, () => {\n    })\n  }\n\n  return (\n    <div class='body'>\n      <section class='login' id='login'>\n        <div class='head'>\n          <h1 class='company'>Sign In </h1>\n        </div>\n        <div class='form' onSubmit={onSubmit}>\n          <form>\n            <input type=\"text\" placeholder='Email' class='text' id='username' required onChange={event => setEmail(event.target.value)} ></input>\n            <input type=\"password\" placeholder='••••••••••••••' class='password' id='password' required onChange={event => setPassword(event.target.value)} ></input>\n            <a onClick={onSubmit} class='btn-login' id='do-login' disabled={!email || !password}>Login</a>\n            {/* <a href=\"#\" class='forgot'>Forgot?</a> */}\n          </form>\n        </div>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </section>\n    </div>\n  )\n}\n\nexport default LoginV3;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport ReactGA from 'react-ga';\n\nimport DashboardLayout from \"layouts/DashboardLayout.jsx\";\nimport \"assets/css/material-dashboard-react.css?v=1.8.0\";\nimport ProtectedRoute from 'config/protected.route';\nimport LoginV3 from \"layouts/LoginV3\";\n\nconst hist = createBrowserHistory();\nReactGA.initialize('UA-153857702-1');\n\nReactDOM.render(\n  <div>\n    <ReactNotification />\n    <Router history={hist}>\n      <Switch>\n        {/* <Route path=\"/login\" component={Login} /> */}\n        {/* <Route path=\"/loginv2\" component={LoginV2} /> */}\n        <Route path=\"/login\" component={LoginV3} />\n        <ProtectedRoute path={\"/home\"} component={DashboardLayout} />\n        {localStorage.getItem('foiLabUserToken') ? <Redirect from='/' to='/home/dashboard' /> : <Redirect from='/' to='/login' />}\n        <Route path=\"*\" component={() => \"ERROR 404 Page not found. Please reload\"} />\n      </Switch>\n    </Router>\n  </div>,\n  document.getElementById(\"root\")\n);\n","const {\n    REACT_APP_SERVER: SERVER,\n    REACT_APP_DATA_CONTROLLER_SERVER: DATA_CONTROLLER_SERVER,\n    REACT_APP_USER_CONTROLLER_SERVER: USER_CONTROLLER_SERVER,\n    REACT_APP_SAMPLE_CONTROLLER_SERVER: SAMPLE_CONTROLLER_SERVER,\n    REACT_APP_REPORTS_SERVER: REPORTS_SERVER,\n    REACT_APP_COMPANY_NAME: COMPANY_NAME,\n    REACT_APP_COMPANY_NAME_SHORT: COMPANY_NAME_SHORT,\n    REACT_APP_COMPANY_HREF: COMPANY_HREF,\n    REACT_APP_COMPANY_BRIEF: COMPANY_BRIEF,\n    REACT_APP_COMPANY_SUMMERY: COMPANY_SUMMERY,\n    REACT_APP_DEBUG: DEBUG,\n    REACT_APP_CLIENT_ID: CLIENT_ID,\n} = process.env\n\nmodule.exports = {\n    SERVER,\n    DATA_CONTROLLER_SERVER,\n    USER_CONTROLLER_SERVER,\n    SAMPLE_CONTROLLER_SERVER,\n    REPORTS_SERVER,\n    COMPANY_NAME,\n    COMPANY_NAME_SHORT,\n    COMPANY_HREF,\n    COMPANY_BRIEF,\n    COMPANY_SUMMERY,\n    DEBUG,\n    CLIENT_ID,\n}\n","module.exports = {\n  // Get list on load\n  fuelList: [], LabTestList: [], isLoading: true,\n  // Pagination\n  page: 0, rowsPerPage: 10,\n  // Lab test\n  labTestName: \"\", labTestMethod: \"\", labTestDLT: \"\", LabTestResultType: [], isViewLabTest: false, labTestNameError: false, selectedResultType: [], selectedFuelList: [], selectedLabTest: {}, isCreateLabTest: false,\n  // Lab test limit \n  selectedLabTestLimit: [], selectedLabTestLimitFuel: [], labTextLimitText: \"\", labTestLimitValue: \"\", labTestLimitAdditionError: \"\", selectedLabTestResponseLimit: [], selectedLimitIndex: \"\", isLimitEdit: false, labTestLimitMinComment: \"\", labTestLimitMaxComment: \"\",\n  // Lab test Value-\n  selectedResultValue: [{ id: \"user defined\", name: \"user defined\" }], LabTestResultValue: [{ id: \"user defined\", name: \"user defined\" }, { id: \"predefined\", name: \"predefined\" }], resultValues: [\"\"], showPredefinedValues: false, resultValue: \"\"\n}"],"sourceRoot":""}